{"ast":null,"code":"export const rootName = \"\";\nexport const HOME_ROUTE = process.env.REACT_APP_HOME_ROUTE;\nexport const API_HOST = process.env.REACT_APP_API_URL;\nexport const CAPTCHA_KEY = process.env.REACT_APP_GOOGLE_CAPTCHA_KEY;\nexport const BSC_SCAN = process.env.REACT_APP_BSC_SCAN;\nexport const NETWORK_CHAIN_NAME = process.env.REACT_APP_NETWORK_CHAIN_NAME;\nexport const NETWORK_RPC_URL = process.env.REACT_APP_NETWORK_RPC_URL;\nexport const NETWORK_LINK = process.env.REACT_APP_NETWORK_LINK;\nexport const NETWORK_VERSION = process.env.REACT_APP_NETWORK_VERSION;\nexport const NETWORK_CHAIN_ID = process.env.REACT_APP_NETWORK_CHAIN_ID;\nexport const NETWORK_NATIVE_CURRENCY_NAME = process.env.REACT_APP_NETWORK_NATIVE_CURRENCY_NAME;\nexport const NETWORK_NATIVE_CURRENCY_SYMBOL = process.env.REACT_APP_NETWORK_NATIVE_CURRENCY_SYMBOL;\nexport const NETWORK_NATIVE_CURRENCY_DECIMALS = process.env.REACT_APP_NETWORK_NATIVE_CURRENCY_DECIMALS;\nexport const globalResErrMsg = \"Woops something went wrong, Please try again.\";\nexport const SUCCESS_200 = 200;\nexport const BAD_REQUEST = 400;\nexport const UNAUTHORISED = 401;\nexport const AUTH_TOKEN_KEY = \"api-access-token\";\nexport const PASSPORT_FRONT = 0;\nexport const PASSPORT_BACK = 4;\nexport const LICENSE_FRONT = 2;\nexport const LICENSE_BACK = 3;\nexport const NATIONAL_ID = 1;\nexport const KYC_SUBMITTED = 0;\nexport const KYC_APPROVED = 1;\nexport const KYC_DECLINED = 2;\nexport const KYC_RE_SUBMITTED = 3;\nexport const LIQUIDITY_PROVIDER_FEE = 0.2;\nexport const DOCS_LINK = 'https://docs.anchorswap.finance';\nexport const TWITTER_LINK = 'https://twitter.com/AnchorSwap';\nexport const TELEGRAM_LINK = 'https://t.me/joinchat/KP-_HKro73ViZTZk';\nexport const AUDIT_LINK = 'https://docs.anchorswap.finance/audit/';\nexport const isMetamakConnected = async () => {\n  const {\n    ethereum\n  } = window;\n  const result = Boolean(ethereum && ethereum.isMetaMask);\n\n  try {\n    if (result) {\n      const chain = await ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: NETWORK_CHAIN_ID\n        }]\n      });\n      return true;\n    } else {\n      window.alert(`Install Metamask extension first!`);\n      window.open('https://metamask.io/', '_blank');\n      return false;\n    }\n  } catch (error) {\n    if ((error === null || error === void 0 ? void 0 : error.code) === 4902) {\n      try {\n        const addChain = await ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: await window.ethereum.chainId,\n            chainName: NETWORK_CHAIN_NAME,\n            nativeCurrency: {\n              name: NETWORK_NATIVE_CURRENCY_NAME,\n              symbol: NETWORK_NATIVE_CURRENCY_SYMBOL,\n              decimals: Number(NETWORK_NATIVE_CURRENCY_DECIMALS)\n            },\n            rpcUrls: [NETWORK_RPC_URL],\n            blockExplorerUrls: [NETWORK_LINK]\n          }]\n        });\n        return true;\n        ;\n      } catch (error) {\n        return false;\n      }\n    }\n\n    if ((error === null || error === void 0 ? void 0 : error.code) === 4001) {\n      return false;\n    }\n\n    throw error;\n  }\n};\nexport const addCommas = nStr => {\n  nStr += '';\n  let x = nStr.split('.');\n  let x1 = x[0];\n  let x2 = x.length > 1 ? '.' + x[1] : '';\n  let rgx = /(\\d+)(\\d{3})/;\n\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n  }\n\n  return x1 + x2;\n};","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/constant.js"],"names":["rootName","HOME_ROUTE","process","env","REACT_APP_HOME_ROUTE","API_HOST","REACT_APP_API_URL","CAPTCHA_KEY","REACT_APP_GOOGLE_CAPTCHA_KEY","BSC_SCAN","REACT_APP_BSC_SCAN","NETWORK_CHAIN_NAME","REACT_APP_NETWORK_CHAIN_NAME","NETWORK_RPC_URL","REACT_APP_NETWORK_RPC_URL","NETWORK_LINK","REACT_APP_NETWORK_LINK","NETWORK_VERSION","REACT_APP_NETWORK_VERSION","NETWORK_CHAIN_ID","REACT_APP_NETWORK_CHAIN_ID","NETWORK_NATIVE_CURRENCY_NAME","REACT_APP_NETWORK_NATIVE_CURRENCY_NAME","NETWORK_NATIVE_CURRENCY_SYMBOL","REACT_APP_NETWORK_NATIVE_CURRENCY_SYMBOL","NETWORK_NATIVE_CURRENCY_DECIMALS","REACT_APP_NETWORK_NATIVE_CURRENCY_DECIMALS","globalResErrMsg","SUCCESS_200","BAD_REQUEST","UNAUTHORISED","AUTH_TOKEN_KEY","PASSPORT_FRONT","PASSPORT_BACK","LICENSE_FRONT","LICENSE_BACK","NATIONAL_ID","KYC_SUBMITTED","KYC_APPROVED","KYC_DECLINED","KYC_RE_SUBMITTED","LIQUIDITY_PROVIDER_FEE","DOCS_LINK","TWITTER_LINK","TELEGRAM_LINK","AUDIT_LINK","isMetamakConnected","ethereum","window","result","Boolean","isMetaMask","chain","request","method","params","chainId","alert","open","error","code","addChain","chainName","nativeCurrency","name","symbol","decimals","Number","rpcUrls","blockExplorerUrls","addCommas","nStr","x","split","x1","x2","length","rgx","test","replace"],"mappings":"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","sourcesContent":["export const rootName = \"\";\nexport const HOME_ROUTE = process.env.REACT_APP_HOME_ROUTE;\nexport const API_HOST = process.env.REACT_APP_API_URL;\nexport const CAPTCHA_KEY = process.env.REACT_APP_GOOGLE_CAPTCHA_KEY;\nexport const BSC_SCAN = process.env.REACT_APP_BSC_SCAN;\nexport const NETWORK_CHAIN_NAME = process.env.REACT_APP_NETWORK_CHAIN_NAME;\nexport const NETWORK_RPC_URL = process.env.REACT_APP_NETWORK_RPC_URL;\nexport const NETWORK_LINK = process.env.REACT_APP_NETWORK_LINK;\nexport const NETWORK_VERSION = process.env.REACT_APP_NETWORK_VERSION;\nexport const NETWORK_CHAIN_ID = process.env.REACT_APP_NETWORK_CHAIN_ID;\nexport const NETWORK_NATIVE_CURRENCY_NAME = process.env.REACT_APP_NETWORK_NATIVE_CURRENCY_NAME;\nexport const NETWORK_NATIVE_CURRENCY_SYMBOL = process.env.REACT_APP_NETWORK_NATIVE_CURRENCY_SYMBOL;\nexport const NETWORK_NATIVE_CURRENCY_DECIMALS = process.env.REACT_APP_NETWORK_NATIVE_CURRENCY_DECIMALS;\nexport const globalResErrMsg =\n  \"Woops something went wrong, Please try again.\";\nexport const SUCCESS_200 = 200;\nexport const BAD_REQUEST = 400;\nexport const UNAUTHORISED = 401;\nexport const AUTH_TOKEN_KEY = \"api-access-token\";\nexport const PASSPORT_FRONT = 0;\nexport const PASSPORT_BACK = 4;\nexport const LICENSE_FRONT = 2;\nexport const LICENSE_BACK = 3;\nexport const NATIONAL_ID = 1;\nexport const KYC_SUBMITTED = 0;\nexport const KYC_APPROVED = 1;\nexport const KYC_DECLINED = 2;\nexport const KYC_RE_SUBMITTED = 3;\nexport const LIQUIDITY_PROVIDER_FEE = 0.2;\nexport const DOCS_LINK = 'https://docs.anchorswap.finance';\nexport const TWITTER_LINK = 'https://twitter.com/AnchorSwap';\nexport const TELEGRAM_LINK = 'https://t.me/joinchat/KP-_HKro73ViZTZk';\nexport const AUDIT_LINK = 'https://docs.anchorswap.finance/audit/';\n\n\nexport const isMetamakConnected = async () => {\n  const { ethereum } = window;\n  const result = Boolean(ethereum && ethereum.isMetaMask);\n  try {\n    if (result) {\n      const chain = await ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: NETWORK_CHAIN_ID }],\n      });\n      return true;\n    } else {\n      window.alert(`Install Metamask extension first!`);\n      window.open('https://metamask.io/', '_blank');\n      return false;\n    }\n  } catch (error) {\n    if (error?.code === 4902) {\n      try {\n        const addChain = await ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: await window.ethereum.chainId,\n            chainName: NETWORK_CHAIN_NAME,\n            nativeCurrency: {\n              name: NETWORK_NATIVE_CURRENCY_NAME,\n              symbol: NETWORK_NATIVE_CURRENCY_SYMBOL,\n              decimals: Number(NETWORK_NATIVE_CURRENCY_DECIMALS)\n            },\n            rpcUrls: [NETWORK_RPC_URL],\n            blockExplorerUrls: [NETWORK_LINK]\n          }],\n        });\n\n        return true;;\n\n      } catch (error) {\n        return false;\n      }\n    }\n    if (error?.code === 4001) {\n      return false;\n    }\n    throw error;\n  }\n\n}\n\nexport const addCommas = (nStr) => {\n  nStr += '';\n  let x = nStr.split('.');\n  let x1 = x[0];\n  let x2 = x.length > 1 ? '.' + x[1] : '';\n  let rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n  }\n  return x1 + x2;\n}\n\n"]},"metadata":{},"sourceType":"module"}