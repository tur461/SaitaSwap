{"ast":null,"code":"import { UserService } from \"../../services/UserService\";\nimport { startLoading, stopLoading } from \"./LoadingActions\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport { saveUser } from \"../../redux/actions\";\nexport function saveUserInfo(data) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    dispatch(startLoading());\n    UserService.saveInfo(data).then(res => {\n      dispatch(stopLoading());\n      dispatch(saveUser(data));\n      toast.success(res.data.message);\n      resolve(res);\n    }).catch(error => {\n      console.log(error);\n      toast.error(error === null || error === void 0 ? void 0 : error.data.error.message);\n      dispatch(stopLoading());\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/redux/actions/AuthActions.js"],"names":["UserService","startLoading","stopLoading","toast","saveUser","saveUserInfo","data","dispatch","getState","Promise","resolve","reject","saveInfo","then","res","success","message","catch","error","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,4BAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,kBAA1C;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACjC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC9DJ,IAAAA,QAAQ,CAACN,YAAY,EAAb,CAAR;AACAD,IAAAA,WAAW,CAACY,QAAZ,CAAqBN,IAArB,EACGO,IADH,CACSC,GAAD,IAAS;AACbP,MAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACAK,MAAAA,QAAQ,CAACH,QAAQ,CAACE,IAAD,CAAT,CAAR;AACAH,MAAAA,KAAK,CAACY,OAAN,CAAcD,GAAG,CAACR,IAAJ,CAASU,OAAvB;AACAN,MAAAA,OAAO,CAACI,GAAD,CAAP;AACD,KANH,EAOGG,KAPH,CAOUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAf,MAAAA,KAAK,CAACe,KAAN,CAAYA,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEZ,IAAP,CAAYY,KAAZ,CAAkBF,OAA9B;AACAT,MAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AAEAS,MAAAA,MAAM,CAACO,KAAD,CAAN;AACD,KAbH;AAeD,GAjB8B,CAA/B;AAkBD","sourcesContent":["import { UserService } from \"../../services/UserService\";\nimport { startLoading, stopLoading } from \"./LoadingActions\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport { saveUser } from \"../../redux/actions\"\n\n\nexport function saveUserInfo(data) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    dispatch(startLoading())\n    UserService.saveInfo(data)\n      .then((res) => {\n        dispatch(stopLoading());\n        dispatch(saveUser(data));\n        toast.success(res.data.message);\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(error)\n        toast.error(error?.data.error.message)\n        dispatch(stopLoading());\n\n        reject(error);\n      });\n\n  });\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}