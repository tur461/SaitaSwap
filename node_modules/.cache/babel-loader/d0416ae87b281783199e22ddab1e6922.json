{"ast":null,"code":"import { TOKEN_LIST } from \"../../assets/tokens\";\nimport { actionTypes } from \"../actions/PersistActions\";\nconst initialState = {\n  walletType: \"Metamask\",\n  isUserConnected: \"\",\n  tokenList: TOKEN_LIST,\n  slippagePercentage: 7.5,\n  deadline: 20,\n  userInfo: \"\",\n  loggedIn: false,\n  userLpTokens: [],\n  recentTransactions: [],\n  referralAddress: \"\",\n  updateUserLpTokens: false,\n  hasAccess: false,\n  footerValues: \"\"\n};\n\nconst persist = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_CONNECTED:\n      return { ...state,\n        isUserConnected: action.payload.account,\n        walletType: action.payload.walletType\n      };\n\n    case actionTypes.TOKEN_LIST_ADD:\n      initialState.tokenList.push(action.payload);\n      return { ...state,\n        tokenList: initialState.tokenList\n      };\n\n    case actionTypes.TOKEN_LIST_DEL:\n      initialState.tokenList.splice(initialState.tokenList.findIndex(a => a.address.toLowerCase() === action.payload.address.toLowerCase()), 1);\n      return { ...state,\n        tokenList: initialState.tokenList\n      };\n\n    case actionTypes.SAVE_SLIPPAGE_PERCENTAGE:\n      return { ...state,\n        slippagePercentage: action.payload\n      };\n\n    case actionTypes.SAVE_DEADLINE:\n      return { ...state,\n        deadline: action.payload\n      };\n\n    case actionTypes.LOGIN_USER_SUCCESS:\n      return { ...state,\n        userInfo: action.payload,\n        loggedIn: true\n      };\n\n    case actionTypes.SAVE_USER_LP_TOKENS:\n      return { ...state,\n        userLpTokens: action.payload\n      };\n\n    case actionTypes.SAVE_USER_RECENT_TRANSACTIONS:\n      return { ...state,\n        recentTransactions: action.payload.recentTransactions\n      };\n\n    case actionTypes.LOGOUT:\n      return initialState;\n\n    case actionTypes.SAVE_REFFRAL_ADDRESS:\n      return { ...state,\n        referralAddress: action.payload\n      };\n\n    case actionTypes.CHECK_USER_LPTOKENS:\n      return { ...state,\n        updateUserLpTokens: action.payload\n      };\n\n    case actionTypes.LOGIN_CONFIRMATION_SREEN:\n      return { ...state,\n        hasAccess: true\n      };\n\n    case actionTypes.LOGOUT_CONFIRMATION_SREEN:\n      return { ...state,\n        hasAccess: true\n      };\n\n    case actionTypes.SAVE_FOOTER_DATA:\n      return { ...state,\n        footerValues: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default persist;","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/persist.js"],"names":["TOKEN_LIST","actionTypes","initialState","walletType","isUserConnected","tokenList","slippagePercentage","deadline","userInfo","loggedIn","userLpTokens","recentTransactions","referralAddress","updateUserLpTokens","hasAccess","footerValues","persist","state","action","type","USER_CONNECTED","payload","account","TOKEN_LIST_ADD","push","TOKEN_LIST_DEL","splice","findIndex","a","address","toLowerCase","SAVE_SLIPPAGE_PERCENTAGE","SAVE_DEADLINE","LOGIN_USER_SUCCESS","SAVE_USER_LP_TOKENS","SAVE_USER_RECENT_TRANSACTIONS","LOGOUT","SAVE_REFFRAL_ADDRESS","CHECK_USER_LPTOKENS","LOGIN_CONFIRMATION_SREEN","LOGOUT_CONFIRMATION_SREEN","SAVE_FOOTER_DATA"],"mappings":"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","sourcesContent":["import { TOKEN_LIST } from \"../../assets/tokens\";\nimport { actionTypes } from \"../actions/PersistActions\";\n\nconst initialState = {\n  walletType: \"Metamask\",\n  isUserConnected: \"\",\n  tokenList: TOKEN_LIST,\n  slippagePercentage: 7.5,\n  deadline: 20,\n  userInfo: \"\",\n  loggedIn: false,\n  userLpTokens: [],\n  recentTransactions: [],\n  referralAddress: \"\",\n  updateUserLpTokens: false,\n  hasAccess: false,\n  footerValues: \"\",\n};\n\nconst persist = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_CONNECTED:\n      return {\n        ...state,\n        isUserConnected: action.payload.account,\n        walletType: action.payload.walletType,\n      };\n    case actionTypes.TOKEN_LIST_ADD:\n      initialState.tokenList.push(action.payload);\n      return {\n        ...state,\n        tokenList: initialState.tokenList,\n      };\n    case actionTypes.TOKEN_LIST_DEL:\n      initialState.tokenList.splice(\n        initialState.tokenList.findIndex(\n          (a) =>\n            a.address.toLowerCase() === action.payload.address.toLowerCase()\n        ),\n        1\n      );\n      return {\n        ...state,\n        tokenList: initialState.tokenList,\n      };\n    case actionTypes.SAVE_SLIPPAGE_PERCENTAGE:\n      return {\n        ...state,\n        slippagePercentage: action.payload,\n      };\n    case actionTypes.SAVE_DEADLINE:\n      return {\n        ...state,\n        deadline: action.payload,\n      };\n    case actionTypes.LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        userInfo: action.payload,\n        loggedIn: true,\n      };\n    case actionTypes.SAVE_USER_LP_TOKENS:\n      return {\n        ...state,\n        userLpTokens: action.payload,\n      };\n    case actionTypes.SAVE_USER_RECENT_TRANSACTIONS:\n      return {\n        ...state,\n        recentTransactions: action.payload.recentTransactions,\n      };\n    case actionTypes.LOGOUT:\n      return initialState;\n    case actionTypes.SAVE_REFFRAL_ADDRESS:\n      return {\n        ...state,\n        referralAddress: action.payload,\n      };\n    case actionTypes.CHECK_USER_LPTOKENS:\n      return {\n        ...state,\n        updateUserLpTokens: action.payload,\n      };\n    case actionTypes.LOGIN_CONFIRMATION_SREEN:\n      return {\n        ...state,\n        hasAccess: true,\n      };\n    case actionTypes.LOGOUT_CONFIRMATION_SREEN:\n      return {\n        ...state,\n        hasAccess: true,\n      };\n    case actionTypes.SAVE_FOOTER_DATA:\n      return {\n        ...state,\n        footerValues: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default persist;\n"]},"metadata":{},"sourceType":"module"}