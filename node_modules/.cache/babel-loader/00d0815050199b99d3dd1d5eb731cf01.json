{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/TokenBalance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContractServices } from '../../services/ContractServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenBalance = ({\n  address\n}) => {\n  _s();\n\n  const [balance, setBalance] = useState('');\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  useEffect(() => {\n    init();\n  }, [isUserConnected, address]);\n\n  const init = async () => {\n    try {\n      let res = 0;\n\n      if (address === 'BNB') {\n        res = await ContractServices.getBNBBalance(isUserConnected);\n        setBalance(res);\n      } else {\n        res = await ContractServices.getTokenBalance(address, isUserConnected);\n        setBalance(res);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"tokenName_textStyle\",\n    children: balance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 14\n  }, this);\n};\n\n_s(TokenBalance, \"Bb8NSPMubk8/OvhN0TvwNlIJTXY=\", false, function () {\n  return [useSelector];\n});\n\n_c = TokenBalance;\nexport default TokenBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenBalance\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/TokenBalance.js"],"names":["React","useEffect","useState","useSelector","ContractServices","TokenBalance","address","balance","setBalance","isUserConnected","state","persist","init","res","getBNBBalance","getTokenBalance","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAEhC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMO,eAAe,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,eAAxB,CAAnC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACVW,IAAAA,IAAI;AACT,GAFQ,EAEN,CAACH,eAAD,EAAkBH,OAAlB,CAFM,CAAT;;AAIA,QAAMM,IAAI,GAAG,YAAY;AACnB,QAAI;AACE,UAAIC,GAAG,GAAG,CAAV;;AACA,UAAIP,OAAO,KAAK,KAAhB,EAAuB;AACjBO,QAAAA,GAAG,GAAG,MAAMT,gBAAgB,CAACU,aAAjB,CAA+BL,eAA/B,CAAZ;AACAD,QAAAA,UAAU,CAACK,GAAD,CAAV;AACL,OAHD,MAGO;AACDA,QAAAA,GAAG,GAAG,MAAMT,gBAAgB,CAACW,eAAjB,CAAiCT,OAAjC,EAA0CG,eAA1C,CAAZ;AACAD,QAAAA,UAAU,CAACK,GAAD,CAAV;AACL;AACN,KATD,CASE,OAAOG,KAAP,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACL;AACN,GAbD;;AAeA,sBAAO;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA,cAAuCT;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AAEL,CA1BD;;GAAMF,Y;UAGwBF,W;;;KAHxBE,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContractServices } from '../../services/ContractServices';\n\nconst TokenBalance = ({ address }) => {\n\n      const [balance, setBalance] = useState('');\n      const isUserConnected = useSelector(state => state.persist.isUserConnected);\n\n      useEffect(() => {\n            init();\n      }, [isUserConnected, address]);\n\n      const init = async () => {\n            try {\n                  let res = 0;\n                  if (address === 'BNB') {\n                        res = await ContractServices.getBNBBalance(isUserConnected);\n                        setBalance(res);\n                  } else {\n                        res = await ContractServices.getTokenBalance(address, isUserConnected);\n                        setBalance(res);\n                  }\n            } catch (error) {\n                  console.log(error);\n            }\n      }\n\n      return <span className=\"tokenName_textStyle\">{balance}</span>\n\n}\n\nexport default TokenBalance;"]},"metadata":{},"sourceType":"module"}