{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/ImportPool.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Col } from 'react-bootstrap';\nimport ConnectWallet from \"../../components/ConnectWallet/ConnectWallet\";\nimport CardCustom from \"../../components/cardCustom/CardCustom\";\nimport ButtonPrimary from \"../../components/Button/Button\";\nimport SelectCoin from \"../../components/selectCoin/SelectCoin\";\nimport Plusicon from \"../../assets/images/plus_yellow.png\";\nimport NIOBIcon from \"../../assets/images/NIOB-Token-Icon.svg\";\nimport BNBIcon from \"../../assets/images/token_icons/WBNB-Token-Icon.svg\";\nimport ModalCurrency from \"../../components/Modal/ModalCurrency/ModalCurrency\";\nimport ButtonBack from \"../../components/buttonBack/ButtonBack\";\nimport \"./Trade.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MAIN_CONTRACT_LIST, TOKEN_LIST, WETH } from '../../assets/tokens';\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { toast } from '../../components/Toast/Toast';\nimport { ExchangeService } from '../../services/ExchangeService';\nimport { addLpToken, addTransaction, checkUserLpTokens, searchTokenByNameOrAddress, startLoading, stopLoading } from \"../../redux/actions\";\nimport Button from '../../components/Button/Button';\nimport { BigNumber } from \"bignumber.js\";\nimport SupplyModal from \"../../components/SupplyModal/SupplyModal\";\nimport RecentTransactions from \"../../components/RecentTransactions/RecentTransactions\";\nimport awesomePlus from '../../assets/images/plus_yellow.png';\nimport TokenBalance from \"./TokenBalance\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddLiquidity = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const [show1, setShow1] = useState(false);\n\n  const handleClose1 = () => setShow1(false);\n\n  const handleShow1 = () => setShow1(true);\n\n  const handleShow = value => {\n    setShow(true);\n  };\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const tokenList = useSelector(state => state.persist.tokenList);\n  const [modalCurrency, setModalCurrency] = useState(false);\n  const [tokenOne, setTokenOne] = useState(TOKEN_LIST[0]);\n  const [tokenTwo, setTokenTwo] = useState({});\n  const [tokenOneCurrency, setCurrencyNameForTokenOne] = useState(TOKEN_LIST[0].symbol);\n  const [tokenTwoCurrency, setCurrencyNameForTokenTwo] = useState('Select a currency');\n  const [tokenOneValue, setTokenOneValue] = useState(0);\n  const [tokenTwoValue, setTokenTwoValue] = useState(0);\n  const [lpTokenBalance, setLpTokenBalance] = useState(0);\n  const [tokenType, setTokenType] = useState('TK1');\n  const [search, setSearch] = useState(\"\");\n  const [filteredTokenList, setFilteredTokenList] = useState([]);\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n  const [currentPairAddress, setCurrentPairAddress] = useState('');\n  useEffect(() => {\n    setFilteredTokenList(tokenList.filter(token => token.name.toLowerCase().includes(search.toLowerCase())));\n  }, [search, tokenList, setTokenOne, setTokenTwo]);\n\n  const onHandleOpenModal = tokenType => {\n    if (!isUserConnected) {\n      return toast.error('Connect wallet first!');\n    }\n\n    setShow(true);\n    setSelectedCurrency(tokenType === 'TK1' ? tokenTwoCurrency : tokenOneCurrency);\n    setModalCurrency({\n      modalCurrency: true\n    });\n    setTokenType(tokenType);\n  };\n\n  const onHandleSelectCurrency = async (token, selecting) => {\n    const {\n      address,\n      symbol\n    } = token;\n    let pairName = '';\n\n    if (!isUserConnected) {\n      return toast.error('Connect wallet first!');\n    }\n\n    let a1, a2;\n\n    if (selecting === 'TK1') {\n      handleClose();\n      a1 = address;\n      setTokenOne(token);\n      setCurrencyNameForTokenOne(symbol);\n      pairName = `${symbol}/${tokenTwoCurrency} LP`;\n\n      if (tokenTwo.address) {\n        a2 = tokenTwo.address;\n      }\n    }\n\n    if (selecting === 'TK2') {\n      handleClose();\n      a2 = address;\n      setTokenTwo(token);\n      setCurrencyNameForTokenTwo(symbol);\n      pairName = `${tokenOneCurrency}/${symbol} LP`;\n\n      if (tokenOne.address) {\n        a1 = tokenOne.address;\n      }\n    }\n\n    setModalCurrency(!modalCurrency);\n    setSearch('');\n    setFilteredTokenList(tokenList);\n\n    if (a1 && a2) {\n      dispatch(startLoading());\n      let currentPairAddress;\n\n      if (a1 === 'BNB') {\n        a1 = WETH; //WETH\n\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else if (a2 === 'BNB') {\n        a2 = WETH; //WETH\n\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else {\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      }\n\n      if (currentPairAddress !== '0x0000000000000000000000000000000000000000') {\n        const tk0 = await ExchangeService.getTokenZero(currentPairAddress);\n        const tk1 = await ExchangeService.getTokenOne(currentPairAddress);\n        const lpdata = {\n          pair: currentPairAddress,\n          decimals: 18,\n          name: \"Import LPs\",\n          pairName,\n          symbol: \"Anchor-LP\",\n          token0: tk0,\n          token1: tk1\n        };\n        const result = await dispatch(addLpToken(lpdata));\n\n        if (result) {\n          setLpTokenBalance(result.balance);\n          setCurrentPairAddress(currentPairAddress);\n          setTokenOneValue(result.token0Deposit);\n          setTokenTwoValue(result.token1Deposit);\n        }\n      } else {\n        setLpTokenBalance(0);\n        setCurrentPairAddress('');\n        setTokenOneValue(0);\n        setTokenTwoValue(0);\n      }\n\n      dispatch(stopLoading());\n    }\n  };\n\n  const handleSearchToken = async data => {\n    try {\n      const res = await dispatch(searchTokenByNameOrAddress(data));\n      setFilteredTokenList(res);\n    } catch (error) {\n      toast.error(\"Something went wrong!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"swapScreen comnSection\",\n      children: /*#__PURE__*/_jsxDEV(CardCustom, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center settingSec d-block\",\n          children: [/*#__PURE__*/_jsxDEV(ButtonBack, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"Import Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"importpoolbox\",\n          onClick: () => onHandleOpenModal('TK1'),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: tokenOne.icon,\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: tokenOne.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Col btnSwap text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: awesomePlus,\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"importpoolbox\",\n          onClick: () => onHandleOpenModal('TK2'),\n          children: tokenTwo.address ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.icon,\n              alt: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Select a Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), tokenOne.address && tokenTwo.address ? currentPairAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"importpooldetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Pool Found!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"LP TOKENS IN YOUR WALLET\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: tokenOne.icon,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 47\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: tokenTwo.icon,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 86\n                }, this), \" \", tokenOne.symbol, \"/\", tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 41\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: lpTokenBalance.toFixed(5)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 169\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 214\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [tokenOne.symbol, \": \", tokenOneValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.symbol, \": \", tokenTwoValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 82\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"importpooldetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No pool found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"importpooldetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a token to find your liquidity.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalCurrency, {\n      show: show,\n      handleShow: handleShow,\n      searchToken: handleSearchToken,\n      handleClose: handleClose,\n      tokenList: filteredTokenList,\n      searchByName: setSearch,\n      selectCurrency: onHandleSelectCurrency,\n      currencyName: selectedCurrency,\n      tokenType: tokenType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddLiquidity, \"nMbjiwvkHqoTFHZ0G9CnG0IXD/s=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AddLiquidity;\nexport default AddLiquidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidity\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/ImportPool.js"],"names":["React","useEffect","useState","Container","Col","ConnectWallet","CardCustom","ButtonPrimary","SelectCoin","Plusicon","ModalCurrency","ButtonBack","useSelector","useDispatch","MAIN_CONTRACT_LIST","TOKEN_LIST","WETH","ContractServices","toast","ExchangeService","addLpToken","addTransaction","checkUserLpTokens","searchTokenByNameOrAddress","startLoading","stopLoading","Button","BigNumber","SupplyModal","RecentTransactions","awesomePlus","TokenBalance","Link","AddLiquidity","props","show","setShow","handleClose","show1","setShow1","handleClose1","handleShow1","handleShow","value","dispatch","isUserConnected","state","persist","tokenList","modalCurrency","setModalCurrency","tokenOne","setTokenOne","tokenTwo","setTokenTwo","tokenOneCurrency","setCurrencyNameForTokenOne","symbol","tokenTwoCurrency","setCurrencyNameForTokenTwo","tokenOneValue","setTokenOneValue","tokenTwoValue","setTokenTwoValue","lpTokenBalance","setLpTokenBalance","tokenType","setTokenType","search","setSearch","filteredTokenList","setFilteredTokenList","selectedCurrency","setSelectedCurrency","currentPairAddress","setCurrentPairAddress","filter","token","name","toLowerCase","includes","onHandleOpenModal","error","onHandleSelectCurrency","selecting","address","pairName","a1","a2","getPair","tk0","getTokenZero","tk1","getTokenOne","lpdata","pair","decimals","token0","token1","result","balance","token0Deposit","token1Deposit","handleSearchToken","data","res","icon","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Col } from 'react-bootstrap'\nimport ConnectWallet from \"../../components/ConnectWallet/ConnectWallet\";\nimport CardCustom from \"../../components/cardCustom/CardCustom\";\nimport ButtonPrimary from \"../../components/Button/Button\";\nimport SelectCoin from \"../../components/selectCoin/SelectCoin\";\nimport Plusicon from \"../../assets/images/plus_yellow.png\";\nimport NIOBIcon from \"../../assets/images/NIOB-Token-Icon.svg\";\nimport BNBIcon from \"../../assets/images/token_icons/WBNB-Token-Icon.svg\";\nimport ModalCurrency from \"../../components/Modal/ModalCurrency/ModalCurrency\";\nimport ButtonBack from \"../../components/buttonBack/ButtonBack\";\nimport \"./Trade.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MAIN_CONTRACT_LIST, TOKEN_LIST, WETH } from '../../assets/tokens';\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { toast } from '../../components/Toast/Toast';\nimport { ExchangeService } from '../../services/ExchangeService';\nimport { addLpToken, addTransaction, checkUserLpTokens, searchTokenByNameOrAddress, startLoading, stopLoading } from \"../../redux/actions\"\nimport Button from '../../components/Button/Button';\nimport { BigNumber } from \"bignumber.js\";\nimport SupplyModal from \"../../components/SupplyModal/SupplyModal\";\nimport RecentTransactions from \"../../components/RecentTransactions/RecentTransactions\";\nimport awesomePlus from '../../assets/images/plus_yellow.png'\nimport TokenBalance from \"./TokenBalance\";\nimport { Link } from \"react-router-dom\";\n\n\nconst AddLiquidity = props => {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [show1, setShow1] = useState(false);\n    const handleClose1 = () => setShow1(false);\n    const handleShow1 = () => setShow1(true);\n\n    const handleShow = (value) => {\n        setShow(true);\n    };\n\n    const dispatch = useDispatch();\n    const isUserConnected = useSelector(state => state.persist.isUserConnected);\n    const tokenList = useSelector(state => state.persist.tokenList);\n\n    const [modalCurrency, setModalCurrency] = useState(false);\n    const [tokenOne, setTokenOne] = useState(TOKEN_LIST[0]);\n    const [tokenTwo, setTokenTwo] = useState({});\n    const [tokenOneCurrency, setCurrencyNameForTokenOne] = useState(TOKEN_LIST[0].symbol);\n    const [tokenTwoCurrency, setCurrencyNameForTokenTwo] = useState('Select a currency');\n    const [tokenOneValue, setTokenOneValue] = useState(0);\n    const [tokenTwoValue, setTokenTwoValue] = useState(0);\n\n    const [lpTokenBalance, setLpTokenBalance] = useState(0);\n    const [tokenType, setTokenType] = useState('TK1');\n\n    const [search, setSearch] = useState(\"\");\n    const [filteredTokenList, setFilteredTokenList] = useState([]);\n\n    const [selectedCurrency, setSelectedCurrency] = useState('');\n\n    const [currentPairAddress, setCurrentPairAddress] = useState('');\n\n\n    useEffect(() => {\n        setFilteredTokenList(tokenList.filter((token) => token.name.toLowerCase().includes(search.toLowerCase())));\n    }, [search, tokenList, setTokenOne, setTokenTwo]);\n\n    const onHandleOpenModal = (tokenType) => {\n        if (!isUserConnected) {\n            return toast.error('Connect wallet first!');\n        }\n        setShow(true);\n        setSelectedCurrency(tokenType === 'TK1' ? tokenTwoCurrency : tokenOneCurrency);\n        setModalCurrency({ modalCurrency: true, });\n        setTokenType(tokenType);\n    }\n    const onHandleSelectCurrency = async (token, selecting) => {\n        const { address, symbol } = token;\n        let pairName = '';\n        if (!isUserConnected) {\n            return toast.error('Connect wallet first!');\n        }\n        let a1, a2;\n        if (selecting === 'TK1') {\n            handleClose();\n            a1 = address;\n            setTokenOne(token);\n            setCurrencyNameForTokenOne(symbol);\n            pairName = `${symbol}/${tokenTwoCurrency} LP`;\n\n            if (tokenTwo.address) {\n                a2 = tokenTwo.address;\n            }\n        }\n        if (selecting === 'TK2') {\n            handleClose();\n            a2 = address;\n            setTokenTwo(token);\n            setCurrencyNameForTokenTwo(symbol);\n            pairName = `${tokenOneCurrency}/${symbol} LP`;\n\n            if (tokenOne.address) {\n                a1 = tokenOne.address;\n            }\n        }\n        setModalCurrency(!modalCurrency);\n        setSearch('');\n        setFilteredTokenList(tokenList);\n\n        if (a1 && a2) {\n            dispatch(startLoading());\n            let currentPairAddress;\n            if (a1 === 'BNB') {\n                a1 = WETH;//WETH\n                currentPairAddress = await ExchangeService.getPair(a1, a2);\n            } else if (a2 === 'BNB') {\n                a2 = WETH;//WETH\n                currentPairAddress = await ExchangeService.getPair(a1, a2);\n            } else {\n                currentPairAddress = await ExchangeService.getPair(a1, a2);\n            }\n            if (currentPairAddress !== '0x0000000000000000000000000000000000000000') {\n                const tk0 = await ExchangeService.getTokenZero(currentPairAddress);\n                const tk1 = await ExchangeService.getTokenOne(currentPairAddress);\n\n                const lpdata = {\n                    pair: currentPairAddress,\n                    decimals: 18,\n                    name: \"Import LPs\",\n                    pairName,\n                    symbol: \"Anchor-LP\",\n                    token0: tk0,\n                    token1: tk1,\n                }\n                \n                const result = await dispatch(addLpToken(lpdata));\n                if (result) {\n                    setLpTokenBalance(result.balance);\n                    setCurrentPairAddress(currentPairAddress);\n                    setTokenOneValue(result.token0Deposit);\n                    setTokenTwoValue(result.token1Deposit);\n                }\n            } else {\n                setLpTokenBalance(0);\n                setCurrentPairAddress('');\n                setTokenOneValue(0);\n                setTokenTwoValue(0);\n            }\n            dispatch(stopLoading());\n        }\n    }\n\n    const handleSearchToken = async (data) => {\n        try {\n            const res = await dispatch(searchTokenByNameOrAddress(data));\n            setFilteredTokenList(res);\n        } catch (error) {\n            toast.error(\"Something went wrong!\");\n        }\n    }\n\n\n    return (\n        <>\n            <Container fluid className=\"swapScreen comnSection\">\n                <CardCustom>\n                    <div className=\"text-center settingSec d-block\">\n                        <ButtonBack />\n                        <h4 className=\"text-center\">Import Pool</h4>\n                    </div>\n                    <button className=\"importpoolbox\" onClick={() => onHandleOpenModal('TK1')} >\n                        <img src={tokenOne.icon} alt=\"icon\" /> <span>{tokenOne.symbol}</span>\n                    </button>\n                    <div className=\"Col btnSwap text-center\">\n                        \n                            <img src={awesomePlus} alt=\"icon\" />\n\n                    </div>\n                    <button className=\"importpoolbox\" onClick={() => onHandleOpenModal('TK2')} >\n                        {tokenTwo.address ?\n                            <>\n                                <img src={tokenTwo?.icon} alt=\"icon\" />\n                                <span>{tokenTwo?.symbol}</span>\n                            </>\n                            :\n                            <span>Select a Token</span>}\n                    </button>\n                    {(tokenOne.address && tokenTwo.address) ?\n                        currentPairAddress ?\n                            <div className=\"importpooldetails\">\n                                <p>Pool Found!</p>\n                                <h4>LP TOKENS IN YOUR WALLET</h4>\n                                <ul>\n                                    <li><span><img src={tokenOne.icon} alt=\"icon\" /> <img src={tokenTwo.icon} alt=\"icon\" /> {tokenOne.symbol}/{tokenTwo?.symbol}</span> <span>{lpTokenBalance.toFixed(5)}</span></li><br />\n                                    <li>{tokenOne.symbol}: {tokenOneValue}</li> <br />\n                                    <li>{tokenTwo?.symbol}: {tokenTwoValue}</li> <br />\n                                </ul>\n                            </div>\n                            :\n                            <div className=\"importpooldetails\">\n                                <p>No pool found</p>\n                                {/* <p>\n                                    <Link to=\"#\" onClick={() => props.addBtn()}>Create pool</Link>\n                                </p> */}\n                                <br />\n                            </div>\n                        :\n                        <div className=\"importpooldetails\">\n                            <p>Select a token to find your liquidity.</p>\n                            <br />\n                        </div>}\n                </CardCustom>\n            </Container>\n            <ModalCurrency\n                show={show}\n                handleShow={handleShow}\n                searchToken={handleSearchToken}\n                handleClose={handleClose}\n                tokenList={filteredTokenList}\n                searchByName={setSearch}\n                selectCurrency={onHandleSelectCurrency}\n                currencyName={selectedCurrency}\n                tokenType={tokenType}\n            />\n        </>\n    );\n};\n\nexport default AddLiquidity;\n"]},"metadata":{},"sourceType":"module"}