{"ast":null,"code":"import packageJson from \"../../../package.json\";\nimport { ContractServices } from \"../../services/ContractServices\";\n/** seting action types */\n\nexport const actionTypes = {\n  USER_CONNECTED: \"USER_CONNECTED\",\n  LOGOUT: \"LOGOUT\",\n  TOKEN_LIST_ADD: \"TOKEN_LIST_ADD\",\n  TOKEN_LIST_DEL: \"TOKEN_LIST_DEL\",\n  SAVE_SLIPPAGE_PERCENTAGE: \"SAVE_SLIPPAGE_PERCENTAGE\",\n  SAVE_DEADLINE: \"SAVE_DEADLINE\",\n  LOGIN_USER_SUCCESS: \"LOGIN_USER_SUCCESS\",\n  SAVE_USER_LP_TOKENS: \"SAVE_USER_LP_TOKENS\",\n  SAVE_USER_RECENT_TRANSACTIONS: \"SAVE_USER_RECENT_TRANSACTIONS\",\n  SAVE_REFFRAL_ADDRESS: \"SAVE_REFFRAL_ADDRESS\",\n  CHECK_USER_LPTOKENS: \"CHECK_USER_LPTOKENS\",\n  LOGIN_CONFIRMATION_SREEN: \"LOGIN_CONFIRMATION_SREEN\",\n  LOGOUT_CONFIRMATION_SREEN: \"LOGOUT_CONFIRMATION_SREEN\",\n  SAVE_FOOTER_DATA: \"SAVE_FOOTER_DATA\"\n};\nexport const versionManager = () => async (dispatch, getState) => {\n  try {\n    const version = packageJson.version;\n    const react_version = localStorage.getItem(\"react_version\");\n\n    if (react_version && version !== react_version) {\n      localStorage.clear();\n      window.location.reload();\n    }\n\n    if (!react_version) {\n      localStorage.setItem(\"react_version\", version);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n/*\n * Action creators\n */\n\nexport const login = data => {\n  return {\n    type: actionTypes.USER_CONNECTED,\n    payload: data\n  };\n};\nexport const logout = () => {\n  ContractServices.setWalletType(\"Metamask\");\n  localStorage.removeItem(\"persist:root\");\n  window.location.reload();\n  return {\n    type: actionTypes.LOGOUT\n  };\n};\nexport const tokenListAdd = data => {\n  return {\n    type: actionTypes.TOKEN_LIST_ADD,\n    payload: data\n  };\n};\nexport const tokenListDel = data => {\n  return {\n    type: actionTypes.TOKEN_LIST_DEL,\n    payload: data\n  };\n};\nexport const saveSlippagePercentage = data => {\n  return {\n    type: actionTypes.SAVE_SLIPPAGE_PERCENTAGE,\n    payload: data\n  };\n};\nexport const saveDeadline = data => {\n  return {\n    type: actionTypes.SAVE_DEADLINE,\n    payload: data\n  };\n};\nexport const saveUser = data => {\n  return {\n    type: actionTypes.LOGIN_USER_SUCCESS,\n    payload: data\n  };\n};\nexport const saveUserLpTokens = data => {\n  return {\n    type: actionTypes.SAVE_USER_LP_TOKENS,\n    payload: data\n  };\n};\nexport const checkUserLpTokens = payload => {\n  return {\n    type: actionTypes.CHECK_USER_LPTOKENS,\n    payload\n  };\n};\nexport const savereffralAddress = address => {\n  return {\n    type: actionTypes.SAVE_REFFRAL_ADDRESS,\n    payload: address\n  };\n};\nexport const addTransaction = data => async (dispatch, getState) => {\n  let {\n    persist: {\n      recentTransactions\n    }\n  } = getState();\n  recentTransactions.unshift(data);\n  dispatch({\n    type: actionTypes.SAVE_USER_RECENT_TRANSACTIONS,\n    payload: {\n      recentTransactions\n    }\n  });\n};\nexport const removeTokenList = data => async (dispatch, getState) => {\n  // let {\n  //   persist: { tokenList },\n  // } = getState();\n  const findIndex = tokenList.findIndex(a => a.address.toLowerCase() === data.address.toLowerCase());\n  const tkList = tokenList.splice(findIndex, 1); // console.log(tkList);\n};\nexport const loginConfirmationScreen = data => {\n  return {\n    type: actionTypes.LOGIN_CONFIRMATION_SREEN\n  };\n};\nexport const logoutConfirmationScreen = data => {\n  return {\n    type: actionTypes.LOGOUT_CONFIRMATION_SREEN\n  };\n};\nexport const saveFotterValues = data => async (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.SAVE_FOOTER_DATA,\n    payload: data\n  });\n};","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/redux/actions/PersistActions.js"],"names":["packageJson","ContractServices","actionTypes","USER_CONNECTED","LOGOUT","TOKEN_LIST_ADD","TOKEN_LIST_DEL","SAVE_SLIPPAGE_PERCENTAGE","SAVE_DEADLINE","LOGIN_USER_SUCCESS","SAVE_USER_LP_TOKENS","SAVE_USER_RECENT_TRANSACTIONS","SAVE_REFFRAL_ADDRESS","CHECK_USER_LPTOKENS","LOGIN_CONFIRMATION_SREEN","LOGOUT_CONFIRMATION_SREEN","SAVE_FOOTER_DATA","versionManager","dispatch","getState","version","react_version","localStorage","getItem","clear","window","location","reload","setItem","error","console","log","login","data","type","payload","logout","setWalletType","removeItem","tokenListAdd","tokenListDel","saveSlippagePercentage","saveDeadline","saveUser","saveUserLpTokens","checkUserLpTokens","savereffralAddress","address","addTransaction","persist","recentTransactions","unshift","removeTokenList","findIndex","tokenList","a","toLowerCase","tkList","splice","loginConfirmationScreen","logoutConfirmationScreen","saveFotterValues"],"mappings":"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","sourcesContent":["import packageJson from \"../../../package.json\";\nimport { ContractServices } from \"../../services/ContractServices\";\n\n/** seting action types */\nexport const actionTypes = {\n  USER_CONNECTED: \"USER_CONNECTED\",\n  LOGOUT: \"LOGOUT\",\n  TOKEN_LIST_ADD: \"TOKEN_LIST_ADD\",\n  TOKEN_LIST_DEL: \"TOKEN_LIST_DEL\",\n  SAVE_SLIPPAGE_PERCENTAGE: \"SAVE_SLIPPAGE_PERCENTAGE\",\n  SAVE_DEADLINE: \"SAVE_DEADLINE\",\n  LOGIN_USER_SUCCESS: \"LOGIN_USER_SUCCESS\",\n  SAVE_USER_LP_TOKENS: \"SAVE_USER_LP_TOKENS\",\n  SAVE_USER_RECENT_TRANSACTIONS: \"SAVE_USER_RECENT_TRANSACTIONS\",\n  SAVE_REFFRAL_ADDRESS: \"SAVE_REFFRAL_ADDRESS\",\n  CHECK_USER_LPTOKENS: \"CHECK_USER_LPTOKENS\",\n  LOGIN_CONFIRMATION_SREEN: \"LOGIN_CONFIRMATION_SREEN\",\n  LOGOUT_CONFIRMATION_SREEN: \"LOGOUT_CONFIRMATION_SREEN\",\n  SAVE_FOOTER_DATA: \"SAVE_FOOTER_DATA\",\n};\n\nexport const versionManager = () => async (dispatch, getState) => {\n  try {\n    const version = packageJson.version;\n    const react_version = localStorage.getItem(\"react_version\");\n    if (react_version && version !== react_version) {\n      localStorage.clear();\n      window.location.reload();\n    }\n    if (!react_version) {\n      localStorage.setItem(\"react_version\", version);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*\n * Action creators\n */\nexport const login = (data) => {\n  return {\n    type: actionTypes.USER_CONNECTED,\n    payload: data,\n  };\n};\nexport const logout = () => {\n  ContractServices.setWalletType(\"Metamask\");\n  localStorage.removeItem(\"persist:root\")\n  window.location.reload();\n  return {\n    type: actionTypes.LOGOUT,\n  };\n};\n\nexport const tokenListAdd = (data) => {\n  return {\n    type: actionTypes.TOKEN_LIST_ADD,\n    payload: data,\n  };\n};\nexport const tokenListDel = (data) => {\n  return {\n    type: actionTypes.TOKEN_LIST_DEL,\n    payload: data,\n  };\n};\nexport const saveSlippagePercentage = (data) => {\n  return {\n    type: actionTypes.SAVE_SLIPPAGE_PERCENTAGE,\n    payload: data,\n  };\n};\nexport const saveDeadline = (data) => {\n  return {\n    type: actionTypes.SAVE_DEADLINE,\n    payload: data,\n  };\n};\nexport const saveUser = (data) => {\n  return {\n    type: actionTypes.LOGIN_USER_SUCCESS,\n    payload: data,\n  };\n};\nexport const saveUserLpTokens = (data) => {\n  return {\n    type: actionTypes.SAVE_USER_LP_TOKENS,\n    payload: data,\n  };\n};\nexport const checkUserLpTokens = (payload) => {\n  return {\n    type: actionTypes.CHECK_USER_LPTOKENS,\n    payload\n  };\n}\n\nexport const savereffralAddress = (address) => {\n  return {\n    type: actionTypes.SAVE_REFFRAL_ADDRESS,\n    payload: address,\n  };\n};\n\nexport const addTransaction = (data) => async (dispatch, getState) => {\n  let {\n    persist: { recentTransactions },\n  } = getState();\n  recentTransactions.unshift(data);\n  dispatch({\n    type: actionTypes.SAVE_USER_RECENT_TRANSACTIONS,\n    payload: { recentTransactions },\n  });\n};\n\nexport const removeTokenList = (data) => async (dispatch, getState) => {\n\n  // let {\n  //   persist: { tokenList },\n  // } = getState();\n  const findIndex = tokenList.findIndex(\n    (a) =>\n      a.address.toLowerCase() === data.address.toLowerCase()\n  )\n  const tkList = tokenList.splice(findIndex, 1);\n  // console.log(tkList);\n};\n\nexport const loginConfirmationScreen = (data) => {\n  return {\n    type: actionTypes.LOGIN_CONFIRMATION_SREEN,\n  };\n};\n\nexport const logoutConfirmationScreen = (data) => {\n  return {\n    type: actionTypes.LOGOUT_CONFIRMATION_SREEN,\n  };\n};\n\nexport const saveFotterValues = (data) => async (dispatch, getState) => {\n\n  dispatch({\n    type: actionTypes.SAVE_FOOTER_DATA,\n    payload: data,\n  });\n};"]},"metadata":{},"sourceType":"module"}