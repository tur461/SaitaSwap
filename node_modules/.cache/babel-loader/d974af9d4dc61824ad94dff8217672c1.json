{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/components/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './Header.scss';\nimport { Link } from 'react-router-dom';\nimport IconToggle from '../../assets/images/menu_toggle_icon.png';\nimport Iconmenu from '../../assets/images/wrap-menu.png';\nimport Button from \"../Button/Button\";\nimport ConnectWallet from \"../ConnectWallet/ConnectWallet\";\nimport ProfileModal from \"../ProfileModal/ProfileModal\";\nimport { login, logout, versionManager } from \"../../redux/actions\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const walletType = useSelector(state => state.persist.walletType);\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    const init = async () => {\n      await dispatch(versionManager());\n\n      if (walletType) {\n        await ContractServices.setWalletType(walletType);\n      } else {\n        dispatch(logout());\n      }\n    };\n\n    init();\n    addListeners();\n  }, []);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const connectCall = () => {\n    isUserConnected ? setShow(!show) : setShow(true);\n  };\n\n  const addListeners = async () => {\n    let address;\n\n    if (walletType === 'Metamask') {\n      address = await ContractServices.isMetamaskInstalled('');\n    }\n\n    if (walletType === 'BinanceChain') {\n      address = await ContractServices.isBinanceChainInstalled();\n    }\n\n    ContractServices.walletWindowListener();\n\n    if (address) {\n      window.ethereum.on('accountsChanged', function (accounts) {\n        const account = accounts[0];\n        dispatch(login({\n          account,\n          walletType\n        }));\n        window.location.reload();\n      });\n    }\n  };\n\n  const logoutCall = () => {\n    dispatch(logout());\n    setShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `header_style ${props.className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header_left_style\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"for_desktop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hamburg\",\n          onClick: props.small_nav,\n          children: props.mobileIcon ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Iconmenu,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: IconToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"for_mobile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hamburg\",\n          onClick: props.small_nav,\n          children: props.mobileIcon ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: IconToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Iconmenu,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        className: \"header_logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header_right_style\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => connectCall(),\n        title: isUserConnected ? `${isUserConnected.substring(1, 6)}...${isUserConnected.substr(isUserConnected.length - 4)}` : 'Connect'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), isUserConnected === \"\" && /*#__PURE__*/_jsxDEV(ConnectWallet, {\n      show: show,\n      handleShow: handleShow,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 40\n    }, this), isUserConnected !== \"\" && /*#__PURE__*/_jsxDEV(ProfileModal, {\n      show: show,\n      handleClose: handleClose,\n      logout: logoutCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"cRzBeEy9HWEEafxPBlUgMGHtsCk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/components/Header/Header.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","IconToggle","Iconmenu","Button","ConnectWallet","ProfileModal","login","logout","versionManager","ContractServices","Header","props","dispatch","isUserConnected","state","persist","walletType","show","setShow","init","setWalletType","addListeners","handleClose","handleShow","connectCall","address","isMetamaskInstalled","isBinanceChainInstalled","walletWindowListener","window","ethereum","on","accounts","account","location","reload","logoutCall","className","small_nav","mobileIcon","substring","substr","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport './Header.scss'\nimport { Link } from 'react-router-dom'\nimport IconToggle from '../../assets/images/menu_toggle_icon.png'\nimport Iconmenu from '../../assets/images/wrap-menu.png'\nimport Button from \"../Button/Button\";\nimport ConnectWallet from \"../ConnectWallet/ConnectWallet\";\nimport ProfileModal from \"../ProfileModal/ProfileModal\";\nimport { login, logout, versionManager } from \"../../redux/actions\"\nimport { ContractServices } from \"../../services/ContractServices\";\n\nconst Header = props => {\n    const dispatch = useDispatch();\n    const isUserConnected = useSelector(state => state.persist.isUserConnected);\n    const walletType = useSelector(state => state.persist.walletType);\n    const [show, setShow] = useState(false);\n    useEffect(() => {\n        const init = async () => {\n            await dispatch(versionManager());\n            if (walletType) {\n                await ContractServices.setWalletType(walletType);\n            } else {\n                dispatch(logout());\n            }\n        };\n        init();\n        addListeners();\n    }, []);\n    const handleClose = () => setShow(false);\n\n    const handleShow = () => setShow(true);\n\n    const connectCall = () => {\n        isUserConnected ? setShow(!show) : setShow(true);\n    }\n    const addListeners = async () => {\n        let address;\n        if (walletType === 'Metamask') {\n            address = await ContractServices.isMetamaskInstalled('');\n        }\n        if (walletType === 'BinanceChain') {\n            address = await ContractServices.isBinanceChainInstalled();\n        }\n\n        ContractServices.walletWindowListener();\n        if (address) {\n            window.ethereum.on('accountsChanged', function (accounts) {\n                const account = accounts[0];\n                dispatch(login({ account, walletType }));\n                window.location.reload();\n            });\n        }\n    };\n    const logoutCall = () => {\n        dispatch(logout());\n        setShow(false);\n    }\n\n    return (\n        <div className={`header_style ${props.className}`}>\n            <div className=\"header_left_style\">\n                <div className=\"for_desktop\">\n                    <div className=\"hamburg\" onClick={props.small_nav}>\n                        {\n                            props.mobileIcon ?\n                                <img src={Iconmenu} alt=\"\" />\n                                :\n                                <img src={IconToggle} />\n                        }\n                    </div>\n                </div>\n                <div className=\"for_mobile\">\n                    <div className=\"hamburg\" onClick={props.small_nav}>\n                        {\n                            props.mobileIcon ?\n                                <img src={IconToggle} />\n                                :\n                                <img src={Iconmenu} alt=\"\" />\n                        }\n                    </div>\n                </div>\n                <Link to=\"/home\" className=\"header_logo\"></Link>\n            </div>\n            <div className=\"header_right_style\">\n                <Button onClick={() => connectCall()} title={isUserConnected ? `${isUserConnected.substring(1, 6)}...${isUserConnected.substr(isUserConnected.length - 4)}` : 'Connect'} />\n            </div>\n            {isUserConnected === \"\" && <ConnectWallet show={show} handleShow={handleShow} handleClose={handleClose} />}\n            {isUserConnected !== \"\" && <ProfileModal show={show} handleClose={handleClose} logout={logoutCall} />}\n        </div>\n\n    )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}