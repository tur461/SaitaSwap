{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/components/GalaxyCard/GalaxyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"../PlanetCard/PlanetCard.scss\"; // import RightArrow from \"../../assets/images/right-arrow.png\";\n\nimport DownArrow from \"../../assets/images/down-arrow.png\";\nimport Schdule from \"../../assets/images/schdule.png\";\nimport ButtonPrimary from \"../Button/Button\";\nimport \"./GalaxyCard.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { MAIN_CONTRACT_LIST, TOKEN_LIST, WETH, ANCHOR_BUSD_LP, BNB_BUSD_LP } from \"../../assets/tokens\";\nimport { BigNumber } from \"bignumber.js\";\nimport { toast } from \"../Toast/Toast\";\nimport { addTransaction, startLoading, stopLoading } from \"../../redux/actions\";\nimport { addCommas } from \"../../constant\";\nimport ConnectWallet from \"../ConnectWallet/ConnectWallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GalaxyCard = props => {\n  _s();\n\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const [classToggle, setClassToggle] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [show1, setShow1] = useState(false);\n\n  const handleClose1 = () => setShow1(false);\n\n  const handleShow1 = () => setShow1(true);\n\n  const dispatch = useDispatch();\n  const {\n    farm: {\n      poolInfo,\n      userInfo,\n      pid,\n      niobId,\n      isLocked,\n      dollarVal\n    },\n    index,\n    currentIndex,\n    handleChange,\n    harvestOnClick,\n    stakeHandle,\n    handleRoiModal,\n    status\n  } = props;\n  const [lpTokenDetails, setLpTokenDetails] = useState(null);\n  const [showIncrease, setShowIncrease] = useState(false);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [tokenStaked, setTokenStaked] = useState(0);\n  const [liquidity, setLiquidity] = useState(0);\n  const [showApproveButton, setShowApproveButton] = useState(true);\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const [stakeAmounts, setStakeAmounts] = useState({\n    amount: 0,\n    rewards: 0\n  });\n  const [pantherAddress, setPantherAddress] = useState('');\n  const [apr, setApr] = useState(0);\n  const [roi, setROI] = useState({\n    allocPoint: 0,\n    totalAllcationPoint: 0,\n    anchorPerBlock: 0,\n    anchorPrice: 0,\n    liquidity: 0,\n    lpWorth: 0\n  });\n  const [dollarValue, setAnchorDollarValue] = useState(0.01);\n  const [stakedDollarValue, setStakedDollarValue] = useState(0);\n  useEffect(() => {\n    init();\n    getPantherAddress();\n    getAnchorDollarValue();\n  }, [isUserConnected]);\n\n  const getPantherAddress = async () => {\n    const res = await FarmService.poolInfoo();\n    setPantherAddress(res);\n  };\n\n  const getAnchorDollarValue = async () => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n        if (poolInfo.lpToken.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n          const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        } else if (poolInfo.lpToken.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n          const pair = await ExchangeService.getPairFromPancakeFactory(poolInfo.lpToken, TOKEN_LIST[2].address);\n          const reserves = await ExchangeService.getReserves(pair);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const getDollarAPR = async address => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n        if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n          const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        } else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n          const pair = await ExchangeService.getPairFromPancakeFactory(address, TOKEN_LIST[2].address);\n          const reserves = await ExchangeService.getReserves(pair);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const init = async () => {\n    if (poolInfo) {\n      const {\n        lpToken\n      } = poolInfo;\n\n      if (lpToken) {\n        const totalSupplyTemp = await ContractServices.getTotalSupply(lpToken);\n        setTotalSupply(totalSupplyTemp);\n        const tokenAmount = await ExchangeService.getTokenStaked(lpToken);\n        setTokenStaked(tokenAmount);\n        let price = 0;\n\n        if (lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n          price = 1;\n        } else {\n          const tokenPairUSDT = await ExchangeService.getPair(lpToken, TOKEN_LIST[2].address);\n          price = await calPrice(tokenPairUSDT);\n        }\n\n        let liq;\n\n        if (poolInfo.lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n          liq = tokenAmount * 1;\n        } else {\n          const dv = await getAnchorDollarValue();\n          liq = tokenAmount * dv;\n        }\n\n        setLiquidity(liq);\n        const lpTokenDetailsTemp = await FarmService.getPoolTokenDetails(lpToken);\n        const a = await calculateAPR(Number(poolInfo.allocPoint), lpToken, liquidity); // console.log('=====', pid, poolInfo.allocPoint, lpToken, liquidity);\n\n        if (pid == niobId) {\n          const a = await calculateAPR(Number(poolInfo.allocPoint), lpToken, liquidity);\n          setApr(a * 10.5537);\n        } else {\n          setApr(a);\n        } // setApr(a);\n\n\n        lpTokenDetailsTemp.apr = a;\n        setLpTokenDetails(lpTokenDetailsTemp);\n\n        if (isUserConnected) {\n          const allowance = await ContractServices.allowanceToken(lpToken, MAIN_CONTRACT_LIST.farm.address, isUserConnected);\n          let check = true;\n\n          if (BigNumber(allowance).isGreaterThanOrEqualTo(BigNumber(2 * 255 - 1))) {\n            setShowApproveButton(false);\n            check = false;\n          }\n\n          let balance = await ContractServices.getTokenBalance(lpToken, isUserConnected);\n\n          if (balance > 0.00001) {\n            balance -= 0.00001;\n          }\n\n          setBalance(balance);\n          const amount = Number((Number(userInfo.amount) / 10 ** Number(lpTokenDetailsTemp.decimals)).toFixed(5));\n          const price = await handleStakeDollarValue(amount, lpToken);\n          const rewards = Number(Number((await FarmService.pendingPanther(pid, isUserConnected)) / 10 ** 18).toFixed(5));\n\n          if (!check && amount > 0) {\n            setShowIncrease(true);\n          }\n\n          setStakeAmounts({\n            amount,\n            rewards\n          });\n          setStakedDollarValue(price); //nextHarvest\n\n          const nextHarvestUntil = await FarmService.canHarvest(pid, isUserConnected);\n\n          if (!check && rewards > 0 && Number(userInfo.nextHarvestUntil) > 0 && nextHarvestUntil) {\n            setShowHarvest(true);\n          }\n        }\n      }\n    }\n  };\n\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error('Wallet address doesn`t match!');\n    }\n\n    if (approvalConfirmation) {\n      return toast.info('Token approval is processing');\n    } // (2*256 - 1);\n\n\n    const value = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\n    try {\n      dispatch(startLoading());\n      setApprovalConfirmation(true);\n      const r = await ContractServices.approveToken(isUserConnected, value, MAIN_CONTRACT_LIST.farm.address, poolInfo.lpToken);\n\n      if (r) {\n        let data = {\n          message: `Approve LP Token`,\n          tx: r.transactionHash\n        };\n        dispatch(addTransaction(data));\n        setApprovalConfirmation(false);\n        init();\n      }\n\n      dispatch(stopLoading());\n    } catch (err) {\n      setApprovalConfirmation(false);\n      dispatch(stopLoading());\n      toast.error('Approval Transaction Reverted!');\n    }\n  };\n\n  const beforeStake = async (type, isLocked) => {\n    if (isUserConnected) {\n      let bal = 0;\n\n      if (type === 'deposit') {\n        bal = balance;\n      }\n\n      if (type === 'withdraw') {\n        bal = stakeAmounts.amount;\n      }\n\n      stakeHandle({\n        pid,\n        poolInfo,\n        lpTokenDetails,\n        balance: bal,\n        niobId,\n        isLocked\n      }, type);\n    } else {\n      return toast.error('Connect wallet first!');\n    }\n  };\n\n  const calPrice = async pairAddress => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    }\n\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n    }\n\n    let priceBNBToUSD = await calPrice(BNB_BUSD_LP);\n\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n      return price * priceBNBToUSD;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n      return price * priceBNBToUSD;\n    }\n  };\n\n  const calculateAPR = async (allocPoint, lpToken, lpWorth) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(await FarmService.totalAllocationPoint());\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock()); //need to calculate usd price.\n\n    const liquidity = await handleLiquidity(lpToken);\n    console.log(\"ANCHOR PRICE:\", anchorPrice);\n    console.log(\"liquidityliquidity:\", liquidity);\n\n    if (liquidity != 0) {\n      const apr = allocPoint / totalAllcationPoint * (anchorPerBlock / 10 ** 18 * 28800 * 365 * 100 * anchorPrice) / liquidity;\n      setROI({\n        allocPoint,\n        totalAllcationPoint,\n        anchorPerBlock,\n        anchorPrice,\n        liquidity,\n        lpWorth\n      });\n      return apr;\n    }\n\n    return 0;\n  };\n\n  const handleLiquidity = async tokenAddress => {\n    if (tokenAddress != \"0x0000000000000000000000000000000000000000\") {\n      const reserve = await ExchangeService.getTokenStaked(tokenAddress);\n      const tokenPairUSDT = await ExchangeService.getPair(tokenAddress, TOKEN_LIST[2].address);\n      const tokenPairBNB = await ExchangeService.getPair(tokenAddress, WETH);\n      let priceA = 0;\n\n      if (tokenAddress.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n        priceA = 1;\n      } else if (tokenAddress.toLowerCase() == WETH.toLowerCase()) {\n        priceA = await getDollarAPR(tokenAddress);\n      }\n\n      if (priceA == 0) {\n        if (tokenPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await getDollarAPR(tokenAddress);\n        } else if (tokenPairBNB != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await getDollarAPR(tokenAddress);\n          priceA = 0;\n        }\n      }\n\n      const liquidity = reserve * priceA;\n      return Number(liquidity).toFixed(2);\n    }\n\n    return 0;\n  };\n\n  const handleIcon = lpTokenName => {\n    if (lpTokenName != undefined) {\n      const tokenObj = TOKEN_LIST.find(d => d.symbol.toLowerCase() === lpTokenName.toLowerCase());\n      return tokenObj === null || tokenObj === void 0 ? void 0 : tokenObj.icon;\n    }\n  };\n\n  const earnedDollarValue = (dollarValue, rewards) => {\n    let fixedAfterDecimal = Number(dollarValue * rewards).toFixed(6);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  };\n\n  const handleStakeDollarValue = async (stakedAmount, lpToken) => {\n    const pairAddress = await ExchangeService.getPair(lpToken, TOKEN_LIST[2].address);\n    let price;\n\n    if (lpToken.toLowerCase() === TOKEN_LIST[2].address) {\n      price = 1;\n    } else {\n      price = await calPrice(pairAddress);\n    }\n\n    const dollarPrice = stakedAmount * price;\n    return dollarPrice;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: `planet_bar glaxy_bar`,\n      onClick: () => setClassToggle(!classToggle),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cions\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"coin_imgs uppr\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: handleIcon(lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName) ? handleIcon(lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"coin_title glxy_token\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title_nm\",\n            children: \"Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 51\n          }, this), lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName, \" \", isLocked ? \"(Lock)\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin_detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prcentx\",\n            children: [(poolInfo === null || poolInfo === void 0 ? void 0 : poolInfo.displayAllocPoint) ? poolInfo === null || poolInfo === void 0 ? void 0 : poolInfo.displayAllocPoint : poolInfo === null || poolInfo === void 0 ? void 0 : poolInfo.allocPoint, \"X\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"QrIcon\",\n            src: Schdule,\n            onClick: () => handleRoiModal(roi, lpTokenDetails, pid)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"apr\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"APR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [addCommas(apr.toFixed(2)), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lqdty\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Liquidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", addCommas(liquidity.toFixed(2))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"erndniob\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Earned NIOB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: stakeAmounts.rewards !== NaN ? addCommas(stakeAmounts.rewards) : \"0.00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$ \", stakeAmounts.rewards !== NaN ? earnedDollarValue(dollarVal, stakeAmounts.rewards) : \"0.00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dtl_btn\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Details\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: DownArrow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classToggle ? \"planet_strip\" : \"d-none\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stakedValue\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex comnDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stkd_title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Total Staked:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Stake:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Deposit Fee:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boldTxt\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: addCommas(tokenStaked.toFixed(2))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [poolInfo.depositFeeBP ? Number(poolInfo.depositFeeBP) / 10000 * 100 : 0, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex comnDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stkd_title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Staked Dollar Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Earned Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Harvest Interval:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boldTxt\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"$\", stakedDollarValue ? addCommas(stakedDollarValue.toFixed(9)) : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"$ \", stakeAmounts.rewards !== NaN ? earnedDollarValue(dollarVal, stakeAmounts.rewards) : \"0.00\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [poolInfo.harvestInterval ? Number((poolInfo.harvestInterval / 3600).toFixed(2)) : 0, \" Hour(s)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vwdoc_btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"linksTxt\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"View on BscScan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"View Project Site\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"available_funds\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"funds\",\n              children: [isUserConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: showIncrease ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cardFarm_increase\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => beforeStake(\"withdraw\", isLocked),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => beforeStake(\"deposit\", isLocked),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: showApproveButton ? /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"funds_btn\",\n                    onClick: () => handleTokenApproval(),\n                    children: \"Enable Pool\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"funds_btn\",\n                    onClick: () => beforeStake(\"deposit\"),\n                    children: \"Stake\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: \"unlockWallet_Btn\",\n                  onClick: () => handleShow1(),\n                  children: \"Unlock Wallet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                className: \"unlockWallet_Btn\",\n                onClick: () => {\n                  setShowHarvest(false);\n                  harvestOnClick(pid, lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName);\n                },\n                title: \"Harvest\",\n                disabled: !showHarvest\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectWallet, {\n      show: show1,\n      handleShow: handleShow1,\n      handleClose: handleClose1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GalaxyCard, \"shHzT5NrboQZAzt7pJQRIsjZ15s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = GalaxyCard;\nexport default GalaxyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GalaxyCard\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/components/GalaxyCard/GalaxyCard.js"],"names":["React","useEffect","useState","Button","DownArrow","Schdule","ButtonPrimary","useDispatch","useSelector","FarmService","ExchangeService","ContractServices","MAIN_CONTRACT_LIST","TOKEN_LIST","WETH","ANCHOR_BUSD_LP","BNB_BUSD_LP","BigNumber","toast","addTransaction","startLoading","stopLoading","addCommas","ConnectWallet","GalaxyCard","props","isUserConnected","state","persist","classToggle","setClassToggle","show","setShow","handleClose","handleShow","show1","setShow1","handleClose1","handleShow1","dispatch","farm","poolInfo","userInfo","pid","niobId","isLocked","dollarVal","index","currentIndex","handleChange","harvestOnClick","stakeHandle","handleRoiModal","status","lpTokenDetails","setLpTokenDetails","showIncrease","setShowIncrease","totalSupply","setTotalSupply","tokenStaked","setTokenStaked","liquidity","setLiquidity","showApproveButton","setShowApproveButton","approvalConfirmation","setApprovalConfirmation","showHarvest","setShowHarvest","balance","setBalance","stakeAmounts","setStakeAmounts","amount","rewards","pantherAddress","setPantherAddress","apr","setApr","roi","setROI","allocPoint","totalAllcationPoint","anchorPerBlock","anchorPrice","lpWorth","dollarValue","setAnchorDollarValue","stakedDollarValue","setStakedDollarValue","init","getPantherAddress","getAnchorDollarValue","res","poolInfoo","lpToken","undefined","toLowerCase","address","reserves","getReserves","val","toFixed","pair","getPairFromPancakeFactory","error","console","log","getDollarAPR","totalSupplyTemp","getTotalSupply","tokenAmount","getTokenStaked","price","tokenPairUSDT","getPair","calPrice","liq","dv","lpTokenDetailsTemp","getPoolTokenDetails","a","calculateAPR","Number","allowance","allowanceToken","check","isGreaterThanOrEqualTo","getTokenBalance","decimals","handleStakeDollarValue","pendingPanther","nextHarvestUntil","canHarvest","handleTokenApproval","acc","getDefaultAccount","info","value","r","approveToken","data","message","tx","transactionHash","err","beforeStake","type","bal","pairAddress","tokenZero","getTokenZero","tokenOne","getTokenOne","reserve","decimalZero","getDecimals","decimalOne","priceBNBToUSD","totalAllocationPoint","pantherPerBlock","handleLiquidity","tokenAddress","tokenPairBNB","priceA","handleIcon","lpTokenName","tokenObj","find","d","symbol","icon","earnedDollarValue","fixedAfterDecimal","stakedAmount","dollarPrice","displayAllocPoint","NaN","depositFeeBP","harvestInterval"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"../PlanetCard/PlanetCard.scss\";\n// import RightArrow from \"../../assets/images/right-arrow.png\";\nimport DownArrow from \"../../assets/images/down-arrow.png\";\nimport Schdule from \"../../assets/images/schdule.png\";\nimport ButtonPrimary from \"../Button/Button\";\nimport \"./GalaxyCard.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { MAIN_CONTRACT_LIST, TOKEN_LIST, WETH, ANCHOR_BUSD_LP, BNB_BUSD_LP } from \"../../assets/tokens\";\nimport { BigNumber } from \"bignumber.js\"\nimport { toast } from \"../Toast/Toast\";\nimport { addTransaction, startLoading, stopLoading } from \"../../redux/actions\";\nimport { addCommas } from \"../../constant\";\nimport ConnectWallet from \"../ConnectWallet/ConnectWallet\";\n\nconst GalaxyCard = (props) => {\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const [classToggle, setClassToggle] = useState(false);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [show1, setShow1] = useState(false);\n  const handleClose1 = () => setShow1(false);\n  const handleShow1 = () => setShow1(true);\n\n  const dispatch = useDispatch();\n  const { farm: { poolInfo, userInfo, pid, niobId, isLocked, dollarVal }, index, currentIndex, handleChange,\n    harvestOnClick, stakeHandle, handleRoiModal, status } = props;\n\n  const [lpTokenDetails, setLpTokenDetails] = useState(null);\n  const [showIncrease, setShowIncrease] = useState(false);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [tokenStaked, setTokenStaked] = useState(0);\n  const [liquidity, setLiquidity] = useState(0);\n  const [showApproveButton, setShowApproveButton] = useState(true);\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const [stakeAmounts, setStakeAmounts] = useState({ amount: 0, rewards: 0 });\n  const [pantherAddress, setPantherAddress] = useState('');\n  const [apr, setApr] = useState(0);\n  const [roi, setROI] = useState({ allocPoint: 0, totalAllcationPoint: 0, anchorPerBlock: 0, anchorPrice: 0, liquidity: 0, lpWorth: 0 });\n  const [dollarValue, setAnchorDollarValue] = useState(0.01);\n  const [stakedDollarValue, setStakedDollarValue] = useState(0);\n\n  useEffect(() => {\n    init();\n    getPantherAddress();\n    getAnchorDollarValue();\n  }, [isUserConnected]);\n  const getPantherAddress = async () => {\n    const res = await FarmService.poolInfoo();\n    setPantherAddress(res);\n  }\n  const getAnchorDollarValue = async () => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n\n        if (poolInfo.lpToken.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n          const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return (val.toFixed(3));\n        }\n        else if (poolInfo.lpToken.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n\n          const pair = await ExchangeService.getPairFromPancakeFactory(poolInfo.lpToken, TOKEN_LIST[2].address);\n          const reserves = await ExchangeService.getReserves(pair);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return (val.toFixed(3));\n        }\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n  }\n\n  const getDollarAPR = async (address) => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n\n        if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n          const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return (val.toFixed(3));\n        }\n        else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n\n          const pair = await ExchangeService.getPairFromPancakeFactory(address, TOKEN_LIST[2].address);\n          const reserves = await ExchangeService.getReserves(pair);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return (val.toFixed(3));\n        }\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n  }\n\n  const init = async () => {\n    if (poolInfo) {\n      const { lpToken } = poolInfo;\n      if (lpToken) {\n        const totalSupplyTemp = await ContractServices.getTotalSupply(lpToken);\n        setTotalSupply(totalSupplyTemp);\n        const tokenAmount = await ExchangeService.getTokenStaked(lpToken);\n        setTokenStaked(tokenAmount);\n        let price = 0;\n        if (lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n          price = 1\n        } else {\n          const tokenPairUSDT = await ExchangeService.getPair(lpToken, TOKEN_LIST[2].address);\n          price = await calPrice(tokenPairUSDT);\n        }\n        let liq;\n        if (poolInfo.lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n          liq = (tokenAmount * 1);\n        } else {\n          const dv = await getAnchorDollarValue();\n          liq = (tokenAmount * dv);\n        }\n        setLiquidity(liq);\n        const lpTokenDetailsTemp = await FarmService.getPoolTokenDetails(lpToken);\n        const a = await calculateAPR(Number(poolInfo.allocPoint), lpToken, liquidity);\n        // console.log('=====', pid, poolInfo.allocPoint, lpToken, liquidity);\n\n\n\n        if (pid == niobId) {\n          const a = await calculateAPR(Number(poolInfo.allocPoint), lpToken, liquidity);\n          setApr(a * 10.5537)\n        } else {\n          setApr(a);\n        }\n\n\n\n        // setApr(a);\n        lpTokenDetailsTemp.apr = a;\n        setLpTokenDetails(lpTokenDetailsTemp);\n        if (isUserConnected) {\n          const allowance = await ContractServices.allowanceToken(lpToken, MAIN_CONTRACT_LIST.farm.address, isUserConnected);\n          let check = true;\n          if (BigNumber(allowance).isGreaterThanOrEqualTo(BigNumber(2 * 255 - 1))) {\n            setShowApproveButton(false);\n            check = false;\n          }\n\n          let balance = await ContractServices.getTokenBalance(lpToken, isUserConnected);\n          if (balance > 0.00001) {\n            balance -= 0.00001;\n          }\n          setBalance(balance);\n\n          const amount = Number((Number(userInfo.amount) / 10 ** Number(lpTokenDetailsTemp.decimals)).toFixed(5));\n          const price = await handleStakeDollarValue(amount, lpToken);\n          const rewards = Number((Number(await FarmService.pendingPanther(pid, isUserConnected) / 10 ** 18).toFixed(5)));\n          if (!check && amount > 0) {\n            setShowIncrease(true);\n          }\n          setStakeAmounts({ amount, rewards });\n\n          setStakedDollarValue(price);\n\n\n          //nextHarvest\n          const nextHarvestUntil = await FarmService.canHarvest(pid, isUserConnected);\n          if (!check && rewards > 0 && Number(userInfo.nextHarvestUntil) > 0 && nextHarvestUntil) {\n            setShowHarvest(true);\n          }\n        }\n      }\n    }\n  };\n\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error('Wallet address doesn`t match!');\n    }\n    if (approvalConfirmation) {\n      return toast.info('Token approval is processing');\n    }\n    // (2*256 - 1);\n    const value = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n\n    try {\n      dispatch(startLoading());\n      setApprovalConfirmation(true);\n      const r = await ContractServices.approveToken(isUserConnected, value, MAIN_CONTRACT_LIST.farm.address, poolInfo.lpToken);\n      if (r) {\n        let data = {\n          message: `Approve LP Token`,\n          tx: r.transactionHash\n        };\n        dispatch(addTransaction(data));\n        setApprovalConfirmation(false);\n        init();\n      }\n      dispatch(stopLoading());\n    } catch (err) {\n      setApprovalConfirmation(false);\n      dispatch(stopLoading());\n      toast.error('Approval Transaction Reverted!');\n    }\n  }\n\n  const beforeStake = async (type, isLocked) => {\n    if (isUserConnected) {\n      let bal = 0;\n      if (type === 'deposit') {\n        bal = balance;\n      }\n      if (type === 'withdraw') {\n        bal = stakeAmounts.amount;\n      }\n      stakeHandle({ pid, poolInfo, lpTokenDetails, balance: bal, niobId, isLocked }, type);\n    } else {\n      return toast.error('Connect wallet first!');\n    }\n  }\n\n  const calPrice = async (pairAddress) => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    }\n\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = ((reserve[0] * (10 ** decimalOne)) / (reserve[1] * (10 ** decimalZero)));\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = ((reserve[1] * (10 ** decimalZero)) / (reserve[0] * (10 ** decimalOne)));\n    }\n\n    let priceBNBToUSD = await calPrice(BNB_BUSD_LP);\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price = ((reserve[0] * (10 ** decimalOne)) / (reserve[1] * (10 ** decimalZero)));\n      return (price * priceBNBToUSD);\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price = ((reserve[1] * (10 ** decimalZero)) / (reserve[0] * (10 ** decimalOne)));\n      return (price * priceBNBToUSD);\n    }\n  }\n\n  const calculateAPR = async (allocPoint, lpToken, lpWorth) => {\n\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(await FarmService.totalAllocationPoint());\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock());\n    //need to calculate usd price.\n    const liquidity = await handleLiquidity(lpToken);\n    console.log(\"ANCHOR PRICE:\", anchorPrice);\n    console.log(\"liquidityliquidity:\", liquidity);\n    if (liquidity != 0) {\n      const apr = ((allocPoint / totalAllcationPoint) * ((anchorPerBlock / 10 ** 18) * 28800 * 365 * 100 * anchorPrice)) / liquidity;\n      setROI({ allocPoint, totalAllcationPoint, anchorPerBlock, anchorPrice, liquidity, lpWorth });\n\n      return apr;\n    }\n\n    return 0;\n  }\n  const handleLiquidity = async (tokenAddress) => {\n\n    if (tokenAddress != \"0x0000000000000000000000000000000000000000\") {\n\n      const reserve = await ExchangeService.getTokenStaked(tokenAddress);\n      const tokenPairUSDT = await ExchangeService.getPair(tokenAddress, TOKEN_LIST[2].address);\n      const tokenPairBNB = await ExchangeService.getPair(tokenAddress, WETH);\n\n      let priceA = 0;\n\n      if (tokenAddress.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n        priceA = 1;\n      } else if (tokenAddress.toLowerCase() == WETH.toLowerCase()) {\n        priceA = await getDollarAPR(tokenAddress);\n      }\n\n      if (priceA == 0) {\n        if (tokenPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await getDollarAPR(tokenAddress);\n        } else if (tokenPairBNB != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await getDollarAPR(tokenAddress);\n          priceA = 0;\n        }\n      }\n\n      const liquidity = (reserve * priceA);\n\n      return Number(liquidity).toFixed(2);\n    }\n    return 0;\n  }\n  const handleIcon = (lpTokenName) => {\n    if (lpTokenName != undefined) {\n      const tokenObj = TOKEN_LIST.find(\n        (d) => d.symbol.toLowerCase() === lpTokenName.toLowerCase()\n      );\n      return tokenObj?.icon;\n    }\n\n  }\n  const earnedDollarValue = (dollarValue, rewards) => {\n\n    let fixedAfterDecimal = Number((dollarValue * rewards)).toFixed(6);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  }\n\n  const handleStakeDollarValue = async (stakedAmount, lpToken) => {\n    const pairAddress = await ExchangeService.getPair(lpToken, TOKEN_LIST[2].address);\n    let price;\n    if (lpToken.toLowerCase() === TOKEN_LIST[2].address) {\n      price = 1;\n    } else {\n      price = await calPrice(pairAddress);\n    }\n    const dollarPrice = stakedAmount * price;\n    return dollarPrice;\n  }\n\n  return (\n    <>\n      <Button\n        className={`planet_bar glaxy_bar`}\n        onClick={() => setClassToggle(!classToggle)}\n      >\n        <div className=\"cions\">\n          <span className=\"coin_imgs uppr\">\n            <img src={handleIcon(lpTokenDetails?.lpTokenName) ? handleIcon(lpTokenDetails?.lpTokenName) : null} />\n          </span>\n          <span className=\"coin_title glxy_token\"><span className=\"title_nm\">Token</span>{lpTokenDetails?.lpTokenName} {isLocked ? \"(Lock)\" : \"\"}</span>\n        </div>\n\n        <div className=\"coin_detail\">\n          <div className=\"d-flex align-items-center\">\n            <div className=\"prcentx\">{poolInfo?.displayAllocPoint ? poolInfo?.displayAllocPoint : poolInfo?.allocPoint}X</div>\n            <img className=\"QrIcon\" src={Schdule} onClick={() => handleRoiModal(roi, lpTokenDetails, pid)} />\n            <div className=\"apr\">\n              <span>APR</span>\n              <p>{addCommas(apr.toFixed(2))}%</p>\n            </div>\n          </div>\n          <div className=\"lqdty\">\n            <span>Liquidity</span>\n            <p>${addCommas(liquidity.toFixed(2))}</p>\n          </div>\n          <div className=\"erndniob\">\n            <span>Earned NIOB</span>\n            <p>{stakeAmounts.rewards !== NaN ? addCommas(stakeAmounts.rewards) : \"0.00\"}</p>\n            <p>$ {stakeAmounts.rewards !== NaN ? earnedDollarValue(dollarVal, stakeAmounts.rewards) : \"0.00\"}</p>\n          </div>\n        </div>\n        <div className=\"dtl_btn\">\n          <p>\n            Details{\" \"}\n            <span>\n              <img src={DownArrow} />\n            </span>\n          </p>\n        </div>\n      </Button>\n      <div className={classToggle ? \"planet_strip\" : \"d-none\"}>\n        <div className=\"stakedValue\">\n          <div className=\"d-flex comnDiv\">\n            <div className=\"stkd_title\">\n              <h6>Total Staked:</h6>\n              <h6>Stake:</h6>\n              <h6>Deposit Fee:</h6>\n            </div>\n            <div className=\"boldTxt\">\n              <h6>{addCommas(tokenStaked.toFixed(2))}</h6>\n              <h6>{lpTokenDetails?.lpTokenName}</h6>\n              <h6>{poolInfo.depositFeeBP ? (Number(poolInfo.depositFeeBP) / 10000) * 100 : 0}%</h6>\n            </div>\n          </div>\n          <div className=\"d-flex comnDiv\">\n            <div className=\"stkd_title\">\n              <h6>Staked Dollar Value:</h6>\n              <h6>Earned Value:</h6>\n              <h6>Harvest Interval:</h6>\n            </div>\n            <div className=\"boldTxt\">\n              <h6>${stakedDollarValue ? addCommas(stakedDollarValue.toFixed(9)) : 0}</h6>\n              <h6>$ {stakeAmounts.rewards !== NaN ? earnedDollarValue(dollarVal, stakeAmounts.rewards) : \"0.00\"}</h6>\n              <h6>{poolInfo.harvestInterval ? Number(((poolInfo.harvestInterval) / 3600).toFixed(2)) : 0} Hour(s)</h6>\n            </div>\n          </div>\n          <div className=\"vwdoc_btn\">\n            <div className=\"linksTxt\">\n              <a href=\"#\">View on BscScan</a>\n              <a href=\"#\">View Project Site</a>\n            </div>\n            <div className=\"available_funds\">\n              <div className=\"funds\">\n                {isUserConnected ? (\n                  <>\n                    {showIncrease ? (\n                      <div className=\"cardFarm_increase\">\n                        <button\n                          type=\"button\"\n                          onClick={() => beforeStake(\"withdraw\", isLocked)}\n                        >\n                          <span>-</span>\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={() => beforeStake(\"deposit\", isLocked)}\n                        >\n                          <span>+</span>\n                        </button>\n                      </div>\n                    ) : (\n                      <>\n                        {showApproveButton ? (\n                          <Button\n                            className=\"funds_btn\"\n                            onClick={() => handleTokenApproval()}\n                          >\n                            Enable Pool\n                          </Button>\n                        ) : (\n                          <Button\n                            className=\"funds_btn\"\n                            onClick={() => beforeStake(\"deposit\")}\n                          >\n                            Stake\n                          </Button>\n                        )}\n                      </>\n                    )}\n                  </>\n                ) : (\n                  <>\n                    <Button\n                      type=\"button\"\n                      className=\"unlockWallet_Btn\"\n                      onClick={() => handleShow1()}\n                    >\n                      Unlock Wallet\n                    </Button>\n                  </>\n                )}\n                <ButtonPrimary className=\"unlockWallet_Btn\"\n                  onClick={() => {\n                    setShowHarvest(false);\n                    harvestOnClick(pid, lpTokenDetails?.lpTokenName);\n                  }} title=\"Harvest\"\n                  disabled={!showHarvest} />\n\n              </div>\n            </div>\n\n            {/* <ButtonPrimary className=\"unlockWallet_Btn\" onClick={()=> handleShow(true)} title=\"Unlock Wallet\" /> */}\n          </div>\n        </div>\n      </div>\n      <ConnectWallet show={show1} handleShow={handleShow1} handleClose={handleClose1} />\n\n    </>\n  );\n};\n\nexport default GalaxyCard;\n\n\n"]},"metadata":{},"sourceType":"module"}