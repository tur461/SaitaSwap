{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/pages/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Carousel, Row, Col, Image } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Web3 from \"web3\";\nimport { Link } from \"react-router-dom\";\nimport { rootName } from \"../../constant\";\nimport Button from \"../../components/Button/Button\";\nimport FarmCard from \"../../components/FarmCard/FarmCard\";\nimport NIOB from \"../../assets/images/token_icons/NIOB.svg\";\nimport BUSD from \"../../assets/images/token_icons/BUSD-Token.svg\";\nimport ANCHOR from \"../../assets/images/token_icons/ANCHOR-Token.svg\";\nimport BTCB from \"../../assets/images/token_icons/BTCB-Token.svg\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { ReferralsServices } from \"../../services/ReferralsServices\";\nimport Statement from \"../../assets/Pdfs/Statement.pdf\";\nimport { MAIN_CONTRACT_LIST, BURN_ADDRESS, ANCHOR_BUSD_LP, WETH, TOKEN_LIST, BNB_BUSD_LP } from \"../../assets/tokens\";\nimport { addCommas } from \"../../constant\";\nimport { addTransaction, startLoading, stopLoading, saveFotterValues } from \"../../redux/actions\";\nimport { BigNumber } from \"bignumber.js\";\nimport Loader from \"react-loader-spinner\";\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\nimport Default from \"../../assets/images/token_icons/default.svg\";\nimport { savereffralAddress } from \"../../redux/actions\";\nimport \"./Home.scss\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport UpdateDsk from \"../../assets/images/PRDT-Trading-Banner.jpg\"; // import UpdateMob from \"../../assets/images/update_Mob.jpg\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const [potDetails, setPotDetails] = useState({\n    prizeArray: [0, 0, 0],\n    miniPrice: 0,\n    pot: 0,\n    decimals: 0\n  });\n  const {\n    ref\n  } = useParams();\n  const referralAddress = useSelector(state => state.persist.referralAddress);\n  const [rewards, seRewards] = useState(0);\n  const [niobPerBlock, setNiobPerBlock] = useState(0);\n  const [transferTaxRate, setTransferTaxRate] = useState(0);\n  const [burnedToken, setBurnedToken] = useState(0);\n  const [walletShow, setWalletShow] = useState(false);\n  const [poolLength, setPoolLength] = useState(0);\n  const [farms, setFarms] = useState([]);\n  const [inactiveFarms, setInactiveFarms] = useState([]);\n  const [stakingOnly, setStakingOnly] = useState([]);\n  const [stakeData, setStakeData] = useState(null);\n  const [stakeValue, setStakeValue] = useState(0);\n  const [referrer, setReferrer] = useState(\"0x0000000000000000000000000000000000000000\");\n  const [totalAmount, setAmount] = useState(0);\n  const [totalRewards, setRewards] = useState(0);\n  const [marketCap, setMarketCap] = useState(0.0);\n  const [anchorTotalSupply, setAnchorTotalSupply] = useState(0);\n  const [niobBusdValue, setNiobBusdValue] = useState(0);\n  const [totalMinted, setTotalMinted] = useState(0);\n  const [totalLockedRewards, setTotalLockedRewards] = useState(0);\n  const [anchorBnbWorth, setAnchorBnbWorth] = useState(0);\n  const [anchorBusdWorth, setAnchorBusdWorth] = useState(0);\n  const [tokenIds, setTokenIds] = useState();\n  const [allowance, setAllowance] = useState(false);\n  const [disable, setDisabledBUtton] = useState(false);\n  const [IButton, setIButton] = useState(false);\n  const [ticketWindow, openTicketWindow] = useState(false);\n  const [ticketValue, setvalue] = useState(1);\n  const [buyButton, setBuyButton] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [currentTicketsArray, setCurrentArray] = useState([]);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [harvest, setHarvestAll] = useState([]);\n  const [stakeConfirmation, setStakeConfimation] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [farmAndStakeLoader, setFarmAndStakeLoader] = useState(false);\n  const [liquidity, setLiquidity] = useState(0);\n  const [niobApr, setNiobApr] = useState(0);\n  const [topFarms, setTopFarms] = useState([]);\n  const [topFarmApy, setTopFarmApy] = useState(\"\");\n  useEffect(async () => {\n    init();\n\n    if (ref) {\n      const checkAddress = await Web3.utils.isAddress(ref.toLowerCase());\n\n      if (!checkAddress) {\n        toast.error(\"Address does not exist!\");\n        return;\n      }\n\n      if (isUserConnected) {\n        let re = await ReferralsServices.getReferrer(isUserConnected);\n\n        if (re != \"0x0000000000000000000000000000000000000000\") {\n          toast.error(`This user has already referral`);\n          return;\n        }\n\n        dispatch(savereffralAddress(ref.toLowerCase()));\n        return;\n      }\n\n      toast.success(`Please connect with wallet!`);\n    }\n  }, [isUserConnected]);\n\n  const init = async () => {\n    const res = await ContractServices.isMetamaskInstalled();\n\n    if (isUserConnected && res) {\n      getMarketCap();\n      getBurnedToken();\n      getNiobPerBlock();\n\n      try {\n        dispatch(startLoading());\n        let ref = await ReferralsServices.getReferrer(isUserConnected);\n\n        if (ref === \"0x0000000000000000000000000000000000000000\") {\n          if (referralAddress && referralAddress !== \"0x0000000000000000000000000000000000000000\") {\n            ref = referralAddress;\n          }\n\n          setReferrer(ref);\n        }\n\n        dispatch(stopLoading());\n        const pL = Number(await FarmService.poolLength());\n        setPoolLength(pL); // let farmsTemp = [];\n\n        let totalRewards = 0;\n        let totalLockedRewards = 0;\n        let totalLiquidity = 0;\n        let options = [];\n        const res = await ContractServices.getTokenBalance(TOKEN_LIST[1].address, isUserConnected);\n        setAmount(res); // setFarmAndStakeLoader(true);\n\n        let allAPRs = [];\n\n        for (let i = 0; i < pL; i++) {\n          const res = await FarmService.totalPoolInfo(i);\n          const userInfo = await FarmService.userInfo(i, isUserConnected);\n          const {\n            poolInfo,\n            latest\n          } = res;\n\n          if (poolInfo.lpToken != undefined) {\n            const allowance = await ContractServices.allowanceToken(poolInfo.lpToken, MAIN_CONTRACT_LIST.farm.address, isUserConnected);\n            let check = true;\n\n            if (BigNumber(allowance).isGreaterThanOrEqualTo(BigNumber(2 * 255 - 1))) {\n              // setShowApproveButton(false);\n              check = false;\n            }\n\n            const reserve = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n            const tokenZero = await ExchangeService.getTokenZero(ANCHOR_BUSD_LP);\n            const tokenOne = await ExchangeService.getTokenOne(ANCHOR_BUSD_LP);\n            const anchorPerBlock = Number(await FarmService.pantherPerBlock());\n            const price = await getPriceInUsd(tokenZero, tokenOne, reserve);\n            totalLockedRewards += (latest - poolInfo.lastRewardBlock) * price * (anchorPerBlock / 10 ** 18);\n            setTotalLockedRewards(totalLockedRewards);\n            const farmPoolInfo = await FarmService.farmAndPoolInfo(i);\n            const {\n              farm,\n              pool\n            } = farmPoolInfo;\n\n            if (farm) {\n              let res = await handleTotalLiquidity(farm.lpToken);\n              const lpTokenDetailsTemp = await FarmService.getLpTokenDetails(poolInfo.lpToken);\n              let apr = await calculateAPR(farm.allocPoint, res);\n              setTopFarms(topFarms => [...topFarms, {\n                symbol0: lpTokenDetailsTemp.symbol0,\n                symbol1: lpTokenDetailsTemp.symbol1,\n                newLiquidity: res,\n                newApr: apr\n              }]);\n              allAPRs.push(apr);\n              totalLiquidity += Number(res);\n            }\n\n            if (pool) {\n              const poolInfoForNiob = await FarmService.poolInfo(i, \"2\"); // console.log(\"poolInfoForNiob\", poolInfoForNiob);\n\n              let res = await handleTotalLiquidityForPool(pool.lpToken);\n              const tokenAmount = await ExchangeService.getTokenStaked(pool.lpToken);\n              let price = 0;\n\n              if (pool.lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n                price = 1;\n              } else {\n                const tokenPairUSDT = await ExchangeService.getPair(pool.lpToken, TOKEN_LIST[2].address);\n                price = await calPrice(tokenPairUSDT);\n              } //const niobId = await FarmService.niobId();\n              //console.log('this is apr',poolInfo,  niobId);\n\n\n              if (poolInfoForNiob.allocPoint === \"30\") {\n                let apr = await calculateAPR(poolInfoForNiob.allocPoint, res);\n                setNiobApr(apr);\n              }\n\n              const liq = tokenAmount * price;\n              totalLiquidity += Number(liq);\n              setLiquidity(totalLiquidity);\n            }\n\n            if (i === pL - 1) {\n              const totalSupply = await getTotalSupply();\n              const niobValue = await getNiobDollarValue();\n              const obj = {\n                tvl: totalLiquidity,\n                totalSupply: totalSupply,\n                niobValue: niobValue\n              };\n              dispatch(saveFotterValues(obj));\n            }\n\n            const rewards = Number(Number((await FarmService.pendingPanther(i, isUserConnected)) / 10 ** 18).toFixed(3));\n            totalRewards += rewards;\n            setRewards(totalRewards);\n            const nextHarvestUntil = await FarmService.canHarvest(i, isUserConnected);\n\n            if (!check && rewards > 0 && Number(userInfo.nextHarvestUntil) > 0 && nextHarvestUntil) {\n              setShowHarvest(true);\n              options.push({\n                pid: i,\n                lpToken: poolInfo.lpToken\n              });\n            }\n          } // if (i + 1 == pL) {\n          //     setFarmAndStakeLoader(false);\n          // }\n\n        }\n\n        setTopFarmApy(Math.max.apply(Math, allAPRs));\n        setHarvestAll(options);\n      } catch (err) {\n        console.log(err);\n        setFarmAndStakeLoader(false);\n        dispatch(stopLoading());\n      }\n    }\n  };\n\n  const calculateAPR = async (allocPoint, liquidity) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(await FarmService.totalAllocationPoint());\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock()); //need to calculate usd price.\n    // console.log(\"liquidity: \", liquidity);\n\n    if (liquidity != 0) {\n      const apr = allocPoint / totalAllcationPoint * (anchorPerBlock / 10 ** 18 * 28800 * 365 * 100 * anchorPrice) / liquidity;\n      return apr.toFixed(2);\n    }\n\n    return 0;\n  };\n\n  const getMarketCap = async () => {\n    const dollarValue = await getNiobDollarValue();\n    const totalSupply = await getTotalSupply();\n    setMarketCap(dollarValue * totalSupply);\n  };\n\n  const getNiobDollarValue = async () => {\n    const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n    setNiobBusdValue(reserves[1] / reserves[0]);\n    return reserves[1] / reserves[0];\n  };\n\n  const getTotalSupply = async () => {\n    const res = await ExchangeService.getTotalSupply(MAIN_CONTRACT_LIST.anchorNew.address);\n    const anchorTotalSupply = res;\n    const txAmount = 0.05 * anchorTotalSupply / 100;\n    setTotalMinted(anchorTotalSupply);\n    setAnchorTotalSupply(txAmount);\n    return res;\n  };\n\n  const getBurnedToken = async () => {\n    try {\n      const response = await ExchangeService.getBurnedToken();\n      setBurnedToken(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getNiobPerBlock = async () => {\n    try {\n      const niobPerBlock = Number(await FarmService.pantherPerBlock());\n      setNiobPerBlock(niobPerBlock / 10 ** 18);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getPriceInUsd = async (tokenZero, tokenOne, reserve) => {\n    let price;\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      price = reserve[0] * decimalOne / (reserve[1] * decimalZero);\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      price = reserve[1] * decimalZero / (reserve[0] * decimalOne);\n    }\n\n    return price;\n  };\n\n  const calPrice = async pairAddress => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    } // console.log(\"pairAddresspairAddress\", pairAddress);\n\n\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n    }\n\n    let priceBNBToUSD = await calPrice(BNB_BUSD_LP); //replace with BNB-USD pair\n\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n      return price * priceBNBToUSD;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n      return price * priceBNBToUSD;\n    }\n  };\n\n  const getDollarAPR = async address => {\n    try {\n      if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n        const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        let val = reserves[1] / reserves[0];\n        val = val || 0; //setAnchorDollarValue(val.toFixed(3));\n\n        return val.toFixed(3);\n      } else if (address.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n        return 1;\n      } else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n        const pair = await ExchangeService.getPairFromPancakeFactory(address, TOKEN_LIST[2].address);\n        const reserves = await ExchangeService.getReserves(pair);\n        let val = reserves[1] / reserves[0];\n        val = val || 0; // setAnchorDollarValue(val.toFixed(3));\n\n        return val.toFixed(3);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTotalLiquidity = async pairAddress => {\n    if (pairAddress != \"0x0000000000000000000000000000000000000000\") {\n      // console.log(pairAddress);\n      const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n      const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n      const reserve = await ExchangeService.getReserves(pairAddress);\n      const tokenZeroPairUSDT = await ExchangeService.getPair(tokenZero, TOKEN_LIST[2].address);\n      const tokenOnePairUSDT = await ExchangeService.getPair(tokenOne, TOKEN_LIST[2].address);\n      const tokenZeroPairBNB = await ExchangeService.getPair(tokenZero, WETH);\n      const tokenOnePairBNB = await ExchangeService.getPair(tokenOne, WETH);\n      const decimalZero = await ContractServices.getDecimals(tokenZero);\n      const decimalOne = await ContractServices.getDecimals(tokenOne); // const decimalPair = await ContractServices.getDecimals(pairAddress);\n\n      let priceA = await getDollarAPR(tokenZero);\n      let priceB = await getDollarAPR(tokenOne); // let priceA = 0;\n      // let priceB = 0;\n      // if (tokenZero.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceA = 1;\n      // } else if (tokenZero.toLowerCase() == WETH.toLowerCase()) {\n      //   priceA = await calPrice(BNB_BUSD_LP);\n      // }\n      // if (tokenOne.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceB = 1;\n      // } else if (tokenOne.toLowerCase() == WETH.toLowerCase()) {\n      //   priceB = await calPrice(BNB_BUSD_LP);\n      // }\n      // if (priceA == 0) {\n      //   if (tokenZeroPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceA = await calPrice(tokenZeroPairUSDT);\n      //   } else if (\n      //     tokenZeroPairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceA = await calPrice(tokenZeroPairBNB);\n      //   } else {\n      //     priceA = 0;\n      //   }\n      // }\n      // if (priceB == 0) {\n      //   if (tokenOnePairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceB = await calPrice(tokenOnePairUSDT);\n      //   } else if (\n      //     tokenOnePairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceB = await calPrice(tokenOnePairBNB);\n      //   } else {\n      //     priceB = 0;\n      //   }\n      // }\n\n      const totalSupply = await ExchangeService.getTotalSupply(pairAddress);\n      const tokenStaked = await ExchangeService.getTokenStaked(pairAddress);\n      const liquidity = (reserve[0] / 10 ** decimalZero * priceA + reserve[1] / 10 ** decimalOne * priceB) / totalSupply * tokenStaked;\n      return liquidity;\n    }\n\n    return 0;\n  };\n\n  const options = {\n    indicators: false\n  };\n\n  const handleTotalLiquidityForPool = async tokenAddress => {\n    if (tokenAddress != \"0x0000000000000000000000000000000000000000\") {\n      const reserve = await ExchangeService.getTokenStaked(tokenAddress);\n      const tokenPairUSDT = await ExchangeService.getPair(tokenAddress, TOKEN_LIST[2].address);\n      const tokenPairBNB = await ExchangeService.getPair(tokenAddress, WETH);\n      let priceA = 0;\n\n      if (tokenAddress.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n        priceA = 1;\n      } else if (tokenAddress.toLowerCase() == WETH.toLowerCase()) {\n        priceA = await calPrice(BNB_BUSD_LP);\n      }\n\n      if (priceA == 0) {\n        if (tokenPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await calPrice(tokenPairUSDT);\n        } else if (tokenPairBNB != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await calPrice(tokenPairBNB);\n          priceA = 0;\n        }\n      }\n\n      const liquidity = reserve * priceA;\n      return Number(liquidity).toFixed(2);\n    }\n\n    return 0;\n  };\n\n  const handleIcon = symbol => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(d => d.symbol.toLowerCase() === symbol.toLowerCase());\n      return tokenObj != undefined ? tokenObj.icon : Default;\n    }\n  };\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container container_inside homePage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: UpdateDsk,\n          className: \"forDesktop\",\n          alt: \"banner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          rel: \"stylesheet\",\n          href: \"https://prdt.niob.app\",\n          target: \"_blank\",\n          type: \"button\",\n          className: \"readState_btn\",\n          children: \"Go to Prediction Trading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        fade: true,\n        ...options,\n        children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Carousel.Caption, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Welcome to NIOB Swap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Decentralized Exchange and Automatic Liquidity Acquisition Yield Farm running currently on Binance Smart Chain.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"If you are new to NIOB please also visit our Tutorial Section in our official docs. We\\u2019ll teach you step by step you to use NIOB Swap and it\\u2019s assets.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://docs.niob.finance/tutorial\",\n              target: \"_blank\",\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"NIOB Tutorial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: require(\"../../assets/images/Link-Icon.svg\").default,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            className: \"bgImage\",\n            alt: \"image\",\n            src: require(\"../../assets/images/dashboard-header-bg.jpg\").default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Carousel.Caption, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"The Docs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"All important and technical information about the project \\\"Niob\\\", tokenomics, project roadmap and term explanations can be found in our docs. If you have any questions, please ask them in the official Niob Telegram Channel.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://docs.niob.finance\",\n              target: \"_blank\",\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"NIOB Docs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: require(\"../../assets/images/Link-Icon.svg\").default,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            className: \"bgImage\",\n            alt: \"image\",\n            src: require(\"../../assets/images/dashboard-header-bg.jpg\").default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"startEngine\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              className: \"headerImg\",\n              src: require(\"../../assets/images/swap-icon.svg\").default\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Start your engine \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Start your journey or improve your wallet portfolio:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"NIOB Price: $\", niobBusdValue.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/trade/exchange\",\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Buy NIOB Token \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"arrowIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              className: \"headerImg\",\n              src: require(\"../../assets/images/farm-icon.svg\").default\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Farm Planets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Stake LP tokens in Farms and earn up to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [topFarmApy !== \"\" ? topFarmApy : \"loading..\", \" % APR\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              to: \"farmplanets/active\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Start farming\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"arrowIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              className: \"headerImg\",\n              src: require(\"../../assets/images/reflink-icon.svg\").default\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Decentralized Ref Link \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enjoy Referral Rewards from:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Farms, Pools Swaps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              to: \"/referral\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Start inviting friends\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"arrowIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"announcements\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk  carousel_caption_announce\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"fw-strong pb-2\",\n              children: \"Announcements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n              sourceType: \"profile\",\n              screenName: \"niobfinance\",\n              options: {\n                height: 418\n              },\n              theme: \"dark\",\n              noScrollbar: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"NIOB Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"pl-0 niobStats\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Market Cap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"$\", addCommas(marketCap.toFixed(2))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Total Minted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: addCommas(Number(totalMinted).toFixed(2))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Total Burned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: addCommas(burnedToken)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Total Locked Rewards\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    className: \"value\",\n                    children: farmAndStakeLoader ? /*#__PURE__*/_jsxDEV(Loader, {\n                      type: \"Circles\",\n                      color: \"#FFFFFF\",\n                      height: 15,\n                      width: 15,\n                      visible: true // timeout={5000} //3 secs\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 25\n                    }, this) : addCommas(totalLockedRewards ? totalLockedRewards.toFixed(2) : 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 717,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Circulating Supply \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: addCommas((totalMinted - burnedToken).toFixed(2))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Max Tx Amount \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: addCommas(anchorTotalSupply.toFixed(2))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"New Niob/Block\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: niobPerBlock\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Transfer Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"3%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Total Value Locked (TVL)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"totl_value\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", farmAndStakeLoader ? /*#__PURE__*/_jsxDEV(Loader, {\n                  type: \"Circles\",\n                  color: \"#FFFFFF\",\n                  height: 15,\n                  width: 15,\n                  visible: true // timeout={5000} //3 secs\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 21\n                }, this) : addCommas(liquidity ? liquidity.toFixed(2) : 0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: \"Across all Farms and Pools\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"all_farms\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"farm_title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Top Farm Planets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"All Farms\",\n              onClick: () => {\n                history.push(`${rootName}/farmplanets/active`);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }, this), topFarms.sort(function (a, b) {\n          let keyA = a.newApr,\n              keyB = b.newApr; // Compare the 2 farms\n\n          if (keyA < keyB) return 1;\n          if (keyA > keyB) return -1;\n          return 0;\n        }).filter((farm, index) => index < 3).map((topFarm, index) => /*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(FarmCard, {\n            title: topFarm.symbol0,\n            title1: topFarm.symbol1,\n            icon1: handleIcon(topFarm === null || topFarm === void 0 ? void 0 : topFarm.symbol0) ? handleIcon(topFarm === null || topFarm === void 0 ? void 0 : topFarm.symbol0) : \"\",\n            icon2: handleIcon(topFarm === null || topFarm === void 0 ? void 0 : topFarm.symbol1) ? handleIcon(topFarm === null || topFarm === void 0 ? void 0 : topFarm.symbol1) : \"\",\n            liquidity: `$${topFarm.newLiquidity} `,\n            apy: `${topFarm.newApr != \"NaN\" ? topFarm.newApr : \"0\"} %`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 554,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"PrF+iQk93E4FFjzkeU03n4fsfHg=\", false, function () {\n  return [useDispatch, useSelector, useParams, useSelector, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/pages/Home/Home.js"],"names":["React","useEffect","useState","Carousel","Row","Col","Image","useHistory","useParams","useDispatch","useSelector","Web3","Link","rootName","Button","FarmCard","ContractServices","ExchangeService","FarmService","ReferralsServices","Statement","MAIN_CONTRACT_LIST","BURN_ADDRESS","ANCHOR_BUSD_LP","WETH","TOKEN_LIST","BNB_BUSD_LP","addCommas","addTransaction","startLoading","stopLoading","saveFotterValues","BigNumber","Loader","TwitterTimelineEmbed","savereffralAddress","toast","UpdateDsk","Home","dispatch","isUserConnected","state","persist","potDetails","setPotDetails","prizeArray","miniPrice","pot","decimals","ref","referralAddress","rewards","seRewards","niobPerBlock","setNiobPerBlock","transferTaxRate","setTransferTaxRate","burnedToken","setBurnedToken","walletShow","setWalletShow","poolLength","setPoolLength","farms","setFarms","inactiveFarms","setInactiveFarms","stakingOnly","setStakingOnly","stakeData","setStakeData","stakeValue","setStakeValue","referrer","setReferrer","totalAmount","setAmount","totalRewards","setRewards","marketCap","setMarketCap","anchorTotalSupply","setAnchorTotalSupply","niobBusdValue","setNiobBusdValue","totalMinted","setTotalMinted","totalLockedRewards","setTotalLockedRewards","anchorBnbWorth","setAnchorBnbWorth","anchorBusdWorth","setAnchorBusdWorth","tokenIds","setTokenIds","allowance","setAllowance","disable","setDisabledBUtton","IButton","setIButton","ticketWindow","openTicketWindow","ticketValue","setvalue","buyButton","setBuyButton","loader","setLoader","currentTicketsArray","setCurrentArray","showHarvest","setShowHarvest","harvest","setHarvestAll","stakeConfirmation","setStakeConfimation","showTransactionModal","setShowTransactionModal","txHash","setTxHash","farmAndStakeLoader","setFarmAndStakeLoader","liquidity","setLiquidity","niobApr","setNiobApr","topFarms","setTopFarms","topFarmApy","setTopFarmApy","init","checkAddress","utils","isAddress","toLowerCase","error","re","getReferrer","success","res","isMetamaskInstalled","getMarketCap","getBurnedToken","getNiobPerBlock","pL","Number","totalLiquidity","options","getTokenBalance","address","allAPRs","i","totalPoolInfo","userInfo","poolInfo","latest","lpToken","undefined","allowanceToken","farm","check","isGreaterThanOrEqualTo","reserve","getReserves","tokenZero","getTokenZero","tokenOne","getTokenOne","anchorPerBlock","pantherPerBlock","price","getPriceInUsd","lastRewardBlock","farmPoolInfo","farmAndPoolInfo","pool","handleTotalLiquidity","lpTokenDetailsTemp","getLpTokenDetails","apr","calculateAPR","allocPoint","symbol0","symbol1","newLiquidity","newApr","push","poolInfoForNiob","handleTotalLiquidityForPool","tokenAmount","getTokenStaked","tokenPairUSDT","getPair","calPrice","liq","totalSupply","getTotalSupply","niobValue","getNiobDollarValue","obj","tvl","pendingPanther","toFixed","nextHarvestUntil","canHarvest","pid","Math","max","apply","err","console","log","anchorPrice","totalAllcationPoint","totalAllocationPoint","dollarValue","reserves","anchorNew","txAmount","response","decimalZero","getDecimals","decimalOne","pairAddress","priceBNBToUSD","getDollarAPR","val","pair","getPairFromPancakeFactory","tokenZeroPairUSDT","tokenOnePairUSDT","tokenZeroPairBNB","tokenOnePairBNB","priceA","priceB","tokenStaked","indicators","tokenAddress","tokenPairBNB","handleIcon","symbol","tokenObj","find","d","icon","Default","history","require","default","height","sort","a","b","keyA","keyB","filter","index","map","topFarm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Carousel, Row, Col, Image } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Web3 from \"web3\";\nimport { Link } from \"react-router-dom\";\nimport { rootName } from \"../../constant\";\nimport Button from \"../../components/Button/Button\";\nimport FarmCard from \"../../components/FarmCard/FarmCard\";\nimport NIOB from \"../../assets/images/token_icons/NIOB.svg\";\nimport BUSD from \"../../assets/images/token_icons/BUSD-Token.svg\";\nimport ANCHOR from \"../../assets/images/token_icons/ANCHOR-Token.svg\";\nimport BTCB from \"../../assets/images/token_icons/BTCB-Token.svg\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { ReferralsServices } from \"../../services/ReferralsServices\";\nimport Statement from \"../../assets/Pdfs/Statement.pdf\";\nimport {\n  MAIN_CONTRACT_LIST,\n  BURN_ADDRESS,\n  ANCHOR_BUSD_LP,\n  WETH,\n  TOKEN_LIST,\n  BNB_BUSD_LP,\n} from \"../../assets/tokens\";\nimport { addCommas } from \"../../constant\";\nimport {\n  addTransaction,\n  startLoading,\n  stopLoading,\n  saveFotterValues,\n} from \"../../redux/actions\";\nimport { BigNumber } from \"bignumber.js\";\nimport Loader from \"react-loader-spinner\";\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\nimport Default from \"../../assets/images/token_icons/default.svg\";\nimport { savereffralAddress } from \"../../redux/actions\";\n\nimport \"./Home.scss\";\nimport { toast } from \"../../components/Toast/Toast\";\n\nimport UpdateDsk from \"../../assets/images/PRDT-Trading-Banner.jpg\";\n// import UpdateMob from \"../../assets/images/update_Mob.jpg\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const [potDetails, setPotDetails] = useState({\n    prizeArray: [0, 0, 0],\n    miniPrice: 0,\n    pot: 0,\n    decimals: 0,\n  });\n  const { ref } = useParams();\n  const referralAddress = useSelector((state) => state.persist.referralAddress);\n  const [rewards, seRewards] = useState(0);\n  const [niobPerBlock, setNiobPerBlock] = useState(0);\n  const [transferTaxRate, setTransferTaxRate] = useState(0);\n  const [burnedToken, setBurnedToken] = useState(0);\n  const [walletShow, setWalletShow] = useState(false);\n  const [poolLength, setPoolLength] = useState(0);\n  const [farms, setFarms] = useState([]);\n  const [inactiveFarms, setInactiveFarms] = useState([]);\n  const [stakingOnly, setStakingOnly] = useState([]);\n  const [stakeData, setStakeData] = useState(null);\n  const [stakeValue, setStakeValue] = useState(0);\n  const [referrer, setReferrer] = useState(\n    \"0x0000000000000000000000000000000000000000\"\n  );\n  const [totalAmount, setAmount] = useState(0);\n  const [totalRewards, setRewards] = useState(0);\n  const [marketCap, setMarketCap] = useState(0.0);\n  const [anchorTotalSupply, setAnchorTotalSupply] = useState(0);\n  const [niobBusdValue, setNiobBusdValue] = useState(0);\n  const [totalMinted, setTotalMinted] = useState(0);\n  const [totalLockedRewards, setTotalLockedRewards] = useState(0);\n  const [anchorBnbWorth, setAnchorBnbWorth] = useState(0);\n  const [anchorBusdWorth, setAnchorBusdWorth] = useState(0);\n  const [tokenIds, setTokenIds] = useState();\n  const [allowance, setAllowance] = useState(false);\n  const [disable, setDisabledBUtton] = useState(false);\n  const [IButton, setIButton] = useState(false);\n  const [ticketWindow, openTicketWindow] = useState(false);\n  const [ticketValue, setvalue] = useState(1);\n  const [buyButton, setBuyButton] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [currentTicketsArray, setCurrentArray] = useState([]);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [harvest, setHarvestAll] = useState([]);\n  const [stakeConfirmation, setStakeConfimation] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [farmAndStakeLoader, setFarmAndStakeLoader] = useState(false);\n  const [liquidity, setLiquidity] = useState(0);\n  const [niobApr, setNiobApr] = useState(0);\n\n  const [topFarms, setTopFarms] = useState([]);\n  const [topFarmApy, setTopFarmApy] = useState(\"\");\n\n  useEffect(async () => {\n    init();\n    if (ref) {\n      const checkAddress = await Web3.utils.isAddress(ref.toLowerCase());\n      if (!checkAddress) {\n        toast.error(\"Address does not exist!\");\n        return;\n      }\n      if (isUserConnected) {\n        let re = await ReferralsServices.getReferrer(isUserConnected);\n        if (re != \"0x0000000000000000000000000000000000000000\") {\n          toast.error(`This user has already referral`);\n          return;\n        }\n        dispatch(savereffralAddress(ref.toLowerCase()));\n        return;\n      }\n      toast.success(`Please connect with wallet!`);\n    }\n  }, [isUserConnected]);\n\n  const init = async () => {\n    const res = await ContractServices.isMetamaskInstalled();\n\n    if (isUserConnected && res) {\n      getMarketCap();\n      getBurnedToken();\n      getNiobPerBlock();\n      try {\n        dispatch(startLoading());\n        let ref = await ReferralsServices.getReferrer(isUserConnected);\n        if (ref === \"0x0000000000000000000000000000000000000000\") {\n          if (\n            referralAddress &&\n            referralAddress !== \"0x0000000000000000000000000000000000000000\"\n          ) {\n            ref = referralAddress;\n          }\n          setReferrer(ref);\n        }\n        dispatch(stopLoading());\n        const pL = Number(await FarmService.poolLength());\n        setPoolLength(pL);\n        // let farmsTemp = [];\n        let totalRewards = 0;\n        let totalLockedRewards = 0;\n        let totalLiquidity = 0;\n        let options = [];\n        const res = await ContractServices.getTokenBalance(\n          TOKEN_LIST[1].address,\n          isUserConnected\n        );\n        setAmount(res);\n        // setFarmAndStakeLoader(true);\n        let allAPRs = [];\n        for (let i = 0; i < pL; i++) {\n          const res = await FarmService.totalPoolInfo(i);\n          const userInfo = await FarmService.userInfo(i, isUserConnected);\n          const { poolInfo, latest } = res;\n\n          if (poolInfo.lpToken != undefined) {\n            const allowance = await ContractServices.allowanceToken(\n              poolInfo.lpToken,\n              MAIN_CONTRACT_LIST.farm.address,\n              isUserConnected\n            );\n            let check = true;\n            if (\n              BigNumber(allowance).isGreaterThanOrEqualTo(\n                BigNumber(2 * 255 - 1)\n              )\n            ) {\n              // setShowApproveButton(false);\n              check = false;\n            }\n            const reserve = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n            const tokenZero = await ExchangeService.getTokenZero(\n              ANCHOR_BUSD_LP\n            );\n            const tokenOne = await ExchangeService.getTokenOne(ANCHOR_BUSD_LP);\n            const anchorPerBlock = Number(await FarmService.pantherPerBlock());\n            const price = await getPriceInUsd(tokenZero, tokenOne, reserve);\n\n            totalLockedRewards +=\n              (latest - poolInfo.lastRewardBlock) *\n              price *\n              (anchorPerBlock / 10 ** 18);\n            setTotalLockedRewards(totalLockedRewards);\n\n            const farmPoolInfo = await FarmService.farmAndPoolInfo(i);\n            const { farm, pool } = farmPoolInfo;\n            if (farm) {\n              let res = await handleTotalLiquidity(farm.lpToken);\n\n              const lpTokenDetailsTemp = await FarmService.getLpTokenDetails(\n                poolInfo.lpToken\n              );\n              let apr = await calculateAPR(farm.allocPoint, res);\n              setTopFarms((topFarms) => [\n                ...topFarms,\n                {\n                  symbol0: lpTokenDetailsTemp.symbol0,\n                  symbol1: lpTokenDetailsTemp.symbol1,\n                  newLiquidity: res,\n                  newApr: apr,\n                },\n              ]);\n              allAPRs.push(apr);\n              totalLiquidity += Number(res);\n            }\n            if (pool) {\n              const poolInfoForNiob = await FarmService.poolInfo(i, \"2\");\n              // console.log(\"poolInfoForNiob\", poolInfoForNiob);\n              let res = await handleTotalLiquidityForPool(pool.lpToken);\n              const tokenAmount = await ExchangeService.getTokenStaked(\n                pool.lpToken\n              );\n              let price = 0;\n              if (\n                pool.lpToken.toLowerCase() ===\n                TOKEN_LIST[2].address.toLowerCase()\n              ) {\n                price = 1;\n              } else {\n                const tokenPairUSDT = await ExchangeService.getPair(\n                  pool.lpToken,\n                  TOKEN_LIST[2].address\n                );\n                price = await calPrice(tokenPairUSDT);\n              }\n              //const niobId = await FarmService.niobId();\n              //console.log('this is apr',poolInfo,  niobId);\n              if (poolInfoForNiob.allocPoint === \"30\") {\n                let apr = await calculateAPR(poolInfoForNiob.allocPoint, res);\n                setNiobApr(apr);\n              }\n              const liq = tokenAmount * price;\n              totalLiquidity += Number(liq);\n              setLiquidity(totalLiquidity);\n            }\n\n            if (i === pL - 1) {\n              const totalSupply = await getTotalSupply();\n              const niobValue = await getNiobDollarValue();\n              const obj = {\n                tvl: totalLiquidity,\n                totalSupply: totalSupply,\n                niobValue: niobValue,\n              };\n              dispatch(saveFotterValues(obj));\n            }\n            const rewards = Number(\n              Number(\n                (await FarmService.pendingPanther(i, isUserConnected)) /\n                10 ** 18\n              ).toFixed(3)\n            );\n            totalRewards += rewards;\n            setRewards(totalRewards);\n\n            const nextHarvestUntil = await FarmService.canHarvest(\n              i,\n              isUserConnected\n            );\n            if (\n              !check &&\n              rewards > 0 &&\n              Number(userInfo.nextHarvestUntil) > 0 &&\n              nextHarvestUntil\n            ) {\n              setShowHarvest(true);\n              options.push({ pid: i, lpToken: poolInfo.lpToken });\n            }\n          }\n          // if (i + 1 == pL) {\n          //     setFarmAndStakeLoader(false);\n          // }\n        }\n        setTopFarmApy(Math.max.apply(Math, allAPRs));\n        setHarvestAll(options);\n      } catch (err) {\n        console.log(err);\n        setFarmAndStakeLoader(false);\n        dispatch(stopLoading());\n      }\n    }\n  };\n  const calculateAPR = async (allocPoint, liquidity) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(\n      await FarmService.totalAllocationPoint()\n    );\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock());\n    //need to calculate usd price.\n    // console.log(\"liquidity: \", liquidity);\n    if (liquidity != 0) {\n      const apr =\n        ((allocPoint / totalAllcationPoint) *\n          ((anchorPerBlock / 10 ** 18) * 28800 * 365 * 100 * anchorPrice)) /\n        liquidity;\n\n      return apr.toFixed(2);\n    }\n\n    return 0;\n  };\n  const getMarketCap = async () => {\n    const dollarValue = await getNiobDollarValue();\n    const totalSupply = await getTotalSupply();\n    setMarketCap(dollarValue * totalSupply);\n  };\n  const getNiobDollarValue = async () => {\n    const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n    setNiobBusdValue(reserves[1] / reserves[0]);\n    return reserves[1] / reserves[0];\n  };\n  const getTotalSupply = async () => {\n    const res = await ExchangeService.getTotalSupply(\n      MAIN_CONTRACT_LIST.anchorNew.address\n    );\n    const anchorTotalSupply = res;\n    const txAmount = (0.05 * anchorTotalSupply) / 100;\n    setTotalMinted(anchorTotalSupply);\n    setAnchorTotalSupply(txAmount);\n    return res;\n  };\n  const getBurnedToken = async () => {\n    try {\n      const response = await ExchangeService.getBurnedToken();\n      setBurnedToken(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getNiobPerBlock = async () => {\n    try {\n      const niobPerBlock = Number(await FarmService.pantherPerBlock());\n      setNiobPerBlock(niobPerBlock / 10 ** 18);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getPriceInUsd = async (tokenZero, tokenOne, reserve) => {\n    let price;\n\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      price = (reserve[0] * decimalOne) / (reserve[1] * decimalZero);\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      price = (reserve[1] * decimalZero) / (reserve[0] * decimalOne);\n    }\n\n    return price;\n  };\n  const calPrice = async (pairAddress) => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    }\n\n    // console.log(\"pairAddresspairAddress\", pairAddress);\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return (price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero));\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return (price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne));\n    }\n\n    let priceBNBToUSD = await calPrice(BNB_BUSD_LP); //replace with BNB-USD pair\n\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero);\n      return price * priceBNBToUSD;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne);\n      return price * priceBNBToUSD;\n    }\n  };\n\n  const getDollarAPR = async (address) => {\n    try {\n\n      if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n        const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        //setAnchorDollarValue(val.toFixed(3));\n        return (val.toFixed(3));\n      } else if (address.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n        return 1;\n      }\n      else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n\n        const pair = await ExchangeService.getPairFromPancakeFactory(address, TOKEN_LIST[2].address);\n        const reserves = await ExchangeService.getReserves(pair);\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        // setAnchorDollarValue(val.toFixed(3));\n        return (val.toFixed(3));\n      }\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleTotalLiquidity = async (pairAddress) => {\n    if (pairAddress != \"0x0000000000000000000000000000000000000000\") {\n      // console.log(pairAddress);\n      const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n      const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n      const reserve = await ExchangeService.getReserves(pairAddress);\n      const tokenZeroPairUSDT = await ExchangeService.getPair(\n        tokenZero,\n        TOKEN_LIST[2].address\n      );\n      const tokenOnePairUSDT = await ExchangeService.getPair(\n        tokenOne,\n        TOKEN_LIST[2].address\n      );\n\n      const tokenZeroPairBNB = await ExchangeService.getPair(tokenZero, WETH);\n      const tokenOnePairBNB = await ExchangeService.getPair(tokenOne, WETH);\n\n      const decimalZero = await ContractServices.getDecimals(tokenZero);\n      const decimalOne = await ContractServices.getDecimals(tokenOne);\n      // const decimalPair = await ContractServices.getDecimals(pairAddress);\n\n\n      let priceA = await getDollarAPR(tokenZero);\n      let priceB = await getDollarAPR(tokenOne);\n\n\n\n      // let priceA = 0;\n      // let priceB = 0;\n\n      // if (tokenZero.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceA = 1;\n      // } else if (tokenZero.toLowerCase() == WETH.toLowerCase()) {\n      //   priceA = await calPrice(BNB_BUSD_LP);\n      // }\n\n      // if (tokenOne.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceB = 1;\n      // } else if (tokenOne.toLowerCase() == WETH.toLowerCase()) {\n      //   priceB = await calPrice(BNB_BUSD_LP);\n      // }\n\n      // if (priceA == 0) {\n      //   if (tokenZeroPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceA = await calPrice(tokenZeroPairUSDT);\n      //   } else if (\n      //     tokenZeroPairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceA = await calPrice(tokenZeroPairBNB);\n      //   } else {\n      //     priceA = 0;\n      //   }\n      // }\n\n      // if (priceB == 0) {\n      //   if (tokenOnePairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceB = await calPrice(tokenOnePairUSDT);\n      //   } else if (\n      //     tokenOnePairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceB = await calPrice(tokenOnePairBNB);\n      //   } else {\n      //     priceB = 0;\n      //   }\n      // }\n\n      const totalSupply = await ExchangeService.getTotalSupply(pairAddress);\n      const tokenStaked = await ExchangeService.getTokenStaked(pairAddress);\n\n      const liquidity =\n        (((reserve[0] / 10 ** decimalZero) * priceA +\n          (reserve[1] / 10 ** decimalOne) * priceB) /\n          totalSupply) *\n        tokenStaked;\n\n      return liquidity;\n    }\n    return 0;\n  };\n  const options = {\n    indicators: false,\n  };\n  const handleTotalLiquidityForPool = async (tokenAddress) => {\n    if (tokenAddress != \"0x0000000000000000000000000000000000000000\") {\n      const reserve = await ExchangeService.getTokenStaked(tokenAddress);\n      const tokenPairUSDT = await ExchangeService.getPair(\n        tokenAddress,\n        TOKEN_LIST[2].address\n      );\n      const tokenPairBNB = await ExchangeService.getPair(tokenAddress, WETH);\n\n      let priceA = 0;\n\n      if (tokenAddress.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n        priceA = 1;\n      } else if (tokenAddress.toLowerCase() == WETH.toLowerCase()) {\n        priceA = await calPrice(BNB_BUSD_LP);\n      }\n\n      if (priceA == 0) {\n        if (tokenPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await calPrice(tokenPairUSDT);\n        } else if (\n          tokenPairBNB != \"0x0000000000000000000000000000000000000000\"\n        ) {\n          priceA = await calPrice(tokenPairBNB);\n          priceA = 0;\n        }\n      }\n\n      const liquidity = reserve * priceA;\n\n      return Number(liquidity).toFixed(2);\n    }\n    return 0;\n  };\n  const handleIcon = (symbol) => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(\n        (d) => d.symbol.toLowerCase() === symbol.toLowerCase()\n      );\n      return tokenObj != undefined ? tokenObj.icon : Default;\n    }\n  };\n\n  const history = useHistory();\n  return (\n    <div className=\"container_wrap\">\n      <div className=\"container container_inside homePage\">\n        <div className=\"updateSection\">\n          <img src={UpdateDsk} className=\"forDesktop\" alt=\"banner\" />\n          {/* <img src={UpdateMob} className=\"forMob\" alt=\"banner\" /> */}\n          {/* <Button  title=\"Read Statement of the team\" className=\"readState_btn\" /> */}\n          <a rel=\"stylesheet\" href={\"https://prdt.niob.app\"} target=\"_blank\" type=\"button\" className=\"readState_btn\" >Go to Prediction Trading</a>\n          {/* <a rel=\"stylesheet\" href={Statement} target=\"_blank\" type=\"button\" className=\"readState_btn\" >Read Statement of the team</a> */}\n        </div>\n\n        <Carousel fade {...options}>\n          <Carousel.Item>\n            <Carousel.Caption>\n              <h3>Welcome to NIOB Swap</h3>\n              <p>\n                Decentralized Exchange and Automatic Liquidity Acquisition Yield\n                Farm running currently on Binance Smart Chain.\n              </p>\n              <p>\n                If you are new to NIOB please also visit our Tutorial Section in\n                our official docs. We’ll teach you step by step you to use NIOB\n                Swap and it’s assets.\n              </p>\n              <a\n                href=\"https://docs.niob.finance/tutorial\"\n                target={\"_blank\"}\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n              >\n                <span>NIOB Tutorial</span>\n                <span>\n                  <Image\n                    src={require(\"../../assets/images/Link-Icon.svg\").default}\n                    alt=\"icon\"\n                  />\n                </span>\n              </a>\n            </Carousel.Caption>\n            <Image\n              className=\"bgImage\"\n              alt=\"image\"\n              src={\n                require(\"../../assets/images/dashboard-header-bg.jpg\").default\n              }\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <Carousel.Caption>\n              <h3>The Docs</h3>\n              <p>\n                All important and technical information about the project\n                \"Niob\", tokenomics, project roadmap and term explanations can be\n                found in our docs. If you have any questions, please ask them in\n                the official Niob Telegram Channel.\n              </p>\n              <a\n                href=\"https://docs.niob.finance\"\n                target={\"_blank\"}\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n              >\n                <span>NIOB Docs</span>{\" \"}\n                <span>\n                  <Image\n                    src={require(\"../../assets/images/Link-Icon.svg\").default}\n                    alt=\"icon\"\n                  />\n                </span>\n              </a>\n            </Carousel.Caption>\n            <Image\n              className=\"bgImage\"\n              alt=\"image\"\n              src={\n                require(\"../../assets/images/dashboard-header-bg.jpg\").default\n              }\n            />\n          </Carousel.Item>\n        </Carousel>\n        <Row className=\"startEngine\">\n          <Col xl={4} lg={12}>\n            <div className=\"comnBlk\">\n              <Image\n                className=\"headerImg\"\n                src={require(\"../../assets/images/swap-icon.svg\").default}\n              />\n              <h3>Start your engine </h3>\n              <p>Start your journey or improve your wallet portfolio:</p>\n              <h3>NIOB Price: ${niobBusdValue.toFixed(4)}</h3>\n              <Link\n                to={\"/trade/exchange\"}\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n              >\n                <span>Buy NIOB Token </span> <span className=\"arrowIcon\" />\n              </Link>\n            </div>\n          </Col>\n          <Col xl={4} lg={12}>\n            <div className=\"comnBlk\">\n              <Image\n                className=\"headerImg\"\n                src={require(\"../../assets/images/farm-icon.svg\").default}\n              />\n              <h3>Farm Planets</h3>\n              <p>Stake LP tokens in Farms and earn up to:</p>\n              <h3>{topFarmApy !== \"\" ? topFarmApy : \"loading..\"} % APR</h3>\n              <Link\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n                to=\"farmplanets/active\"\n              >\n                <span>Start farming</span> <span className=\"arrowIcon\" />\n              </Link>\n            </div>\n          </Col>\n          <Col xl={4} lg={12}>\n            <div className=\"comnBlk\">\n              <Image\n                className=\"headerImg\"\n                src={require(\"../../assets/images/reflink-icon.svg\").default}\n              />\n              <h3>Decentralized Ref Link </h3>\n              <p>Enjoy Referral Rewards from:</p>\n              <h3>Farms, Pools Swaps</h3>\n              <Link\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n                to=\"/referral\"\n              >\n                <span>Start inviting friends</span>{\" \"}\n                <span className=\"arrowIcon\" />\n              </Link>\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"announcements\">\n          <Col xl={6} lg={12}>\n            <div className=\"comnBlk  carousel_caption_announce\">\n              <h3 className=\"fw-strong pb-2\">Announcements</h3>\n              <TwitterTimelineEmbed\n                sourceType=\"profile\"\n                screenName=\"niobfinance\"\n                options={{ height: 418 }}\n                theme=\"dark\"\n                noScrollbar={true}\n              />\n            </div>\n          </Col>\n          <Col xl={6} lg={12}>\n            <div className=\"comnBlk mb-4\">\n              <h3>NIOB Stats</h3>\n              <ul className=\"pl-0 niobStats\">\n                <li>\n                  <label>Market Cap</label>\n                  <span>${addCommas(marketCap.toFixed(2))}</span>\n                </li>\n                <li>\n                  <label>Total Minted</label>\n                  <span>{addCommas(Number(totalMinted).toFixed(2))}</span>\n                </li>\n                <li>\n                  <label>Total Burned</label>\n                  <span>{addCommas(burnedToken)}</span>\n                </li>\n                <li>\n                  <label>Total Locked Rewards</label>\n                  <span>\n                    <strong className=\"value\">\n                      {farmAndStakeLoader ? (\n                        <Loader\n                          type=\"Circles\"\n                          color=\"#FFFFFF\"\n                          height={15}\n                          width={15}\n                          visible={true}\n                        // timeout={5000} //3 secs\n                        />\n                      ) : (\n                        addCommas(\n                          totalLockedRewards ? totalLockedRewards.toFixed(2) : 0\n                        )\n                      )}\n                    </strong>\n                  </span>\n                </li>\n                <li>\n                  <label> Circulating Supply </label>\n                  <span>\n                    {addCommas((totalMinted - burnedToken).toFixed(2))}\n                  </span>\n                </li>\n                <li>\n                  <label>Max Tx Amount </label>\n                  <span>{addCommas(anchorTotalSupply.toFixed(2))}</span>\n                </li>\n                <li>\n                  <label>New Niob/Block</label>\n                  <span>{niobPerBlock}</span>\n                  {/* <span>{addCommas(anchorPerBlock)}</span> */}\n                </li>\n                <li>\n                  <label>Transfer Tax</label>\n                  <span>{\"3%\"}</span>\n                </li>\n              </ul>\n            </div>\n            <div className=\"comnBlk\">\n              <h3>Total Value Locked (TVL)</h3>\n              <div className=\"totl_value\">\n                <h3>\n                  {\" \"}\n                  {farmAndStakeLoader ? (\n                    <Loader\n                      type=\"Circles\"\n                      color=\"#FFFFFF\"\n                      height={15}\n                      width={15}\n                      visible={true}\n                    // timeout={5000} //3 secs\n                    />\n                  ) : (\n                    addCommas(liquidity ? liquidity.toFixed(2) : 0)\n                  )}\n                </h3>\n                <p className=\"mb-0\">Across all Farms and Pools</p>\n              </div>\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"all_farms\">\n          <Col md={12}>\n            <div className=\"farm_title\">\n              <h3>Top Farm Planets</h3>\n              <Button\n                title=\"All Farms\"\n                onClick={() => {\n                  history.push(`${rootName}/farmplanets/active`);\n                }}\n              />\n            </div>\n          </Col>\n\n          {topFarms\n            .sort(function (a, b) {\n              let keyA = a.newApr,\n                keyB = b.newApr;\n              // Compare the 2 farms\n              if (keyA < keyB) return 1;\n              if (keyA > keyB) return -1;\n              return 0;\n            })\n            .filter((farm, index) => index < 3)\n            .map((topFarm, index) => (\n              <Col xl={4} lg={12}>\n                <FarmCard\n                  title={topFarm.symbol0}\n                  title1={topFarm.symbol1}\n                  icon1={\n                    handleIcon(topFarm?.symbol0)\n                      ? handleIcon(topFarm?.symbol0)\n                      : \"\"\n                  }\n                  icon2={\n                    handleIcon(topFarm?.symbol1)\n                      ? handleIcon(topFarm?.symbol1)\n                      : \"\"\n                  }\n                  liquidity={`$${topFarm.newLiquidity} `}\n                  apy={`${topFarm.newApr != \"NaN\" ? topFarm.newApr : \"0\"} %`}\n                />\n              </Col>\n            ))}\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}