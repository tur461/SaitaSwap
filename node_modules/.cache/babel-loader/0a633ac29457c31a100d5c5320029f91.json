{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/pages/FarmPlanets/FarmPlanets.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"@restart/ui/esm/Button\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Col, Row, Form, InputGroup, FormControl } from \"react-bootstrap\";\nimport { addTransaction, searchTokenByNameOrAddress, startLoading, stopLoading } from \"../../redux/actions\";\nimport { ReferralsServices } from \"../../services/ReferralsServices\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport BigNumber from \"bignumber.js\";\nimport GetLPToken from \"../../components/GetLPToken/GetLPToken\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport { rootName } from \"../../constant\";\nimport Searchicon from \"../../assets/images/search.png\";\nimport FarmIcon from \"../../assets/images/Farm-Header-Logo.svg\";\nimport \"./FarmPlanets.scss\";\nimport PlanetCard from \"../../components/PlanetCard/PlanetCard\";\nimport NIOB from \"../../assets/images/token_icons/NIOB.svg\";\nimport BUSD from \"../../assets/images/token_icons/BUSD-Token.svg\";\nimport ANCHOR from \"../../assets/images/token_icons/ANCHOR-Token.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport WithDrawLPToken from \"../../components/GetLPToken/WithDrawLPToken\";\nimport TransactionalModal from \"../../components/TransactionalModal/TransactionalModal\";\nimport TransactionModal from \"../../components/TransactionModal/TransactionModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FarmPlanets = props => {\n  _s();\n\n  const {\n    match: {\n      params\n    },\n    history\n  } = props;\n  const {\n    tab\n  } = params;\n\n  const handleTab = data => {\n    history.push(`${rootName}/farmplanets/${data}`);\n  };\n\n  const handleClose = () => {\n    setStakeValue(null);\n    setShowStake(false);\n  };\n\n  const handleWithdrawClose = () => {\n    setStakeValue(null);\n    setShowStakeWithdraw(false);\n  };\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const referralAddress = useSelector(state => state.persist.referralAddress);\n  const [checked, setChecked] = useState(false);\n  const [active, setActive] = useState(true);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [showStake, setShowStake] = useState(false);\n  const [showStakeWithdraw, setShowStakeWithdraw] = useState(false);\n  const [showAPY, setShowAPY] = useState(false);\n  const [roiModalData, setRoiModalData] = useState(null);\n  const [poolLength, setPoolLength] = useState(0);\n  const [farms, setFarms] = useState([]);\n  const [inactiveFarms, setInactiveFarms] = useState([]);\n  const [stakingOnly, setStakingOnly] = useState([]);\n  const [stakeData, setStakeData] = useState(null);\n  const [stakeValue, setStakeValue] = useState(0);\n  const [referrer, setReferrer] = useState(\"0x0000000000000000000000000000000000000000\");\n  const [stakeConfirmation, setStakeConfimation] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [lpDetails, setLpTokenDetails] = useState(null);\n  const [selectedPairId, setSelectedPairId] = useState(); //staking only\n\n  const handleChange = () => setChecked(!checked);\n\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false);\n    setFarms([]);\n    setInactiveFarms([]);\n    setStakingOnly([]);\n    init();\n    window.location.reload();\n  };\n\n  const cloaseRoiModal = () => {\n    setShowAPY(false);\n  };\n\n  const handleRoiModal = (data, lpDetails) => {\n    setRoiModalData(data);\n    setLpTokenDetails(lpDetails);\n    setShowAPY(true);\n  };\n\n  const handleIndex = index => {\n    if (currentIndex === index) {\n      setCurrentIndex(-1);\n    } else {\n      setCurrentIndex(index);\n    }\n  };\n\n  useEffect(() => {\n    init();\n    return () => {\n      setFarms([]);\n      setInactiveFarms([]);\n    };\n  }, [isUserConnected]);\n\n  const init = async () => {\n    try {\n      dispatch(startLoading());\n      let ref = await ReferralsServices.getReferrer(isUserConnected);\n\n      if (ref === \"0x0000000000000000000000000000000000000000\") {\n        if (referralAddress && referralAddress !== \"0x0000000000000000000000000000000000000000\") {\n          ref = referralAddress;\n        }\n\n        setReferrer(ref);\n      }\n\n      const pL = Number(await FarmService.poolLength());\n      setPoolLength(pL);\n      dispatch(stopLoading());\n\n      for (let i = 0; i < pL; i++) {\n        const poolInfo = await FarmService.poolInfo(i, \"1\");\n        const userInfo = await FarmService.userInfo(i, isUserConnected); // console.log(userInfo, '------i------', i);\n\n        if (poolInfo) {\n          if (Number(poolInfo.allocPoint) === 0) {\n            setInactiveFarms(inactiveFarms => [...inactiveFarms, {\n              poolInfo,\n              userInfo,\n              pid: i\n            }]);\n          } else {\n            if (Number(userInfo.amount) > 0) {\n              // console.log('index', i);\n              setStakingOnly(stakingOnly => [...stakingOnly, {\n                poolInfo,\n                userInfo,\n                pid: i\n              }]);\n            }\n\n            setFarms(farms => [...farms, {\n              poolInfo,\n              userInfo,\n              pid: i\n            }]);\n          }\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const closeStakeModal = () => {\n    setShowStakeWithdraw(false);\n    setShowStake(false);\n    setStakeData(null);\n    setStakeValue(0);\n  };\n\n  const stakeHandle = (data, type) => {\n    // setSelectedPairId is used for getting the id of the farm that user clicked (and staked) to\n    // change the values of only single farm --will be implemented in future\n    setSelectedPairId(data.pid);\n\n    if (type === \"withdraw\") {\n      setStakeData(data);\n      setShowStakeWithdraw(true);\n    }\n\n    if (type === \"deposit\") {\n      setStakeData(data);\n      setShowStake(true);\n    }\n  };\n\n  const handleStakeValue = e => {\n    const value = e.target.value;\n    setStakeValue(value);\n  };\n\n  const setMaxValue = () => setStakeValue(stakeData.balance);\n\n  const harvest = async (pid, lpTokenName) => {\n    const acc = await ContractServices.getDefaultAccount();\n\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n\n    if (stakeConfirmation) {\n      return toast.info(\"Transaction is processing!\");\n    }\n\n    setStakeConfimation(true);\n    const data = {\n      pid: pid.toString(),\n      amount: 0,\n      referrer: referrer,\n      from: isUserConnected\n    };\n\n    try {\n      dispatch(startLoading());\n      const result = await FarmService.deposit(data);\n      dispatch(stopLoading());\n      setStakeConfimation(false);\n\n      if (result) {\n        setTxHash(result);\n        setShowTransactionModal(true);\n        const data = {\n          message: `Harvest ${lpTokenName}`,\n          tx: result\n        };\n        dispatch(addTransaction(data));\n      }\n    } catch (err) {\n      console.log(err, \"lp harvest\");\n      dispatch(stopLoading());\n      setStakeConfimation(false);\n      const message = await ContractServices.web3ErrorHandle(err);\n      toast.error(message);\n    }\n  }; // // this function will be used to change the values of single farm that user clicked and staked\n  // const refreshChangedItem = async () => {\n  //   try {\n  //     dispatch(startLoading());\n  //     let ref = await ReferralsServices.getReferrer(isUserConnected);\n  //     if (ref === '0x0000000000000000000000000000000000000000') {\n  //       if (referralAddress && referralAddress !== '0x0000000000000000000000000000000000000000') {\n  //         ref = referralAddress;\n  //       }\n  //       setReferrer(ref);\n  //     }\n  //     const pL = Number(await FarmService.poolLength());\n  //     setPoolLength(pL);\n  //     // let farmsTemp = [];\n  //     dispatch(stopLoading());\n  //     for (let i = 0; i < pL; i++) {\n  //       const poolInfo = await FarmService.poolInfo(i, '1');\n  //       const userInfo = await FarmService.userInfo(i, isUserConnected);\n  //       // console.log(userInfo, '------i------', i);\n  //       if (poolInfo) {\n  //         if (Number(poolInfo.allocPoint) === 0) {\n  //           setInactiveFarms(inactiveFarms => [...inactiveFarms, { poolInfo, userInfo, pid: i }]);\n  //         } else {\n  //           if (Number(userInfo.amount) > 0) {\n  //             console.log('index', i);\n  //           }\n  //           // setStakingOnly(stakingOnly => stakingOnly.pid === selectedPairId ?  { poolInfo, userInfo, pid: i }: stakingOnly);\n  //           // setFarms(farms => [...farms, { poolInfo, userInfo, pid: i }]);\n  //           let newArr = [...farms]; // copying the old farms\n  //           newArr[selectedPairId] = { poolInfo, userInfo, pid: selectedPairId };\n  //           setFarms(newArr);\n  //         }\n  //       }\n  //     }\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n\n\n  const depositWithdraw = async type => {\n    const acc = await ContractServices.getDefaultAccount();\n\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n\n    const value = Number(stakeValue);\n\n    if (isNaN(value)) {\n      return toast.error(\"Enter vaild amount!\");\n    }\n\n    if (value <= 0) {\n      return toast.error(\"Enter amount greater than zero!\");\n    }\n\n    if (value > stakeData.balance) {\n      return toast.error(\"Value is greater than max value!\");\n    }\n\n    if (!stakeData) {\n      return toast.info(\"Reload page try again!\");\n    }\n\n    if (stakeConfirmation) {\n      return toast.info(\"Transaction is processing!\");\n    }\n\n    setStakeConfimation(true);\n\n    if (type === \"deposit\") {\n      const amount = BigNumber(value * 10 ** stakeData.lpTokenDetails.decimals).toFixed();\n      const data = {\n        pid: stakeData.pid.toString(),\n        amount,\n        referrer: referrer,\n        from: isUserConnected\n      }; // console.log('sending this deposit data' ,data);\n\n      try {\n        closeStakeModal();\n        dispatch(startLoading());\n        const result = await FarmService.deposit(data);\n        setStakeConfimation(false);\n        dispatch(stopLoading());\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          const data = {\n            message: `Deposit ${stakeData.lpTokenDetails.lpTokenName}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n      } catch (err) {\n        console.log(err, \"lp deposit\");\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n      }\n    }\n\n    if (type === \"withdraw\") {\n      const amount = BigNumber(value * 10 ** stakeData.lpTokenDetails.decimals).toFixed();\n      const data = {\n        pid: stakeData.pid.toString(),\n        amount,\n        from: isUserConnected\n      }; // console.log('sending this withdraw data' , data);\n\n      try {\n        closeStakeModal();\n        dispatch(startLoading());\n        const result = await FarmService.withdraw(data);\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          const data = {\n            message: `Withdraw ${stakeData.lpTokenDetails.lpTokenName}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n      } catch (err) {\n        console.log(err, \"lp withdraw\");\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_wrap farmpln frm_plnet_disply\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upper_text\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: 6,\n            className: \"pl-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"farm_title\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"farm_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: FarmIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"desc\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"title_hd\",\n                  children: \"Farm Planets\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"There is so much to explore! SaitaSwap offers multiple farming oppurtunities to you. Get amazing rewards by staking your LP tokens in return for additional SAITAMA Tokens.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"farm_srchbar\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contain_area\",\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            className: \"srchbar_area\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"serch_field\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  id: \"search\",\n                  placeholder: \"Niob\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"search_btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Searchicon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"staked_only\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                id: \"stakecheck\",\n                label: \"Staked only\",\n                checked: checked,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn harvest_btn\",\n                children: \"Harvest all\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"frm_plnet_list\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"farm_tabs\",\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                activeKey: tab,\n                id: \"frmplanet_tab\",\n                variant: \"pills\",\n                onSelect: handleTab,\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"active\",\n                  title: \"Active\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"planet_list active\",\n                    children: /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        xl: 12,\n                        children: [checked && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"planet_list_view\",\n                          children: stakingOnly.map((farm, index) => /*#__PURE__*/_jsxDEV(PlanetCard, {\n                            index: index,\n                            harvestOnClick: harvest,\n                            currentIndex: currentIndex,\n                            handleChange: () => handleIndex(index),\n                            stakeHandle: stakeHandle,\n                            handleRoiModal: handleRoiModal,\n                            status: true,\n                            farm: farm,\n                            icon1: NIOB,\n                            icon2: BUSD,\n                            title: `NIOB`,\n                            title1: `BUSD`\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 430,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 428,\n                          columnNumber: 27\n                        }, this), !checked && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"planet_list_view\",\n                          children: farms.map((farm, index) => /*#__PURE__*/_jsxDEV(PlanetCard, {\n                            index: index,\n                            harvestOnClick: harvest,\n                            currentIndex: currentIndex,\n                            handleChange: () => handleIndex(index),\n                            stakeHandle: stakeHandle,\n                            handleRoiModal: handleRoiModal,\n                            status: true,\n                            farm: farm,\n                            icon1: NIOB,\n                            icon2: BUSD,\n                            title: `NIOB`,\n                            title1: `BUSD`\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 451,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 449,\n                          columnNumber: 40\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 426,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"inactive\",\n                  title: \"Inactive\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"planet_list active\",\n                    children: /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        xl: 12,\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"planet_list_view\",\n                          children: inactiveFarms.map((farm, index) => /*#__PURE__*/_jsxDEV(PlanetCard, {\n                            index: index,\n                            harvestOnClick: harvest,\n                            currentIndex: currentIndex,\n                            handleChange: () => handleIndex(index),\n                            stakeHandle: stakeHandle,\n                            handleRoiModal: handleRoiModal,\n                            status: true,\n                            farm: farm,\n                            icon1: NIOB,\n                            icon2: BUSD,\n                            title: `NIOB`,\n                            title1: `BUSD`\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 480,\n                            columnNumber: 31\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 478,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 477,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetLPToken, {\n      stakeValue: stakeValue,\n      stakeData: stakeData,\n      stakeConfirmation: stakeConfirmation,\n      handleStakeValue: handleStakeValue,\n      depositWithdraw: depositWithdraw,\n      setMaxValue: setMaxValue,\n      show: showStake,\n      closeStakeModal: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WithDrawLPToken, {\n      stakeValue: stakeValue,\n      stakeData: stakeData,\n      stakeConfirmation: stakeConfirmation,\n      handleStakeValue: handleStakeValue,\n      depositWithdraw: depositWithdraw,\n      setMaxValue: setMaxValue,\n      show: showStakeWithdraw,\n      closeStakeModal: handleWithdrawClose,\n      isNiobWithdrawabe: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionalModal, {\n      show: showTransactionModal,\n      handleClose: closeTransactionModal,\n      txHash: txHash\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmPlanets, \"c5QcK/AlV32vK3SRBLO7n/wDWOI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = FarmPlanets;\nexport default FarmPlanets;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmPlanets\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/pages/FarmPlanets/FarmPlanets.js"],"names":["Button","React","useEffect","useState","Container","Col","Row","Form","InputGroup","FormControl","addTransaction","searchTokenByNameOrAddress","startLoading","stopLoading","ReferralsServices","FarmService","toast","ContractServices","BigNumber","GetLPToken","Tabs","Tab","rootName","Searchicon","PlanetCard","useDispatch","useSelector","WithDrawLPToken","TransactionalModal","TransactionModal","FarmPlanets","props","match","params","history","tab","handleTab","data","push","handleClose","setStakeValue","setShowStake","handleWithdrawClose","setShowStakeWithdraw","dispatch","isUserConnected","state","persist","referralAddress","checked","setChecked","active","setActive","currentIndex","setCurrentIndex","showStake","showStakeWithdraw","showAPY","setShowAPY","roiModalData","setRoiModalData","poolLength","setPoolLength","farms","setFarms","inactiveFarms","setInactiveFarms","stakingOnly","setStakingOnly","stakeData","setStakeData","stakeValue","referrer","setReferrer","stakeConfirmation","setStakeConfimation","showTransactionModal","setShowTransactionModal","txHash","setTxHash","lpDetails","setLpTokenDetails","selectedPairId","setSelectedPairId","handleChange","closeTransactionModal","init","window","location","reload","cloaseRoiModal","handleRoiModal","handleIndex","index","ref","getReferrer","pL","Number","i","poolInfo","userInfo","allocPoint","pid","amount","err","console","log","closeStakeModal","stakeHandle","type","handleStakeValue","e","value","target","setMaxValue","balance","harvest","lpTokenName","acc","getDefaultAccount","toLowerCase","error","info","toString","from","result","deposit","message","tx","web3ErrorHandle","depositWithdraw","isNaN","lpTokenDetails","decimals","toFixed","withdraw","FarmIcon","map","farm","NIOB","BUSD"],"mappings":"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","sourcesContent":["import Button from \"@restart/ui/esm/Button\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Col,\n  Row,\n  Form,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport {\n  addTransaction,\n  searchTokenByNameOrAddress,\n  startLoading,\n  stopLoading,\n} from \"../../redux/actions\";\nimport { ReferralsServices } from \"../../services/ReferralsServices\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport BigNumber from \"bignumber.js\";\nimport GetLPToken from \"../../components/GetLPToken/GetLPToken\";\n\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport { rootName } from \"../../constant\";\nimport Searchicon from \"../../assets/images/search.png\";\nimport FarmIcon from \"../../assets/images/Farm-Header-Logo.svg\";\nimport \"./FarmPlanets.scss\";\nimport PlanetCard from \"../../components/PlanetCard/PlanetCard\";\nimport NIOB from \"../../assets/images/token_icons/NIOB.svg\";\nimport BUSD from \"../../assets/images/token_icons/BUSD-Token.svg\";\nimport ANCHOR from \"../../assets/images/token_icons/ANCHOR-Token.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport WithDrawLPToken from \"../../components/GetLPToken/WithDrawLPToken\";\nimport TransactionalModal from \"../../components/TransactionalModal/TransactionalModal\";\nimport TransactionModal from \"../../components/TransactionModal/TransactionModal\";\n\nconst FarmPlanets = (props) => {\n  const {\n    match: { params },\n    history,\n  } = props;\n  const { tab } = params;\n  const handleTab = (data) => {\n    history.push(`${rootName}/farmplanets/${data}`);\n  };\n\n  const handleClose = () => {\n    setStakeValue(null);\n    setShowStake(false);\n  };\n  const handleWithdrawClose = () => {\n    setStakeValue(null);\n    setShowStakeWithdraw(false);\n  };\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const referralAddress = useSelector((state) => state.persist.referralAddress);\n\n  const [checked, setChecked] = useState(false);\n  const [active, setActive] = useState(true);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [showStake, setShowStake] = useState(false);\n  const [showStakeWithdraw, setShowStakeWithdraw] = useState(false);\n  const [showAPY, setShowAPY] = useState(false);\n  const [roiModalData, setRoiModalData] = useState(null);\n\n  const [poolLength, setPoolLength] = useState(0);\n  const [farms, setFarms] = useState([]);\n  const [inactiveFarms, setInactiveFarms] = useState([]);\n  const [stakingOnly, setStakingOnly] = useState([]);\n  const [stakeData, setStakeData] = useState(null);\n  const [stakeValue, setStakeValue] = useState(0);\n  const [referrer, setReferrer] = useState(\n    \"0x0000000000000000000000000000000000000000\"\n  );\n\n  const [stakeConfirmation, setStakeConfimation] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [lpDetails, setLpTokenDetails] = useState(null);\n  const [selectedPairId, setSelectedPairId] = useState();\n\n  //staking only\n  const handleChange = () => setChecked(!checked);\n\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false);\n    setFarms([]);\n    setInactiveFarms([]);\n    setStakingOnly([]);\n    init();\n    window.location.reload();\n  };\n\n  const cloaseRoiModal = () => {\n    setShowAPY(false);\n  };\n  const handleRoiModal = (data, lpDetails) => {\n    setRoiModalData(data);\n    setLpTokenDetails(lpDetails);\n    setShowAPY(true);\n  };\n\n  const handleIndex = (index) => {\n    if (currentIndex === index) {\n      setCurrentIndex(-1);\n    } else {\n      setCurrentIndex(index);\n    }\n  };\n\n  useEffect(() => {\n    init();\n    return () => {\n      setFarms([]);\n      setInactiveFarms([]);\n    };\n  }, [isUserConnected]);\n\n  const init = async () => {\n    try {\n      dispatch(startLoading());\n      let ref = await ReferralsServices.getReferrer(isUserConnected);\n      if (ref === \"0x0000000000000000000000000000000000000000\") {\n        if (\n          referralAddress &&\n          referralAddress !== \"0x0000000000000000000000000000000000000000\"\n        ) {\n          ref = referralAddress;\n        }\n        setReferrer(ref);\n      }\n      const pL = Number(await FarmService.poolLength());\n      setPoolLength(pL);\n      dispatch(stopLoading());\n      for (let i = 0; i < pL; i++) {\n        const poolInfo = await FarmService.poolInfo(i, \"1\");\n        const userInfo = await FarmService.userInfo(i, isUserConnected);\n        // console.log(userInfo, '------i------', i);\n        if (poolInfo) {\n          if (Number(poolInfo.allocPoint) === 0) {\n            setInactiveFarms((inactiveFarms) => [\n              ...inactiveFarms,\n              { poolInfo, userInfo, pid: i },\n            ]);\n          } else {\n            if (Number(userInfo.amount) > 0) {\n              // console.log('index', i);\n              setStakingOnly((stakingOnly) => [...stakingOnly, { poolInfo, userInfo, pid: i }]);\n            }\n            setFarms((farms) => [...farms, { poolInfo, userInfo, pid: i }]);\n          }\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const closeStakeModal = () => {\n    setShowStakeWithdraw(false);\n    setShowStake(false);\n    setStakeData(null);\n    setStakeValue(0);\n  };\n\n  const stakeHandle = (data, type) => {\n    // setSelectedPairId is used for getting the id of the farm that user clicked (and staked) to\n    // change the values of only single farm --will be implemented in future\n    setSelectedPairId(data.pid);\n    if (type === \"withdraw\") {\n      setStakeData(data);\n      setShowStakeWithdraw(true);\n    }\n    if (type === \"deposit\") {\n      setStakeData(data);\n      setShowStake(true);\n    }\n  };\n\n  const handleStakeValue = (e) => {\n    const value = e.target.value;\n    setStakeValue(value);\n  };\n  const setMaxValue = () => setStakeValue(stakeData.balance);\n\n  const harvest = async (pid, lpTokenName) => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n\n    if (stakeConfirmation) {\n      return toast.info(\"Transaction is processing!\");\n    }\n    setStakeConfimation(true);\n    const data = {\n      pid: pid.toString(),\n      amount: 0,\n      referrer: referrer,\n      from: isUserConnected,\n    };\n    try {\n      dispatch(startLoading());\n      const result = await FarmService.deposit(data);\n      dispatch(stopLoading());\n      setStakeConfimation(false);\n\n      if (result) {\n        setTxHash(result);\n        setShowTransactionModal(true);\n\n        const data = {\n          message: `Harvest ${lpTokenName}`,\n          tx: result,\n        };\n        dispatch(addTransaction(data));\n      }\n    } catch (err) {\n      console.log(err, \"lp harvest\");\n      dispatch(stopLoading());\n      setStakeConfimation(false);\n\n      const message = await ContractServices.web3ErrorHandle(err);\n      toast.error(message);\n    }\n  };\n\n  // // this function will be used to change the values of single farm that user clicked and staked\n  // const refreshChangedItem = async () => {\n  //   try {\n  //     dispatch(startLoading());\n  //     let ref = await ReferralsServices.getReferrer(isUserConnected);\n  //     if (ref === '0x0000000000000000000000000000000000000000') {\n  //       if (referralAddress && referralAddress !== '0x0000000000000000000000000000000000000000') {\n  //         ref = referralAddress;\n  //       }\n  //       setReferrer(ref);\n  //     }\n  //     const pL = Number(await FarmService.poolLength());\n  //     setPoolLength(pL);\n  //     // let farmsTemp = [];\n  //     dispatch(stopLoading());\n  //     for (let i = 0; i < pL; i++) {\n  //       const poolInfo = await FarmService.poolInfo(i, '1');\n  //       const userInfo = await FarmService.userInfo(i, isUserConnected);\n  //       // console.log(userInfo, '------i------', i);\n  //       if (poolInfo) {\n  //         if (Number(poolInfo.allocPoint) === 0) {\n  //           setInactiveFarms(inactiveFarms => [...inactiveFarms, { poolInfo, userInfo, pid: i }]);\n  //         } else {\n  //           if (Number(userInfo.amount) > 0) {\n  //             console.log('index', i);\n  //           }\n  //           // setStakingOnly(stakingOnly => stakingOnly.pid === selectedPairId ?  { poolInfo, userInfo, pid: i }: stakingOnly);\n  //           // setFarms(farms => [...farms, { poolInfo, userInfo, pid: i }]);\n  //           let newArr = [...farms]; // copying the old farms\n  //           newArr[selectedPairId] = { poolInfo, userInfo, pid: selectedPairId };\n  //           setFarms(newArr);\n  //         }\n  //       }\n  //     }\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n\n  const depositWithdraw = async (type) => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n    const value = Number(stakeValue);\n    if (isNaN(value)) {\n      return toast.error(\"Enter vaild amount!\");\n    }\n    if (value <= 0) {\n      return toast.error(\"Enter amount greater than zero!\");\n    }\n    if (value > stakeData.balance) {\n      return toast.error(\"Value is greater than max value!\");\n    }\n    if (!stakeData) {\n      return toast.info(\"Reload page try again!\");\n    }\n    if (stakeConfirmation) {\n      return toast.info(\"Transaction is processing!\");\n    }\n    setStakeConfimation(true);\n    if (type === \"deposit\") {\n      const amount = BigNumber(\n        value * 10 ** stakeData.lpTokenDetails.decimals\n      ).toFixed();\n\n      const data = {\n        pid: stakeData.pid.toString(),\n        amount,\n        referrer: referrer,\n        from: isUserConnected,\n      };\n      // console.log('sending this deposit data' ,data);\n      try {\n        closeStakeModal();\n        dispatch(startLoading());\n        const result = await FarmService.deposit(data);\n        setStakeConfimation(false);\n        dispatch(stopLoading());\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n\n          const data = {\n            message: `Deposit ${stakeData.lpTokenDetails.lpTokenName}`,\n            tx: result,\n          };\n          dispatch(addTransaction(data));\n        }\n      } catch (err) {\n        console.log(err, \"lp deposit\");\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n      }\n    }\n    if (type === \"withdraw\") {\n      const amount = BigNumber(\n        value * 10 ** stakeData.lpTokenDetails.decimals\n      ).toFixed();\n      const data = {\n        pid: stakeData.pid.toString(),\n        amount,\n        from: isUserConnected,\n      };\n      // console.log('sending this withdraw data' , data);\n      try {\n        closeStakeModal();\n        dispatch(startLoading());\n        const result = await FarmService.withdraw(data);\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n\n          const data = {\n            message: `Withdraw ${stakeData.lpTokenDetails.lpTokenName}`,\n            tx: result,\n          };\n          dispatch(addTransaction(data));\n        }\n      } catch (err) {\n        console.log(err, \"lp withdraw\");\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container_wrap farmpln frm_plnet_disply\">\n      <div className=\"upper_text\">\n        <Container>\n          <Row>\n            <Col xl={6} className=\"pl-0\">\n              <div className=\"farm_title\">\n                <div className=\"farm_icon\">\n                  <img src={FarmIcon} />\n                </div>\n                <div className=\"desc\">\n                  <h1 className=\"title_hd\">Farm Planets</h1>\n                  <p>\n                    There is so much to explore! SaitaSwap offers multiple\n                    farming oppurtunities to you. Get amazing rewards by staking\n                    your LP tokens in return for additional SAITAMA Tokens.\n                  </p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <div className=\"farm_srchbar\">\n        <Container>\n          <div className=\"contain_area\">\n            <Form className=\"srchbar_area\">\n              <div className=\"serch_field\">\n                <Form.Label>Search</Form.Label>\n                <InputGroup>\n                  <FormControl id=\"search\" placeholder=\"Niob\" />\n                  <Button className=\"search_btn\">\n                    <img src={Searchicon} />\n                  </Button>\n                </InputGroup>\n              </div>\n              <div className=\"staked_only\">\n                <Form.Check\n                  type=\"checkbox\"\n                  id=\"stakecheck\"\n                  label=\"Staked only\"\n                  checked={checked}\n                  onChange={handleChange}\n                />\n                <Button className=\"btn harvest_btn\">Harvest all</Button>\n              </div>\n            </Form>\n            <div className=\"frm_plnet_list\">\n              <div className=\"farm_tabs\">\n                <Tabs\n                  activeKey={tab}\n                  id=\"frmplanet_tab\"\n                  variant=\"pills\"\n                  onSelect={handleTab}\n                >\n                  <Tab eventKey=\"active\" title=\"Active\">\n                    <div className=\"planet_list active\">\n                      <Row>\n                        <Col xl={12}>\n                          {checked && (\n                          <div className=\"planet_list_view\">\n                              {stakingOnly.map((farm, index) => (\n                                <PlanetCard\n                                  key={index}\n                                  index={index}\n                                  harvestOnClick={harvest}\n                                  currentIndex={currentIndex}\n                                  handleChange={() => handleIndex(index)}\n                                  stakeHandle={stakeHandle}\n                                  handleRoiModal={handleRoiModal}\n                                  status={true}\n                                  farm={farm}\n                                  icon1={NIOB}\n                                  icon2={BUSD}\n                                  title={`NIOB`}\n                                  title1={`BUSD`}\n                                />\n                              ))}\n                            </div>\n                          )}\n\n                          {!checked && <div className=\"planet_list_view\">\n                              {farms.map((farm, index) => (\n                                <PlanetCard\n                                  key={index}\n                                  index={index}\n                                  harvestOnClick={harvest}\n                                  currentIndex={currentIndex}\n                                  handleChange={() => handleIndex(index)}\n                                  stakeHandle={stakeHandle}\n                                  handleRoiModal={handleRoiModal}\n                                  status={true}\n                                  farm={farm}\n                                  icon1={NIOB}\n                                  icon2={BUSD}\n                                  title={`NIOB`}\n                                  title1={`BUSD`}\n                                />\n                              ))}\n                            </div> \n                          }\n                        </Col>\n                      </Row>\n                    </div>\n                  </Tab>\n\n                  <Tab eventKey=\"inactive\" title=\"Inactive\">\n                    <div className=\"planet_list active\">\n                      <Row>\n                        <Col xl={12}>\n                          <div className=\"planet_list_view\">\n                            {inactiveFarms.map((farm, index) => (\n                              <PlanetCard\n                                key={index}\n                                index={index}\n                                harvestOnClick={harvest}\n                                currentIndex={currentIndex}\n                                handleChange={() => handleIndex(index)}\n                                stakeHandle={stakeHandle}\n                                handleRoiModal={handleRoiModal}\n                                status={true}\n                                farm={farm}\n                                icon1={NIOB}\n                                icon2={BUSD}\n                                title={`NIOB`}\n                                title1={`BUSD`}\n                              />\n                            ))}\n                          </div>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Tab>\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n      <GetLPToken\n        stakeValue={stakeValue}\n        stakeData={stakeData}\n        stakeConfirmation={stakeConfirmation}\n        handleStakeValue={handleStakeValue}\n        depositWithdraw={depositWithdraw}\n        setMaxValue={setMaxValue}\n        show={showStake}\n        closeStakeModal={handleClose}\n      />\n      <WithDrawLPToken\n        stakeValue={stakeValue}\n        stakeData={stakeData}\n        stakeConfirmation={stakeConfirmation}\n        handleStakeValue={handleStakeValue}\n        depositWithdraw={depositWithdraw}\n        setMaxValue={setMaxValue}\n        show={showStakeWithdraw}\n        closeStakeModal={handleWithdrawClose}\n        isNiobWithdrawabe={false}\n      />\n      <TransactionalModal\n        show={showTransactionModal}\n        handleClose={closeTransactionModal}\n        txHash={txHash}\n      />\n    </div>\n  );\n};\n\nexport default FarmPlanets;\n"]},"metadata":{},"sourceType":"module"}