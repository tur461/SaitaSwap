{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/components/Modal/RemoveLiquidity/RemoveLiquidity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Row, Modal } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DownArrow from \"../../../assets/images/down-arrow.png\";\nimport NiobIcon from \"../../../assets/images/NIOB-Token-Icon.svg\";\nimport BnbIcon from \"../../../assets/images/token_icons/WBNB-Token-Icon.svg\";\nimport { MAIN_CONTRACT_LIST, TOKEN_LIST, WETH } from \"../../../assets/tokens\";\nimport { addTransaction, searchTokenByNameOrAddress, startLoading, stopLoading, saveUserLpTokens } from \"../../../redux/actions\";\nimport { ContractServices } from \"../../../services/ContractServices\";\nimport { ExchangeService } from \"../../../services/ExchangeService\";\nimport Button from \"../../Button/Button\";\nimport { toast } from \"../../Toast/Toast\";\nimport \"./RemoveLiquidity.scss\";\nimport { BigNumber } from \"bignumber.js\";\nimport RangeSlider from '../../../pages/Trade/RangeSlider';\nimport ModalCurrency from \"../ModalCurrency/ModalCurrency\";\nimport TransactionalModal from \"../../TransactionalModal/TransactionalModal\";\nimport Plusicon from \"../../../assets/images/plus_ico.png\";\nimport iconDropDown from \"../../../assets/images/down-arrow.png\";\nimport SelectCoin from \"../../selectCoin/SelectCoin\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RemoveLiquidity = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const tokenList = useSelector(state => state.persist.tokenList);\n  const deadline = useSelector(state => state.persist.deadline);\n  const slippagePercentage = useSelector(state => state.persist.slippagePercentage);\n  const userLpTokens = useSelector(state => state.persist.userLpTokens);\n  const [modalCurrency, setModalCurrency] = useState(false);\n  const [tokenOne, setTokenOne] = useState(TOKEN_LIST[0]);\n  const [tokenTwo, setTokenTwo] = useState({});\n  const [tokenOneValue, setTokenOneValue] = useState(0);\n  const [tokenTwoValue, setTokenTwoValue] = useState(0);\n  const [sharePoolValue, setSharePoolValue] = useState(100);\n  const [tokenOneCurrency, setCurrencyNameForTokenOne] = useState(TOKEN_LIST[0].symbol);\n  const [tokenTwoCurrency, setCurrencyNameForTokenTwo] = useState('Select a currency');\n  const [tokenOneBalance, setTokenOneBalance] = useState(0);\n  const [tokenTwoBalance, setTokenTwoBalance] = useState(0);\n  const [tokenOneDeposit, setTokenOneDeposit] = useState(0);\n  const [tokenTwoDeposit, setTokenTwoDeposit] = useState(0);\n  const [liquidity, setLiquidity] = useState(0);\n  const [liquidityTemp, setLiquidityTemp] = useState(0);\n  const [tokenType, setTokenType] = useState('TK1');\n  const [showSupplyModal, setShowSupplyModal] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [filteredTokenList, setFilteredTokenList] = useState([]);\n  const [liquidityConfirmation, setLiquidityConfirmation] = useState(false);\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n  const [currentPairAddress, setCurrentPairAddress] = useState('');\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState('');\n  const [screenType, setScreenType] = useState(true); //detailed/simple\n\n  const [rangeValue, setRangeValue] = useState(0);\n  const [approve, setApprove] = useState(false);\n  const [error, setError] = useState('Enter an amount');\n  const [signedData, setSignedData] = useState(null);\n  const [dl, setDl] = useState(0);\n  const [receiveBNB, setReceiveBNB] = useState(true);\n  const [checkBNB, setCheckBNB] = useState(false);\n  const [checkSignature, setCheckSignature] = useState(true);\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n  const [symbolsArr] = useState([\"e\", \"E\", \"+\", \"-\"]);\n  useEffect(() => {\n    setFilteredTokenList(tokenList.filter(token => token.name.toLowerCase().includes(search.toLowerCase())));\n    init();\n  }, [search, tokenList, props.show]);\n\n  const init = async () => {\n    if (isUserConnected) {\n      const oneBalance = await ContractServices.getBNBBalance(isUserConnected);\n      setTokenOneBalance(oneBalance);\n      const {\n        lptoken\n      } = props;\n\n      if (lptoken) {\n        setCurrentPairAddress(lptoken.pair);\n        setLiquidity(lptoken.balance);\n        setSharePoolValue(lptoken.poolShare);\n\n        if (lptoken.token0Obj) {\n          setTokenOne(lptoken.token0Obj);\n          setCurrencyNameForTokenOne(lptoken.token0Obj.symbol);\n          setTokenOneDeposit(lptoken.token0Deposit);\n          let tokenBal = 0;\n\n          if (lptoken.token0Obj.address === 'BNB') {\n            tokenBal = oneBalance;\n            setCheckBNB(true);\n          } else {\n            tokenBal = await ContractServices.getTokenBalance(lptoken.token0Obj.address, isUserConnected);\n          }\n\n          setTokenOneBalance(tokenBal);\n        }\n\n        if (lptoken.token1Obj) {\n          setTokenTwo(lptoken.token1Obj);\n          setCurrencyNameForTokenTwo(lptoken.token1Obj.symbol);\n          setTokenTwoDeposit(lptoken.token1Deposit);\n          let tokenBal = 0;\n\n          if (lptoken.token1Obj.address === 'BNB') {\n            tokenBal = oneBalance;\n            setCheckBNB(true);\n          } else {\n            tokenBal = await ContractServices.getTokenBalance(lptoken.token1Obj.address, isUserConnected);\n          }\n\n          setTokenTwoBalance(tokenBal);\n        }\n      }\n    }\n  };\n\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false);\n    props.backBtn();\n    window.location.reload();\n  };\n\n  const onHandleOpenModal = tokenType => {\n    if (!isUserConnected) {\n      return toast.error('Connect wallet first!');\n    }\n\n    setSelectedCurrency(tokenType === 'TK1' ? tokenTwoCurrency : tokenOneCurrency);\n    setModalCurrency({\n      modalCurrency: true\n    });\n    setTokenType(tokenType);\n  };\n\n  const onHandleSelectCurrency = async (token, selecting) => {\n    const {\n      address,\n      symbol\n    } = token;\n\n    if (!isUserConnected) {\n      return toast.error('Connect wallet first!');\n    }\n\n    let a1,\n        a2,\n        oneBalance = 0,\n        twoBalance = 0;\n\n    if (selecting === 'TK1') {\n      a1 = address;\n\n      if (address === 'BNB') {\n        oneBalance = await ContractServices.getBNBBalance(isUserConnected);\n      } else {\n        oneBalance = await ContractServices.getTokenBalance(address, isUserConnected);\n      }\n\n      setTokenOne(token);\n      setCurrencyNameForTokenOne(symbol);\n      setTokenOneBalance(oneBalance);\n\n      if (tokenTwo.address) {\n        a2 = tokenTwo.address;\n      }\n    }\n\n    if (selecting === 'TK2') {\n      a2 = address;\n\n      if (address === 'BNB') {\n        twoBalance = await ContractServices.getBNBBalance(isUserConnected);\n      } else {\n        twoBalance = await ContractServices.getTokenBalance(address, isUserConnected);\n      }\n\n      setTokenTwo(token);\n      setCurrencyNameForTokenTwo(symbol);\n      setTokenTwoBalance(twoBalance);\n\n      if (tokenOne.address) {\n        a1 = tokenOne.address;\n      }\n    }\n\n    setModalCurrency(!modalCurrency);\n    setSearch('');\n    setFilteredTokenList(tokenList);\n\n    if (a1 && a2) {\n      let currentPairAddress;\n\n      if (a1 === 'BNB') {\n        a1 = WETH; //WETH\n\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else if (a2 === 'BNB') {\n        a2 = WETH; //WETH\n\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else {\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      }\n\n      if (currentPairAddress !== '0x0000000000000000000000000000000000000000') {\n        setCurrentPairAddress(currentPairAddress);\n        const lpTokenBalance = await ContractServices.getTokenBalance(currentPairAddress, isUserConnected);\n        setLiquidity(lpTokenBalance);\n        setLiquidityTemp(0);\n        const totalSupply = await ContractServices.getTotalSupply(currentPairAddress);\n        const ratio = lpTokenBalance / totalSupply;\n        const reserves = await ExchangeService.getReserves(currentPairAddress); //lp deposit\n\n        let token0Deposit = ratio * (reserves['_reserve0'] / 10 ** tokenOne.decimals);\n        let token1Deposit = ratio * (reserves['_reserve1'] / 10 ** tokenTwo.decimals);\n        setTokenOneDeposit(token0Deposit);\n        setTokenTwoDeposit(token1Deposit);\n      } else {\n        setCurrentPairAddress('');\n        setLiquidity(0);\n        setLiquidityTemp(0);\n        setTokenOneValue(0);\n        setTokenTwoValue(0);\n      }\n    }\n  };\n\n  const handleSearchToken = async data => {\n    try {\n      const res = await dispatch(searchTokenByNameOrAddress(data));\n      setFilteredTokenList(res);\n    } catch (error) {\n      toast.error(\"Something went wrong!\");\n    }\n  };\n\n  const handleLiquidityChange = (value, totalValue, type) => {\n    if (value > 0) {\n      if (value >= totalValue) {\n        value = totalValue;\n      }\n\n      const percentage = Number((value / totalValue * 100).toFixed(2));\n      handleChange(percentage, type, value);\n    }\n  };\n\n  const handleChange2 = value => {\n    if (value > 0) {\n      setRangeValue(value); // console.log('value, tokenOneDeposit, tokenTwoDeposit', value, tokenOneDeposit, tokenTwoDeposit);\n\n      const liquidityTemp = value / 100 * liquidity;\n      setLiquidityTemp(liquidityTemp);\n      const tokenOneValue = value / 100 * tokenOneDeposit;\n      setTokenOneValue(tokenOneValue);\n      const tokenTwoValue = value / 100 * tokenTwoDeposit;\n      setTokenTwoValue(tokenTwoValue); //enable approve button\n\n      setApprove(true);\n      setError('Remove');\n    } else {\n      setApprove(false);\n    }\n  };\n\n  const handleChange = (value, type, oldValue) => {\n    if (value > 0) {\n      setRangeValue(value);\n\n      if (type === 'pair') {\n        setLiquidityTemp(oldValue);\n        const tokenTwoValue = value / 100 * tokenTwoDeposit;\n        setTokenTwoValue(tokenTwoValue);\n        const tokenOneValue = value / 100 * tokenOneDeposit;\n        setTokenOneValue(tokenOneValue);\n      }\n\n      if (type === 'TK1') {\n        const liquidityTemp = value / 100 * liquidity;\n        setLiquidityTemp(liquidityTemp);\n        const tokenTwoValue = value / 100 * tokenTwoDeposit;\n        setTokenTwoValue(tokenTwoValue);\n        setTokenOneValue(oldValue);\n      }\n\n      if (type === 'TK2') {\n        const liquidityTemp = value / 100 * liquidity;\n        setLiquidityTemp(liquidityTemp);\n        const tokenOneValue = value / 100 * tokenOneDeposit;\n        setTokenOneValue(tokenOneValue);\n        setTokenTwoValue(oldValue);\n      } //enable approve button\n\n\n      setApprove(true);\n      setError('Remove');\n    } else {\n      setApprove(false);\n    }\n  }; //sign signature\n\n\n  const approveTransaction = async () => {\n    setApprove(false);\n    let value = Math.floor(liquidityTemp * 10 ** 18);\n    value = BigNumber(value).toFixed();\n\n    if (rangeValue === 100) {\n      //fixing for 100%\n      value = await ContractServices.getLiquidity100Value(currentPairAddress, isUserConnected);\n    }\n\n    let dl = Math.floor(new Date().getTime() / 1000);\n    dl = dl + deadline * 60;\n    setDl(dl);\n    const data = {\n      owner: isUserConnected,\n      spender: MAIN_CONTRACT_LIST.router.address,\n      value,\n      deadline: dl\n    };\n\n    try {\n      const res = await ExchangeService.signRemoveTransaction(data, currentPairAddress);\n\n      if (res.message) {\n        if (res.message.indexOf('eth_signTypedData_v4') > -1) {\n          setCheckSignature(false);\n          setError('Remove');\n          await handleTokenApproval();\n          return;\n        }\n\n        if (res.message.indexOf('User denied') > -1) {\n          setApprove(false);\n          return toast.error('User denied for approval.');\n        }\n\n        return toast.error(res.message);\n      }\n\n      setSignedData(res);\n      setError(null);\n    } catch (err) {\n      setApprove(true);\n      setError(err.message);\n    }\n  };\n\n  const confirmRemoveLiquidity = () => {\n    if (!error) {\n      setShowSupplyModal(true);\n    }\n  }; //for non signature remove liquidity\n\n\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error('Wallet address doesn`t match!');\n    }\n\n    if (approvalConfirmation) {\n      return toast.info('Token approval is processing');\n    } // const value = (2*256 - 1).toString();\n\n\n    const value = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n    const {\n      lptoken\n    } = props;\n\n    if (lptoken) {\n      try {\n        dispatch(startLoading());\n        let allowance = await ContractServices.allowanceToken(lptoken.pair, MAIN_CONTRACT_LIST.router.address, isUserConnected);\n        allowance = Number(allowance);\n\n        if (!(allowance > 0)) {\n          const r = await ContractServices.approveToken(isUserConnected, value, MAIN_CONTRACT_LIST.router.address, lptoken.pair);\n\n          if (r.message.indexOf('Rejected') > -1) {\n            toast.error(\"User denied transaction signature.\");\n            setError('Remove');\n            setApprove(true);\n          } else if (r.code == 4001) {\n            toast.error(\"User denied transaction signature.\");\n            setError('Remove');\n          } else {\n            setApprovalConfirmation(true);\n            let data = {\n              message: `Approve ${lptoken.symbol}`,\n              tx: r.transactionHash\n            };\n            dispatch(addTransaction(data));\n            setApprovalConfirmation(false);\n            setError(null);\n          }\n        } else {\n          setApprove(false);\n          setError(null);\n        }\n\n        dispatch(stopLoading());\n      } catch (err) {\n        setApprovalConfirmation(false);\n        dispatch(stopLoading());\n        toast.error('Transaction Reverted!');\n        setError('Error');\n        setApprove(true);\n      }\n    }\n  };\n\n  const handleLpTokens = async () => {\n    const result = userLpTokens.filter(lpToken => lpToken.pair !== props.lptoken.pair);\n    dispatch(saveUserLpTokens(result));\n  };\n\n  const removeLiquidity = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error('Wallet address doesn`t match!');\n    }\n\n    if (liquidityConfirmation) {\n      return toast.info('Transaction is processing!');\n    }\n\n    setLiquidityConfirmation(true);\n    dispatch(startLoading());\n    let value = 0,\n        checkBNB = false,\n        token;\n\n    if (tokenOne.address === 'BNB') {\n      checkBNB = true;\n      value = tokenOneValue;\n      token = tokenTwo.address;\n    }\n\n    if (tokenTwo.address === 'BNB') {\n      checkBNB = true;\n      value = tokenTwoValue;\n      token = tokenOne.address;\n    }\n\n    if (value > 0) {\n      value = Math.floor(value * 10 ** 18);\n      value = BigNumber(value).toFixed();\n    }\n\n    if (checkBNB) {\n      let amountETHMin = BigNumber(Math.floor(Number(value) - Number(value) * slippagePercentage / 100)).toFixed();\n      let amountTokenMin = '';\n\n      if (tokenOne.address === 'BNB') {\n        let a = tokenTwoValue - tokenTwoValue * slippagePercentage / 100;\n        a = a * 10 ** tokenTwo.decimals;\n        amountTokenMin = BigNumber(Math.floor(a)).toFixed();\n      }\n\n      if (tokenTwo.address === 'BNB') {\n        let a = tokenOneValue - tokenOneValue * slippagePercentage / 100;\n        a = a * 10 ** tokenOne.decimals;\n        amountTokenMin = BigNumber(Math.floor(a)).toFixed();\n      }\n\n      let liquidity = Math.floor(liquidityTemp * 10 ** 18);\n      liquidity = BigNumber(liquidity).toFixed();\n\n      if (rangeValue === 100) {\n        //fixing for 100%\n        liquidity = await ContractServices.getLiquidity100Value(currentPairAddress, isUserConnected);\n      }\n\n      let r, s, v;\n\n      if (signedData) {\n        r = signedData.r;\n        s = signedData.s;\n        v = signedData.v;\n      }\n\n      const data = {\n        token,\n        liquidity,\n        amountTokenMin,\n        amountETHMin,\n        to: isUserConnected,\n        deadline: dl,\n        value,\n        approveMax: false,\n        r,\n        s,\n        v,\n        checkSignature\n      };\n\n      try {\n        const result = await ExchangeService.removeLiquidityETHWithPermit(data); // console.log(result, 'remove liquidity transaction');\n\n        dispatch(stopLoading());\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          setShowSupplyModal(false);\n          if (rangeValue === 100) handleLpTokens();\n          const data = {\n            message: `Remove ${tokenOne.symbol} and ${tokenTwo.symbol}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n\n        setLiquidityConfirmation(false);\n      } catch (err) {\n        console.log(err);\n        dispatch(stopLoading());\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n        setLiquidityConfirmation(false);\n      }\n    } else {\n      let amountADesired = tokenOneValue;\n      let amountBDesired = tokenTwoValue;\n      let amountAMin = amountADesired - amountADesired * slippagePercentage / 100;\n      let amountBMin = amountBDesired - amountBDesired * slippagePercentage / 100;\n      amountADesired = BigNumber(Math.floor(amountADesired * 10 ** tokenOne.decimals)).toFixed();\n      amountBDesired = BigNumber(Math.floor(amountBDesired * 10 ** tokenTwo.decimals)).toFixed();\n      amountAMin = BigNumber(Math.floor(amountAMin * 10 ** tokenOne.decimals)).toFixed();\n      amountBMin = BigNumber(Math.floor(amountBMin * 10 ** tokenTwo.decimals)).toFixed();\n      let liquidity = Math.floor(liquidityTemp * 10 ** 18);\n      liquidity = BigNumber(liquidity).toFixed();\n\n      if (rangeValue === 100) {\n        //fixing for 100%\n        liquidity = await ContractServices.getLiquidity100Value(currentPairAddress, isUserConnected);\n      }\n\n      let r, s, v;\n\n      if (signedData) {\n        r = signedData.r;\n        s = signedData.s;\n        v = signedData.v;\n      }\n\n      const data = {\n        tokenA: tokenOne.address,\n        tokenB: tokenTwo.address,\n        liquidity,\n        amountAMin,\n        amountBMin,\n        to: isUserConnected,\n        deadline: dl,\n        value,\n        approveMax: false,\n        r,\n        s,\n        v,\n        checkSignature\n      };\n\n      try {\n        const result = await ExchangeService.removeLiquidityWithPermit(data); // console.log(result, 'remove liquidity transaction');\n\n        dispatch(stopLoading());\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          setShowSupplyModal(false);\n          if (rangeValue === 100) handleLpTokens();\n          const data = {\n            message: `Remove ${tokenOne.symbol} and ${tokenTwo.symbol}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n\n        setLiquidityConfirmation(false);\n      } catch (err) {\n        console.log(err);\n        dispatch(stopLoading());\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n        setLiquidityConfirmation(false);\n      }\n    }\n  };\n\n  const calculateFractionRow = tokenType => {\n    let r = 0;\n    let symbol1 = tokenOne.symbol,\n        symbol2 = tokenTwo.symbol;\n\n    if (symbol1 === 'BNB') {\n      if (receiveBNB) {\n        symbol1 = 'BNB';\n      } else {\n        symbol1 = 'WBNB';\n      }\n    }\n\n    if (symbol2 === 'BNB') {\n      if (receiveBNB) {\n        symbol2 = 'BNB';\n      } else {\n        symbol2 = 'WBNB';\n      }\n    }\n\n    if (tokenType === 'TK1') {\n      if (tokenOneDeposit === 0) return 0;\n      r = tokenTwoDeposit / tokenOneDeposit;\n      r = Number(r.toFixed(5));\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"1 \", symbol1, \" = \", r, \" \", symbol2]\n      }, void 0, true);\n    }\n\n    if (tokenType === 'TK2') {\n      if (tokenTwoDeposit === 0) return 0;\n      r = tokenOneDeposit / tokenTwoDeposit;\n      r = Number(r.toFixed(5));\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"1 \", symbol2, \" = \", r, \" \", symbol1]\n      }, void 0, true);\n    }\n  };\n\n  useEffect(() => {}, [tokenTwoValue]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    scrollable: true,\n    className: \"selectCurrency_modal removeLiq_Modal\",\n    show: props.show,\n    onHide: props.handleClose,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Remove Liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tokenName\",\n      children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"removeAmnt comnBrdr\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"d-flex\",\n          children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-auto\",\n            onClick: () => setScreenType(!screenType),\n            children: screenType ? 'Detailed' : 'Simple'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), screenType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slidecontainer\",\n            children: /*#__PURE__*/_jsxDEV(RangeSlider, {\n              rangeValue: rangeValue,\n              handleChange: handleChange2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amountSelect\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleChange2(25),\n              children: \"25%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"mx-1\",\n              onClick: () => handleChange2(50),\n              children: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"me-1\",\n              onClick: () => handleChange2(75),\n              children: \"75%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleChange2(100),\n              children: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [rangeValue, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), screenType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center downArrow\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: DownArrow,\n            alt: \"down_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"receiveAmnt comnBrdr\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: tokenOneValue.toFixed(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: tokenTwoValue.toFixed(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-end leftSide\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: tokenOne.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: tokenTwo.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this), checkBNB && /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"text-end\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setReceiveBNB(!receiveBNB),\n                children: receiveBNB ? 'Receive WBNB' : 'Receive BNB'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [currentPairAddress && /*#__PURE__*/_jsxDEV(Col, {\n          className: `selectCoin_style ${props.className}`,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mx-0\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"selectCoin_left_style\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onKeyDown: evt => {\n                  symbolsArr.includes(evt.key) && evt.preventDefault();\n                },\n                onChange: e => handleLiquidityChange(Number(e.target.value), liquidity, 'pair'),\n                min: 0,\n                placeholder: \"0.0\",\n                value: liquidityTemp,\n                min: 0,\n                minLength: 1,\n                maxLength: 79,\n                autoCorrect: \"off\",\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"selectCoin_right_style\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Balance: \", liquidity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"select_buttonStyle\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: props.onClick,\n                  children: [props.max && /*#__PURE__*/_jsxDEV(\"strong\", {\n                    onClick: props.onMax,\n                    children: \"MAX\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\" \", props.coinImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: props.coinImage,\n                      className: \"coin_Img\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 675,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      style: {\n                        fontSize: props.selectTokenText ? \"\" : \"\"\n                      },\n                      children: props.value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 676,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"selectDropDownStyle\",\n                    src: tokenOne.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"selectDropDownStyle\",\n                    src: tokenTwo.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"currencyName_textStyle\",\n                    children: [tokenOne.symbol, \":\", tokenTwo.symbol]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center downArrow\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: DownArrow,\n            alt: \"down_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectCoin, {\n          label: `Balance: ${tokenOneBalance}`,\n          coinImage: tokenOne === null || tokenOne === void 0 ? void 0 : tokenOne.icon,\n          value: tokenOneCurrency,\n          onClick: () => onHandleOpenModal('TK1'),\n          inputLabel: \"Output\",\n          className: \"mb-0\",\n          placeholder: \"0.0\",\n          onChange: e => handleLiquidityChange(Number(e.target.value), tokenOneDeposit, 'TK1'),\n          max: false,\n          defaultValue: tokenOneValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center downArrow\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Plusicon,\n            alt: \"down_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectCoin, {\n          label: `Balance: ${tokenTwoBalance}`,\n          coinImage: tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.icon,\n          value: tokenTwoCurrency,\n          onClick: () => onHandleOpenModal('TK2'),\n          inputLabel: \"Output\",\n          className: \"mb-0\",\n          placeholder: \"0.0\",\n          onChange: e => handleLiquidityChange(Number(e.target.value), tokenTwoDeposit, 'TK2'),\n          max: false,\n          defaultValue: tokenTwoValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"totalPrice\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-start\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"1 NIOB = 0.00035815 BNB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"1 BNB = 3870.84 NIOB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"btnCol\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"approveBtn\",\n          title: \"Approve\",\n          onClick: () => approveTransaction(),\n          disabled: !approve\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"approveBtn\",\n          title: error ? error : 'Remove',\n          onClick: () => confirmRemoveLiquidity(),\n          disabled: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCurrency, {\n        show: modalCurrency,\n        tokenList: filteredTokenList,\n        handleClose: () => setModalCurrency(!modalCurrency),\n        selectCurrency: onHandleSelectCurrency,\n        searchToken: handleSearchToken,\n        searchByName: setSearch,\n        tokenType: tokenType,\n        currencyName: selectedCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCurrency, {\n        show: modalCurrency,\n        tokenList: filteredTokenList,\n        handleClose: () => setModalCurrency(!modalCurrency),\n        selectCurrency: onHandleSelectCurrency,\n        searchToken: handleSearchToken,\n        searchByName: setSearch,\n        tokenType: tokenType,\n        currencyName: selectedCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        centered: true,\n        scrollable: true,\n        className: \"connect_wallet\",\n        show: showSupplyModal,\n        onHide: () => setShowSupplyModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"You will receive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"baseToken_style\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: tokenOneValue.toFixed(5)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 773,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: tokenOne.icon,\n                        alt: \"icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 775,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                        children: tokenOne.symbol\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 776,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 774,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 772,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      className: \"plus\",\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 780,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 779,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: tokenTwoValue.toFixed(5)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 783,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: tokenTwo.icon,\n                        alt: \"icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 785,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                        children: tokenTwo.symbol\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 786,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 784,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 782,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Output is estimated. If the price changes by more than \", slippagePercentage, \"% your transaction will revert.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 789,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 771,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [tokenOneCurrency, \" Deposit: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\" \", tokenOneValue]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 792,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 792,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [tokenTwoCurrency, \" Deposit:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: tokenTwoValue\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 793,\n                      columnNumber: 52\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 793,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"Price\", /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [1, \"\\xA0\", tokenOneCurrency, \" = \", calculateFractionRow('TK1'), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 795,\n                        columnNumber: 86\n                      }, this), 1, \"\\xA0\", tokenTwoCurrency, \" = \", calculateFractionRow('TK2')]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 795,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 794,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  title: isUserConnected ? 'Confirm' : 'Unlock Wallet',\n                  className: \"remove_liq_btn\",\n                  disabled: liquidityConfirmation,\n                  onClick: () => removeLiquidity()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this), showTransactionModal && /*#__PURE__*/_jsxDEV(TransactionalModal, {\n        closeTransactionModal: closeTransactionModal,\n        txHash: txHash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 34\n      }, this), currentPairAddress && /*#__PURE__*/_jsxDEV(Col, {\n        className: \"totalPrice\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-start\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"LP TOKENS IN YOUR WALLET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 20\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: tokenOne.icon,\n                alt: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 22\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tokenTwo.icon,\n                alt: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 61\n              }, this), \" \", tokenOne.symbol, \"/\", tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: liquidity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 141\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [tokenOne.symbol, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [tokenOneDeposit.toFixed(5), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.symbol, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: tokenTwoDeposit.toFixed(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 586,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RemoveLiquidity, \"hdRVuSPzA8xMj3jSopcOerk1WMA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RemoveLiquidity;\nexport default RemoveLiquidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoveLiquidity\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/components/Modal/RemoveLiquidity/RemoveLiquidity.js"],"names":["React","useEffect","useState","Col","Row","Modal","useDispatch","useSelector","DownArrow","MAIN_CONTRACT_LIST","TOKEN_LIST","WETH","addTransaction","searchTokenByNameOrAddress","startLoading","stopLoading","saveUserLpTokens","ContractServices","ExchangeService","Button","toast","BigNumber","RangeSlider","ModalCurrency","TransactionalModal","Plusicon","iconDropDown","SelectCoin","RemoveLiquidity","props","dispatch","isUserConnected","state","persist","tokenList","deadline","slippagePercentage","userLpTokens","modalCurrency","setModalCurrency","tokenOne","setTokenOne","tokenTwo","setTokenTwo","tokenOneValue","setTokenOneValue","tokenTwoValue","setTokenTwoValue","sharePoolValue","setSharePoolValue","tokenOneCurrency","setCurrencyNameForTokenOne","symbol","tokenTwoCurrency","setCurrencyNameForTokenTwo","tokenOneBalance","setTokenOneBalance","tokenTwoBalance","setTokenTwoBalance","tokenOneDeposit","setTokenOneDeposit","tokenTwoDeposit","setTokenTwoDeposit","liquidity","setLiquidity","liquidityTemp","setLiquidityTemp","tokenType","setTokenType","showSupplyModal","setShowSupplyModal","search","setSearch","filteredTokenList","setFilteredTokenList","liquidityConfirmation","setLiquidityConfirmation","selectedCurrency","setSelectedCurrency","currentPairAddress","setCurrentPairAddress","showTransactionModal","setShowTransactionModal","txHash","setTxHash","screenType","setScreenType","rangeValue","setRangeValue","approve","setApprove","error","setError","signedData","setSignedData","dl","setDl","receiveBNB","setReceiveBNB","checkBNB","setCheckBNB","checkSignature","setCheckSignature","approvalConfirmation","setApprovalConfirmation","symbolsArr","filter","token","name","toLowerCase","includes","init","show","oneBalance","getBNBBalance","lptoken","pair","balance","poolShare","token0Obj","token0Deposit","tokenBal","address","getTokenBalance","token1Obj","token1Deposit","closeTransactionModal","backBtn","window","location","reload","onHandleOpenModal","onHandleSelectCurrency","selecting","a1","a2","twoBalance","getPair","lpTokenBalance","totalSupply","getTotalSupply","ratio","reserves","getReserves","decimals","handleSearchToken","data","res","handleLiquidityChange","value","totalValue","type","percentage","Number","toFixed","handleChange","handleChange2","oldValue","approveTransaction","Math","floor","getLiquidity100Value","Date","getTime","owner","spender","router","signRemoveTransaction","message","indexOf","handleTokenApproval","err","confirmRemoveLiquidity","acc","getDefaultAccount","info","allowance","allowanceToken","r","approveToken","code","tx","transactionHash","handleLpTokens","result","lpToken","removeLiquidity","amountETHMin","amountTokenMin","a","s","v","to","approveMax","removeLiquidityETHWithPermit","console","log","web3ErrorHandle","amountADesired","amountBDesired","amountAMin","amountBMin","tokenA","tokenB","removeLiquidityWithPermit","calculateFractionRow","symbol1","symbol2","handleClose","className","evt","key","preventDefault","e","target","onClick","max","onMax","coinImage","fontSize","selectTokenText","icon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Modal } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DownArrow from \"../../../assets/images/down-arrow.png\";\nimport NiobIcon from \"../../../assets/images/NIOB-Token-Icon.svg\";\nimport BnbIcon from \"../../../assets/images/token_icons/WBNB-Token-Icon.svg\";\nimport { MAIN_CONTRACT_LIST, TOKEN_LIST, WETH } from \"../../../assets/tokens\";\nimport { addTransaction, searchTokenByNameOrAddress, startLoading, stopLoading, saveUserLpTokens } from \"../../../redux/actions\";\nimport { ContractServices } from \"../../../services/ContractServices\";\nimport { ExchangeService } from \"../../../services/ExchangeService\";\nimport Button from \"../../Button/Button\";\nimport { toast } from \"../../Toast/Toast\";\nimport \"./RemoveLiquidity.scss\";\nimport { BigNumber } from \"bignumber.js\";\nimport RangeSlider from '../../../pages/Trade/RangeSlider';\nimport ModalCurrency from \"../ModalCurrency/ModalCurrency\";\nimport TransactionalModal from \"../../TransactionalModal/TransactionalModal\";\nimport Plusicon from \"../../../assets/images/plus_ico.png\";\nimport iconDropDown from \"../../../assets/images/down-arrow.png\";\nimport SelectCoin from \"../../selectCoin/SelectCoin\";\n\n\nconst RemoveLiquidity = (props) => {\n  const dispatch = useDispatch();\n\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const tokenList = useSelector(state => state.persist.tokenList);\n  const deadline = useSelector(state => state.persist.deadline);\n  const slippagePercentage = useSelector(state => state.persist.slippagePercentage);\n  const userLpTokens = useSelector(state => state.persist.userLpTokens);\n\n  const [modalCurrency, setModalCurrency] = useState(false);\n  const [tokenOne, setTokenOne] = useState(TOKEN_LIST[0]);\n  const [tokenTwo, setTokenTwo] = useState({});\n  const [tokenOneValue, setTokenOneValue] = useState(0);\n  const [tokenTwoValue, setTokenTwoValue] = useState(0);\n  const [sharePoolValue, setSharePoolValue] = useState(100);\n  const [tokenOneCurrency, setCurrencyNameForTokenOne] = useState(TOKEN_LIST[0].symbol);\n  const [tokenTwoCurrency, setCurrencyNameForTokenTwo] = useState('Select a currency');\n  const [tokenOneBalance, setTokenOneBalance] = useState(0);\n  const [tokenTwoBalance, setTokenTwoBalance] = useState(0);\n  const [tokenOneDeposit, setTokenOneDeposit] = useState(0);\n  const [tokenTwoDeposit, setTokenTwoDeposit] = useState(0);\n\n  const [liquidity, setLiquidity] = useState(0);\n  const [liquidityTemp, setLiquidityTemp] = useState(0);\n  const [tokenType, setTokenType] = useState('TK1');\n  const [showSupplyModal, setShowSupplyModal] = useState(false);\n\n  const [search, setSearch] = useState(\"\");\n  const [filteredTokenList, setFilteredTokenList] = useState([]);\n  const [liquidityConfirmation, setLiquidityConfirmation] = useState(false);\n\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n\n  const [currentPairAddress, setCurrentPairAddress] = useState('');\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState('');\n\n  const [screenType, setScreenType] = useState(true);//detailed/simple\n  const [rangeValue, setRangeValue] = useState(0);\n  const [approve, setApprove] = useState(false);\n  const [error, setError] = useState('Enter an amount');\n  const [signedData, setSignedData] = useState(null);\n  const [dl, setDl] = useState(0);\n  const [receiveBNB, setReceiveBNB] = useState(true);\n  const [checkBNB, setCheckBNB] = useState(false);\n  const [checkSignature, setCheckSignature] = useState(true);\n\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n\n  const [symbolsArr] = useState([\"e\", \"E\", \"+\", \"-\"]);\n\n  useEffect(() => {\n    setFilteredTokenList(tokenList.filter((token) => token.name.toLowerCase().includes(search.toLowerCase())));\n    init();\n  }, [search, tokenList, props.show]);\n\n  const init = async () => {\n    if (isUserConnected) {\n      const oneBalance = await ContractServices.getBNBBalance(isUserConnected);\n      setTokenOneBalance(oneBalance);\n\n      const { lptoken } = props;\n      if (lptoken) {\n        setCurrentPairAddress(lptoken.pair);\n        setLiquidity(lptoken.balance);\n        setSharePoolValue(lptoken.poolShare);\n        if (lptoken.token0Obj) {\n          setTokenOne(lptoken.token0Obj);\n          setCurrencyNameForTokenOne(lptoken.token0Obj.symbol);\n          setTokenOneDeposit(lptoken.token0Deposit);\n          let tokenBal = 0;\n          if (lptoken.token0Obj.address === 'BNB') {\n            tokenBal = oneBalance;\n            setCheckBNB(true);\n          } else {\n            tokenBal = await ContractServices.getTokenBalance(lptoken.token0Obj.address, isUserConnected);\n          }\n          setTokenOneBalance(tokenBal);\n        }\n        if (lptoken.token1Obj) {\n          setTokenTwo(lptoken.token1Obj);\n          setCurrencyNameForTokenTwo(lptoken.token1Obj.symbol);\n          setTokenTwoDeposit(lptoken.token1Deposit);\n          let tokenBal = 0;\n          if (lptoken.token1Obj.address === 'BNB') {\n            tokenBal = oneBalance;\n            setCheckBNB(true);\n          } else {\n            tokenBal = await ContractServices.getTokenBalance(lptoken.token1Obj.address, isUserConnected);\n          }\n          setTokenTwoBalance(tokenBal);\n        }\n      }\n    }\n  };\n\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false);\n    props.backBtn();\n    window.location.reload();\n  }\n\n  const onHandleOpenModal = (tokenType) => {\n    if (!isUserConnected) {\n      return toast.error('Connect wallet first!');\n    }\n    setSelectedCurrency(tokenType === 'TK1' ? tokenTwoCurrency : tokenOneCurrency);\n    setModalCurrency({\n      modalCurrency: true,\n    });\n    setTokenType(tokenType);\n  }\n  const onHandleSelectCurrency = async (token, selecting) => {\n    const { address, symbol } = token;\n    if (!isUserConnected) {\n      return toast.error('Connect wallet first!');\n    }\n    let a1, a2, oneBalance = 0, twoBalance = 0;\n    if (selecting === 'TK1') {\n      a1 = address;\n      if (address === 'BNB') {\n        oneBalance = await ContractServices.getBNBBalance(isUserConnected);\n      } else {\n        oneBalance = await ContractServices.getTokenBalance(address, isUserConnected);\n      }\n      setTokenOne(token);\n      setCurrencyNameForTokenOne(symbol);\n      setTokenOneBalance(oneBalance);\n      if (tokenTwo.address) {\n        a2 = tokenTwo.address;\n      }\n    }\n    if (selecting === 'TK2') {\n      a2 = address;\n      if (address === 'BNB') {\n        twoBalance = await ContractServices.getBNBBalance(isUserConnected);\n      } else {\n        twoBalance = await ContractServices.getTokenBalance(address, isUserConnected);\n      }\n      setTokenTwo(token);\n      setCurrencyNameForTokenTwo(symbol);\n      setTokenTwoBalance(twoBalance);\n      if (tokenOne.address) {\n        a1 = tokenOne.address;\n      }\n    }\n    setModalCurrency(!modalCurrency);\n    setSearch('');\n    setFilteredTokenList(tokenList);\n\n    if (a1 && a2) {\n      let currentPairAddress;\n      if (a1 === 'BNB') {\n        a1 = WETH;//WETH\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else if (a2 === 'BNB') {\n        a2 = WETH;//WETH\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else {\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      }\n      if (currentPairAddress !== '0x0000000000000000000000000000000000000000') {\n        setCurrentPairAddress(currentPairAddress);\n        const lpTokenBalance = await ContractServices.getTokenBalance(currentPairAddress, isUserConnected);\n        setLiquidity(lpTokenBalance);\n        setLiquidityTemp(0);\n\n        const totalSupply = await ContractServices.getTotalSupply(currentPairAddress);\n        const ratio = lpTokenBalance / totalSupply;\n\n        const reserves = await ExchangeService.getReserves(currentPairAddress);\n\n        //lp deposit\n        let token0Deposit = (ratio * (reserves['_reserve0'] / 10 ** tokenOne.decimals));\n        let token1Deposit = (ratio * (reserves['_reserve1'] / 10 ** tokenTwo.decimals));\n\n        setTokenOneDeposit(token0Deposit);\n        setTokenTwoDeposit(token1Deposit);\n      } else {\n        setCurrentPairAddress('');\n        setLiquidity(0);\n        setLiquidityTemp(0);\n        setTokenOneValue(0);\n        setTokenTwoValue(0);\n      }\n    }\n  }\n\n  const handleSearchToken = async (data) => {\n    try {\n      const res = await dispatch(searchTokenByNameOrAddress(data));\n      setFilteredTokenList(res);\n    } catch (error) {\n      toast.error(\"Something went wrong!\");\n    }\n  }\n  const handleLiquidityChange = (value, totalValue, type) => {\n    if (value > 0) {\n      if (value >= totalValue) {\n        value = totalValue;\n      }\n      const percentage = Number(((value / totalValue) * 100).toFixed(2));\n      handleChange(percentage, type, value);\n    }\n  };\n\n  const handleChange2 = value => {\n    if (value > 0) {\n      setRangeValue(value);\n\n      // console.log('value, tokenOneDeposit, tokenTwoDeposit', value, tokenOneDeposit, tokenTwoDeposit);\n\n      const liquidityTemp = ((value / 100) * liquidity);\n      setLiquidityTemp(liquidityTemp);\n\n      const tokenOneValue = ((value / 100) * tokenOneDeposit);\n      setTokenOneValue(tokenOneValue);\n\n      const tokenTwoValue = ((value / 100) * tokenTwoDeposit);\n      setTokenTwoValue(tokenTwoValue);\n\n      //enable approve button\n      setApprove(true);\n      setError('Remove');\n    } else {\n      setApprove(false);\n    }\n  };\n\n  const handleChange = (value, type, oldValue) => {\n    if (value > 0) {\n      setRangeValue(value);\n      if (type === 'pair') {\n        setLiquidityTemp(oldValue);\n        const tokenTwoValue = ((value / 100) * tokenTwoDeposit);\n        setTokenTwoValue(tokenTwoValue);\n        const tokenOneValue = ((value / 100) * tokenOneDeposit);\n        setTokenOneValue(tokenOneValue);\n      }\n      if (type === 'TK1') {\n        const liquidityTemp = ((value / 100) * liquidity);\n        setLiquidityTemp(liquidityTemp);\n        const tokenTwoValue = ((value / 100) * tokenTwoDeposit);\n        setTokenTwoValue(tokenTwoValue);\n        setTokenOneValue(oldValue);\n      }\n      if (type === 'TK2') {\n        const liquidityTemp = ((value / 100) * liquidity);\n        setLiquidityTemp(liquidityTemp);\n        const tokenOneValue = ((value / 100) * tokenOneDeposit);\n        setTokenOneValue(tokenOneValue);\n        setTokenTwoValue(oldValue);\n      }\n\n      //enable approve button\n      setApprove(true);\n      setError('Remove');\n    } else {\n      setApprove(false);\n    }\n  };\n  //sign signature\n  const approveTransaction = async () => {\n    setApprove(false);\n    let value = Math.floor(liquidityTemp * (10 ** 18));\n    value = BigNumber(value).toFixed();\n\n    if (rangeValue === 100) {//fixing for 100%\n      value = await ContractServices.getLiquidity100Value(currentPairAddress, isUserConnected);\n    }\n\n    let dl = Math.floor((new Date()).getTime() / 1000);\n    dl = dl + (deadline * 60);\n    setDl(dl);\n\n    const data = {\n      owner: isUserConnected,\n      spender: MAIN_CONTRACT_LIST.router.address,\n      value,\n      deadline: dl\n    }\n    try {\n      const res = await ExchangeService.signRemoveTransaction(data, currentPairAddress);\n      if (res.message) {\n        if (res.message.indexOf('eth_signTypedData_v4') > -1) {\n          setCheckSignature(false);\n          setError('Remove');\n          await handleTokenApproval();\n          return;\n        }\n        if (res.message.indexOf('User denied') > -1) {\n          setApprove(false);\n          return toast.error('User denied for approval.');\n        }\n        return toast.error(res.message);\n      }\n      setSignedData(res);\n      setError(null);\n    } catch (err) {\n      setApprove(true);\n      setError(err.message);\n    }\n  };\n  const confirmRemoveLiquidity = () => {\n    if (!error) {\n      setShowSupplyModal(true);\n    }\n  }\n  //for non signature remove liquidity\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error('Wallet address doesn`t match!');\n    }\n    if (approvalConfirmation) {\n      return toast.info('Token approval is processing');\n    }\n    // const value = (2*256 - 1).toString();\n    const value = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n    const { lptoken } = props;\n    if (lptoken) {\n      try {\n        dispatch(startLoading());\n        let allowance = await ContractServices.allowanceToken(lptoken.pair, MAIN_CONTRACT_LIST.router.address, isUserConnected);\n        allowance = Number(allowance);\n        if (!(allowance > 0)) {\n          const r = await ContractServices.approveToken(isUserConnected, value, MAIN_CONTRACT_LIST.router.address, lptoken.pair);\n          if (r.message.indexOf('Rejected') > -1) {\n            toast.error(\"User denied transaction signature.\");\n            setError('Remove');\n            setApprove(true);\n          } else if (r.code == 4001) {\n            toast.error(\"User denied transaction signature.\");\n            setError('Remove');\n          } else {\n            setApprovalConfirmation(true);\n            let data = {\n              message: `Approve ${lptoken.symbol}`,\n              tx: r.transactionHash\n            };\n            dispatch(addTransaction(data));\n            setApprovalConfirmation(false);\n            setError(null);\n          }\n        } else {\n          setApprove(false);\n          setError(null);\n        }\n        dispatch(stopLoading());\n      } catch (err) {\n        setApprovalConfirmation(false);\n        dispatch(stopLoading());\n        toast.error('Transaction Reverted!');\n        setError('Error');\n        setApprove(true);\n      }\n    }\n  }\n  const handleLpTokens = async () => {\n    const result = userLpTokens.filter(lpToken => lpToken.pair !== props.lptoken.pair);\n    dispatch(saveUserLpTokens(result));\n  }\n  const removeLiquidity = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error('Wallet address doesn`t match!');\n    }\n    if (liquidityConfirmation) {\n      return toast.info('Transaction is processing!');\n    }\n    setLiquidityConfirmation(true);\n    dispatch(startLoading());\n\n    let value = 0, checkBNB = false, token;\n\n    if (tokenOne.address === 'BNB') {\n      checkBNB = true;\n      value = tokenOneValue;\n      token = tokenTwo.address;\n    }\n    if (tokenTwo.address === 'BNB') {\n      checkBNB = true;\n      value = tokenTwoValue;\n      token = tokenOne.address;\n    }\n    if (value > 0) {\n      value = Math.floor(value * 10 ** 18);\n      value = BigNumber(value).toFixed();\n    }\n    if (checkBNB) {\n      let amountETHMin = BigNumber(Math.floor(Number(value) - (Number(value) * slippagePercentage / 100))).toFixed();\n\n      let amountTokenMin = '';\n      if (tokenOne.address === 'BNB') {\n        let a = tokenTwoValue - (tokenTwoValue * slippagePercentage) / 100;\n        a = a * 10 ** tokenTwo.decimals;\n        amountTokenMin = BigNumber(Math.floor(a)).toFixed();\n      }\n      if (tokenTwo.address === 'BNB') {\n        let a = (tokenOneValue - (tokenOneValue * slippagePercentage) / 100);\n        a = a * 10 ** tokenOne.decimals;\n        amountTokenMin = BigNumber(Math.floor(a)).toFixed();\n      }\n\n      let liquidity = Math.floor(liquidityTemp * (10 ** 18));\n      liquidity = BigNumber(liquidity).toFixed();\n\n      if (rangeValue === 100) { //fixing for 100%\n        liquidity = await ContractServices.getLiquidity100Value(currentPairAddress, isUserConnected);\n      }\n\n      let r, s, v;\n      if (signedData) {\n        r = signedData.r;\n        s = signedData.s;\n        v = signedData.v;\n      }\n\n      const data = {\n        token,\n        liquidity,\n        amountTokenMin,\n        amountETHMin,\n        to: isUserConnected,\n        deadline: dl,\n        value,\n        approveMax: false,\n        r,\n        s,\n        v,\n        checkSignature\n      };\n      try {\n        const result = await ExchangeService.removeLiquidityETHWithPermit(data);\n        // console.log(result, 'remove liquidity transaction');\n        dispatch(stopLoading());\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          setShowSupplyModal(false);\n          if (rangeValue === 100) handleLpTokens();\n          const data = {\n            message: `Remove ${tokenOne.symbol} and ${tokenTwo.symbol}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n        setLiquidityConfirmation(false);\n      } catch (err) {\n        console.log(err);\n        dispatch(stopLoading());\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n        setLiquidityConfirmation(false);\n      }\n    } else {\n      let amountADesired = tokenOneValue;\n      let amountBDesired = tokenTwoValue;\n\n      let amountAMin = amountADesired - (amountADesired * slippagePercentage / 100);\n      let amountBMin = amountBDesired - (amountBDesired * slippagePercentage / 100);\n\n      amountADesired = BigNumber(Math.floor(amountADesired * 10 ** tokenOne.decimals)).toFixed();\n      amountBDesired = BigNumber(Math.floor(amountBDesired * 10 ** tokenTwo.decimals)).toFixed();\n      amountAMin = BigNumber(Math.floor(amountAMin * 10 ** tokenOne.decimals)).toFixed();\n      amountBMin = BigNumber(Math.floor(amountBMin * 10 ** tokenTwo.decimals)).toFixed();\n\n      let liquidity = Math.floor(liquidityTemp * (10 ** 18));\n      liquidity = BigNumber(liquidity).toFixed();\n\n      if (rangeValue === 100) {//fixing for 100%\n        liquidity = await ContractServices.getLiquidity100Value(currentPairAddress, isUserConnected);\n      }\n\n      let r, s, v;\n      if (signedData) {\n        r = signedData.r;\n        s = signedData.s;\n        v = signedData.v;\n      }\n\n      const data = {\n        tokenA: tokenOne.address,\n        tokenB: tokenTwo.address,\n        liquidity,\n        amountAMin,\n        amountBMin,\n        to: isUserConnected,\n        deadline: dl,\n        value,\n        approveMax: false,\n        r,\n        s,\n        v,\n        checkSignature\n      };\n\n      try {\n        const result = await ExchangeService.removeLiquidityWithPermit(data);\n        // console.log(result, 'remove liquidity transaction');\n\n        dispatch(stopLoading());\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          setShowSupplyModal(false);\n          if (rangeValue === 100) handleLpTokens();\n          const data = {\n            message: `Remove ${tokenOne.symbol} and ${tokenTwo.symbol}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n        setLiquidityConfirmation(false);\n      } catch (err) {\n        console.log(err);\n        dispatch(stopLoading());\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n        setLiquidityConfirmation(false);\n      }\n    }\n  }\n\n  const calculateFractionRow = (tokenType) => {\n    let r = 0;\n    let symbol1 = tokenOne.symbol, symbol2 = tokenTwo.symbol;\n    if (symbol1 === 'BNB') {\n      if (receiveBNB) {\n        symbol1 = 'BNB';\n      } else {\n        symbol1 = 'WBNB';\n      }\n    }\n    if (symbol2 === 'BNB') {\n      if (receiveBNB) {\n        symbol2 = 'BNB';\n      } else {\n        symbol2 = 'WBNB';\n      }\n    }\n    if (tokenType === 'TK1') {\n      if (tokenOneDeposit === 0) return 0;\n      r = (tokenTwoDeposit / tokenOneDeposit);\n      r = Number(r.toFixed(5));\n\n      return <>1 {symbol1} = {r} {symbol2}</>\n    }\n    if (tokenType === 'TK2') {\n      if (tokenTwoDeposit === 0) return 0;\n      r = (tokenOneDeposit / tokenTwoDeposit);\n      r = Number(r.toFixed(5));\n      return <>1 {symbol2} = {r} {symbol1}</>\n    }\n  }\n\n  useEffect(() => {\n\n  }, [tokenTwoValue])\n\n\n  return (\n    <Modal\n      scrollable={true}\n      className=\"selectCurrency_modal removeLiq_Modal\"\n      show={props.show}\n      onHide={props.handleClose}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Remove Liquidity</Modal.Title>\n      </Modal.Header>\n      <div className=\"tokenName\">\n        <hr />\n      </div>\n      <Modal.Body>\n        <Col className=\"removeAmnt comnBrdr\">\n          <h6 className=\"d-flex\">\n            Amount <span className=\"ms-auto\" onClick={() => setScreenType(!screenType)}>{screenType ? 'Detailed' : 'Simple'}</span>\n          </h6>\n\n          {screenType ?\n            <>\n              <div class=\"slidecontainer\">\n                {/* <input type=\"range\" className=\"slider\" /> */}\n                <RangeSlider rangeValue={rangeValue} handleChange={handleChange2} />\n              </div>\n\n              <div className=\"amountSelect\">\n                <button type=\"button\" onClick={() => handleChange2(25)}>25%</button>\n                <button type=\"button\" className=\"mx-1\" onClick={() => handleChange2(50)}>50%</button>\n                <button type=\"button\" className=\"me-1\" onClick={() => handleChange2(75)}>75%</button>\n                <button type=\"button\" onClick={() => handleChange2(100)}>Max</button>\n              </div>\n            </>\n            :\n            <h2>\n              {rangeValue} %\n            </h2>}\n        </Col>\n\n        {screenType ?\n          <>\n            <Col className=\"text-center downArrow\">\n              <img src={DownArrow} alt=\"down_icon\" />\n            </Col>\n\n\n            <Col className=\"receiveAmnt comnBrdr\">\n              <ul className=\"text-start\">\n                <li>{tokenOneValue.toFixed(5)}</li>\n                <li>{tokenTwoValue.toFixed(5)}</li>\n              </ul>\n              <ul className=\"text-end leftSide\">\n                <li>\n                  {/* <img src={NiobIcon} alt=\"coin_icon\" /> */}\n                  {tokenOne.symbol}\n                </li>\n                <li>\n                  {/* <img src={BnbIcon} alt=\"coin_icon\" /> */}\n                  {tokenTwo.symbol}\n                </li>\n                {checkBNB && <h6 className=\"text-end\"><span onClick={() => setReceiveBNB(!receiveBNB)}>{receiveBNB ? 'Receive WBNB' : 'Receive BNB'}</span></h6>}\n              </ul>\n            </Col>\n          </>\n          :\n          <>\n            {currentPairAddress && <Col className={`selectCoin_style ${props.className}`}>\n              <Row className=\"mx-0\">\n                <Col className=\"selectCoin_left_style\">\n                  <label>Input</label>\n                  <input\n                    type=\"number\"\n                    onKeyDown={(evt) => { symbolsArr.includes(evt.key) && evt.preventDefault() }}\n                    onChange={(e) => handleLiquidityChange(Number(e.target.value), liquidity, 'pair')} min={0}\n                    placeholder=\"0.0\"\n                    value={liquidityTemp}\n                    min={0}\n                    minLength={1}\n                    maxLength={79}\n                    autoCorrect=\"off\"\n                    autoComplete=\"off\"\n                  />\n                </Col>\n                <Col className=\"selectCoin_right_style\">\n                  <label>Balance: {liquidity}</label>\n                  <Col className=\"select_buttonStyle\">\n                    <button onClick={props.onClick}>\n                      {props.max && <strong onClick={props.onMax}>MAX</strong>}\n\n                      <div> {props.coinImage && <img src={props.coinImage} className=\"coin_Img\" />}\n                        <strong style={{ fontSize: props.selectTokenText ? \"\" : \"\" }}>\n                          {props.value}\n                        </strong></div>\n                      <img className=\"selectDropDownStyle\" src={tokenOne.icon} />\n                      <img className=\"selectDropDownStyle\" src={tokenTwo.icon} />\n                      <span className=\"currencyName_textStyle\">{tokenOne.symbol}:{tokenTwo.symbol}</span>\n\n                    </button>\n                  </Col>\n                </Col>\n              </Row>\n            </Col>\n            }\n\n\n            <Col className=\"text-center downArrow\">\n              <img src={DownArrow} alt=\"down_icon\" />\n            </Col>\n\n            {<SelectCoin\n              label={`Balance: ${tokenOneBalance}`}\n              coinImage={tokenOne?.icon}\n              value={tokenOneCurrency}\n              onClick={() => onHandleOpenModal('TK1')}\n              inputLabel=\"Output\"\n              className=\"mb-0\"\n              placeholder=\"0.0\"\n              onChange={(e) => handleLiquidityChange(Number(e.target.value), tokenOneDeposit, 'TK1')}\n              max={false}\n              defaultValue={tokenOneValue}\n            />}\n\n            <Col className=\"text-center downArrow\">\n              <img src={Plusicon} alt=\"down_icon\" />\n            </Col>\n\n            {<SelectCoin\n              label={`Balance: ${tokenTwoBalance}`}\n              coinImage={tokenTwo?.icon}\n              value={tokenTwoCurrency}\n              onClick={() => onHandleOpenModal('TK2')}\n              inputLabel=\"Output\"\n              className=\"mb-0\"\n              placeholder=\"0.0\"\n              onChange={(e) => handleLiquidityChange(Number(e.target.value), tokenTwoDeposit, 'TK2')}\n              max={false}\n              defaultValue={tokenTwoValue}\n            />}\n          </>\n        }\n\n        <Col className=\"totalPrice\">\n          <ul className=\"text-start\">\n            <li>Price:</li>\n          </ul>\n          <ul className=\"text-end\">\n            <li>1 NIOB = 0.00035815 BNB</li>\n            <li>1 BNB = 3870.84 NIOB</li>\n          </ul>\n        </Col>\n        <Col className=\"btnCol\">\n          <Button className=\"approveBtn\" title=\"Approve\" onClick={() => approveTransaction()} disabled={!approve} />\n          <Button className=\"approveBtn\" title={error ? error : 'Remove'} onClick={() => confirmRemoveLiquidity()} disabled={error} />\n        </Col>\n\n        <ModalCurrency\n          show={modalCurrency}\n          tokenList={filteredTokenList}\n          handleClose={() => setModalCurrency(!modalCurrency)}\n          selectCurrency={onHandleSelectCurrency}\n          searchToken={handleSearchToken}\n          searchByName={setSearch}\n          tokenType={tokenType}\n          currencyName={selectedCurrency}\n        />\n        <ModalCurrency\n          show={modalCurrency}\n          tokenList={filteredTokenList}\n          handleClose={() => setModalCurrency(!modalCurrency)}\n          selectCurrency={onHandleSelectCurrency}\n          searchToken={handleSearchToken}\n          searchByName={setSearch}\n          tokenType={tokenType}\n          currencyName={selectedCurrency}\n        />\n\n        {/* Approve confirm Modal Start */}\n        <Modal centered scrollable={true} className=\"connect_wallet\" show={showSupplyModal} onHide={() => setShowSupplyModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>You will receive</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col className=\"baseToken_style\">\n                <ul>\n                  <li>\n                    <div className=\"row\">\n                      <h2>{tokenOneValue.toFixed(5)}</h2>\n                      <span>\n                        <img src={tokenOne.icon} alt=\"icon\" />\n                        <h2>{tokenOne.symbol}</h2>\n                      </span>\n                    </div>\n                    <div className=\"row\">\n                      <h2 className=\"plus\">+</h2>\n                    </div>\n                    <div className=\"row\">\n                      <h2>{tokenTwoValue.toFixed(5)}</h2>\n                      <span>\n                        <img src={tokenTwo.icon} alt=\"icon\" />\n                        <h2>{tokenTwo.symbol}</h2>\n                      </span>\n                    </div>\n                    <p>Output is estimated. If the price changes by more than {slippagePercentage}% your transaction will revert.</p>\n                  </li>\n                  <li>\n                    <li>{tokenOneCurrency} Deposit: <span> {tokenOneValue}</span></li>\n                    <li>{tokenTwoCurrency} Deposit:<span>{tokenTwoValue}</span> </li>\n                    <li>Price\n                      <p>{1}&nbsp;{tokenOneCurrency} = {calculateFractionRow('TK1')} <br />\n                        {1}&nbsp;{tokenTwoCurrency} = {calculateFractionRow('TK2')}</p></li>\n                  </li>\n                  \n                    <Button title={isUserConnected ? 'Confirm' : 'Unlock Wallet'}\n                      className=\"remove_liq_btn\"\n                      disabled={liquidityConfirmation} onClick={() => removeLiquidity()}\n                    />\n                  \n                </ul>\n              </Col>\n            </Row>\n          </Modal.Body>\n        </Modal>\n        {/* Approve confirm Modal End */}\n\n        {showTransactionModal && <TransactionalModal closeTransactionModal={closeTransactionModal} txHash={txHash} />}\n\n        {currentPairAddress &&\n          <Col className=\"totalPrice\">\n            <ul className=\"text-start\">\n              <li> <h4>LP TOKENS IN YOUR WALLET</h4> </li>\n            </ul>\n            <ul className=\"text-end\">\n              <li><p><img src={tokenOne.icon} alt=\"icon\" /> <img src={tokenTwo.icon} alt=\"icon\" /> {tokenOne.symbol}/{tokenTwo?.symbol}</p> <span>{liquidity}</span></li>\n              <li><p>{tokenOne.symbol}: </p><span>{tokenOneDeposit.toFixed(5)} </span></li>\n              <li><p>{tokenTwo?.symbol}:</p> <span>{tokenTwoDeposit.toFixed(5)}</span></li>\n            </ul>\n          </Col>}\n\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default RemoveLiquidity;\n"]},"metadata":{},"sourceType":"module"}