{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/Trade.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Tab, Tabs, Col, Row } from \"react-bootstrap\";\nimport Exchange from \"./Exchange\";\nimport Liquidity from \"././Liquidity\";\nimport { rootName } from \"../../constant\";\nimport \"./Trade.scss\";\nimport AddLiquidity from \"./AddLiquidity\";\nimport ImportPool from \"./ImportPool\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Trade = props => {\n  _s();\n\n  const {\n    match: {\n      params\n    },\n    history\n  } = props;\n  const {\n    tab,\n    fillter\n  } = params;\n  const [colLiquidity, setColLiquidity] = useState(1);\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const [lptoken, setLptoken] = useState(null);\n\n  const handleTab = data => {\n    if (data === \"Bridge\") {\n      const tab = window.open(\"https://www.binance.org/en/bridge?utm_source=Niob\", \"_blank\");\n      tab.focus();\n    } else history.push(`${rootName}/trade/${data}`);\n  };\n\n  const handleComponent = value => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n\n    setColLiquidity(value);\n  };\n\n  const handleAddLiquidity = lp => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n\n    setLptoken(lp);\n    history.push(`${rootName}/trade/liquidity/addLiquidity`);\n  };\n\n  const handleRemove = lp => {\n    // console.log('hitt');\n    // console.log('this is lp ==>>', lp);\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n\n    setLptoken(lp);\n  };\n\n  const [key, setKey] = useState(\"deutsch\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_wrap trade\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"swapScreen comnSection\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"smallContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center swap_title\",\n          children: \"Make a Swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comnBlk lang-blk\",\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                activeKey: key,\n                defaultActiveKey: \"english\",\n                id: \"tab-example\",\n                className: \"  lang-tab\",\n                onSelect: k => setKey(k),\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"english\",\n                  title: \"English\",\n                  className: \"lang-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"Important Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Never execute a swap if the offered value for the target currency does not correspond to the market price! If there is not enough liquidity available on NIOB Swap for the desired pair (for example BNB to DOT), the price cannot be met.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\" \", \"After entering both tokens you will see the summary of the exchange in the swap window.\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 23\n                    }, this), \" If the exchange gets still confirmed, the lost amount cannot be refunded! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 50\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\" \", \"USER IS SOLELY RESPONSIBLE FOR ANY LOSSES CAUSED BY LOW LIQUIDITY!\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"deutsch\",\n                  title: \"Deutsch\",\n                  className: \"lang-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"Wichtige Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Niemals einen Swap durchf\\xFChren wenn der angebotene Wert f\\xFCr die Zielw\\xE4hrung nicht dem Marktpreis entspricht! Sollte f\\xFCr das gew\\xFCnschte Paar (zum Beispiel BNB zu DOT) nicht gen\\xFCgend Liquidit\\xE4t auf der Exchange zur Verf\\xFCgung stehen, kann der Preis nicht eingehalten werden.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\" \", \"Nach der Eingabe beider Token seht ihr die Zusammenfassung des Exchange im Swap Fenster.\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\" \", \"Der Nutzer ist allein verantwortlich f\\xFCr Verluste, die durch geringe Liquidit\\xE4t entstehen!\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comnBlk\",\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                activeKey: tab,\n                defaultActiveKey: \"swap\",\n                id: \"uncontrolled-tab-example\",\n                className: \"mb-3\",\n                onSelect: handleTab,\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"exchange\",\n                  title: \"Swap\",\n                  children: /*#__PURE__*/_jsxDEV(Exchange, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"liquidity\",\n                  title: \"Liquidity\",\n                  children: fillter === \"addLiquidity\" ? /*#__PURE__*/_jsxDEV(AddLiquidity, {\n                    lptoken: lptoken\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this) : fillter === \"importPool\" ? /*#__PURE__*/_jsxDEV(ImportPool, {\n                    lptoken: lptoken\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Liquidity, {\n                    handleAddLiquidity: handleAddLiquidity,\n                    handleRemove: handleRemove,\n                    lptoken: lptoken\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Trade, \"HXFx7iVIe4ImsbHCW22rZ3ZWwe0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Trade;\nexport default Trade;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trade\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/Trade.js"],"names":["React","useState","Container","Tab","Tabs","Col","Row","Exchange","Liquidity","rootName","AddLiquidity","ImportPool","useSelector","toast","Trade","props","match","params","history","tab","fillter","colLiquidity","setColLiquidity","isUserConnected","state","persist","lptoken","setLptoken","handleTab","data","window","open","focus","push","handleComponent","value","error","handleAddLiquidity","lp","handleRemove","key","setKey","k"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Tab, Tabs, Col, Row } from \"react-bootstrap\";\n\nimport Exchange from \"./Exchange\";\nimport Liquidity from \"././Liquidity\";\nimport { rootName } from \"../../constant\";\nimport \"./Trade.scss\";\nimport AddLiquidity from \"./AddLiquidity\";\nimport ImportPool from \"./ImportPool\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"../../components/Toast/Toast\";\n\nconst Trade = (props) => {\n  const {\n    match: { params },\n    history,\n  } = props;\n  const { tab, fillter } = params;\n  const [colLiquidity, setColLiquidity] = useState(1);\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const [lptoken, setLptoken] = useState(null);\n\n  const handleTab = (data) => {\n    if (data === \"Bridge\") {\n      const tab = window.open(\n        \"https://www.binance.org/en/bridge?utm_source=Niob\",\n        \"_blank\"\n      );\n      tab.focus();\n    } else history.push(`${rootName}/trade/${data}`);\n  };\n\n  const handleComponent = (value) => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n    setColLiquidity(value);\n  };\n  const handleAddLiquidity = (lp) => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n    setLptoken(lp);\n    history.push(`${rootName}/trade/liquidity/addLiquidity`);\n  };\n  const handleRemove = (lp) => {\n    // console.log('hitt');\n    // console.log('this is lp ==>>', lp);\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n    setLptoken(lp);\n  };\n  const [key, setKey] = useState(\"deutsch\");\n  return (\n    <div className=\"container_wrap trade\">\n      <Container fluid className=\"swapScreen comnSection\">\n        <Container className=\"smallContainer\">\n          <h2 className=\"text-center swap_title\">Make a Swap</h2>\n          <Row>\n            <Col md={6} lg={4}>\n              <div className=\"comnBlk lang-blk\">\n                <Tabs\n                  activeKey={key}\n                  defaultActiveKey=\"english\"\n                  id=\"tab-example\"\n                  className=\"  lang-tab\"\n                  onSelect={(k) => setKey(k)}\n                >\n                  <Tab\n                    eventKey=\"english\"\n                    title=\"English\"\n                    className=\"lang-content\"\n                  >\n                    <h2>Important Information</h2>\n                    <p>\n                      Never execute a swap if the offered value for the target\n                      currency does not correspond to the market price! If there\n                      is not enough liquidity available on NIOB Swap for the\n                      desired pair (for example BNB to DOT), the price cannot be\n                      met.\n                      <br />\n                      <br />{\" \"}\n                      <strong>\n                        {\" \"}\n                        After entering both tokens you will see the summary of\n                        the exchange in the swap window.\n                      </strong>\n                      <br />\n                      <br /> If the exchange gets still confirmed, the lost\n                      amount cannot be refunded! <br />\n                      <br />\n                      <strong>\n                        {\" \"}\n                        USER IS SOLELY RESPONSIBLE FOR ANY LOSSES CAUSED BY LOW\n                        LIQUIDITY!\n                      </strong>\n                    </p>\n                  </Tab>\n                  <Tab\n                    eventKey=\"deutsch\"\n                    title=\"Deutsch\"\n                    className=\"lang-content\"\n                  >\n                    <h2>Wichtige Information</h2>\n                    <p>\n                      Niemals einen Swap durchführen wenn der angebotene Wert\n                      für die Zielwährung nicht dem Marktpreis entspricht!\n                      Sollte für das gewünschte Paar (zum Beispiel BNB zu DOT)\n                      nicht genügend Liquidität auf der Exchange zur Verfügung\n                      stehen, kann der Preis nicht eingehalten werden.\n                      <br />\n                      <br />{\" \"}\n                      <strong>\n                        {\" \"}\n                        Nach der Eingabe beider Token seht ihr die\n                        Zusammenfassung des Exchange im Swap Fenster.\n                      </strong>\n                      <br />\n                      <br />{\" \"}\n                      <strong>\n                        {\" \"}\n                        Der Nutzer ist allein verantwortlich für Verluste, die\n                        durch geringe Liquidität entstehen!{\" \"}\n                      </strong>{\" \"}\n                      <br />\n                      <br />\n                    </p>\n                  </Tab>\n                </Tabs>\n              </div>\n            </Col>\n            <Col md={6}>\n              <div className=\"comnBlk\">\n                <Tabs\n                  activeKey={tab}\n                  defaultActiveKey=\"swap\"\n                  id=\"uncontrolled-tab-example\"\n                  className=\"mb-3\"\n                  onSelect={handleTab}\n                >\n                  <Tab eventKey=\"exchange\" title=\"Swap\">\n                    <Exchange />\n                  </Tab>\n                  <Tab eventKey=\"liquidity\" title=\"Liquidity\">\n                    {fillter === \"addLiquidity\" ? (\n                      <AddLiquidity lptoken={lptoken} />\n                    ) : fillter === \"importPool\" ? (\n                      <ImportPool lptoken={lptoken} />\n                    ) : (\n                      <Liquidity\n                        handleAddLiquidity={handleAddLiquidity}\n                        handleRemove={handleRemove}\n                        lptoken={lptoken}\n                      />\n                    )}\n                  </Tab>\n                  {/* <Tab eventKey=\"Bridge\" title=\"Bridge\">Bridge</Tab> */}\n                </Tabs>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    </div>\n  );\n};\n\nexport default Trade;\n"]},"metadata":{},"sourceType":"module"}