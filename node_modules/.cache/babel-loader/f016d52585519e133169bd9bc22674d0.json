{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/components/Modal/ModalCurrency/ModalCurrency.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Row, Modal } from \"react-bootstrap\";\nimport \"./ModalCurrencyStyle.scss\";\nimport CoinItem from \"../../coinItem/CoinItem\";\nimport { useDispatch } from \"react-redux\";\nimport { tokenListAdd, tokenListDel } from \"../../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalCurrency = ({\n  show,\n  handleClose,\n  tokenList,\n  searchByName,\n  searchToken,\n  selectCurrency,\n  tokenType,\n  currencyName\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [values, setValues] = useState({\n    tokenSearch: \"\"\n  }); // Set Token Search Input Value and Pass to Parent Component (Add Liquidity)\n\n  const handleChange = (e, name) => {\n    searchByName(e.target.value);\n    setValues({ ...values,\n      [name]: e.target.value\n    });\n  };\n\n  const [isAdded, setTokenAdd] = useState(true);\n\n  const handleTokenList = data => {\n    data.isAdd = false;\n    data.isDel = true;\n    dispatch(tokenListAdd(data));\n    setTokenAdd(false);\n  };\n\n  const handleRemoveTokenList = async data => {\n    dispatch(tokenListDel(data));\n    searchByName(\"\");\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    if (!show) {\n      setValues({\n        tokenSearch: \"\"\n      });\n    }\n\n    return () => {// cleanup function here\n    };\n  }, [show, searchByName]);\n  console.log(\"aja token list\", toke);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    scrollable: true,\n    className: \"selectCurrency_modal\",\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Select a Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradiantWrap\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"searchInput_Style\",\n            placeholder: \"Search name or paste address\",\n            name: \"tokenSearch\",\n            onChange: e => searchToken(e.target.value),\n            onPaste: e => searchToken(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tokenName\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Token Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"coinListBlockStyle\",\n        children: tokenList && (tokenList === null || tokenList === void 0 ? void 0 : tokenList.length) ? tokenList.map((token, index) => /*#__PURE__*/_jsxDEV(Col, {\n          children: currencyName === (token === null || token === void 0 ? void 0 : token.symbol) ? /*#__PURE__*/_jsxDEV(CoinItem, {\n            className: \"active\",\n            iconImage: token.icon,\n            title: token.name,\n            tokenDetails: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(CoinItem, {\n            onClick: () => selectCurrency(token, tokenType),\n            iconImage: token === null || token === void 0 ? void 0 : token.icon,\n            title: token === null || token === void 0 ? void 0 : token.name,\n            tokenDetails: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: \"No results found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalCurrency, \"2qokP+Jq/Sxi08Gm6WO3DKvbev4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModalCurrency;\nexport default ModalCurrency;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCurrency\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/components/Modal/ModalCurrency/ModalCurrency.js"],"names":["React","useEffect","useState","Col","Row","Modal","CoinItem","useDispatch","tokenListAdd","tokenListDel","ModalCurrency","show","handleClose","tokenList","searchByName","searchToken","selectCurrency","tokenType","currencyName","dispatch","values","setValues","tokenSearch","handleChange","e","name","target","value","isAdded","setTokenAdd","handleTokenList","data","isAdd","isDel","handleRemoveTokenList","window","location","reload","console","log","toke","length","map","token","index","symbol","icon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,QAAgC,iBAAhC;AACA,OAAO,2BAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,wBAA3C;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,IADqB;AAErBC,EAAAA,WAFqB;AAGrBC,EAAAA,SAHqB;AAIrBC,EAAAA,YAJqB;AAKrBC,EAAAA,WALqB;AAMrBC,EAAAA,cANqB;AAOrBC,EAAAA,SAPqB;AAQrBC,EAAAA;AARqB,CAAD,KAShB;AAAA;;AACJ,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC;AAAEoB,IAAAA,WAAW,EAAE;AAAf,GAAD,CAApC,CAFI,CAIJ;;AACA,QAAMC,YAAY,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAChCX,IAAAA,YAAY,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAAZ;AACAN,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACK,IAAD,GAAQD,CAAC,CAACE,MAAF,CAASC;AAA9B,KAAD,CAAT;AACD,GAHD;;AAKA,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyB3B,QAAQ,CAAC,IAAD,CAAvC;;AACA,QAAM4B,eAAe,GAAIC,IAAD,IAAU;AAChCA,IAAAA,IAAI,CAACC,KAAL,GAAa,KAAb;AACAD,IAAAA,IAAI,CAACE,KAAL,GAAa,IAAb;AACAd,IAAAA,QAAQ,CAACX,YAAY,CAACuB,IAAD,CAAb,CAAR;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GALD;;AAMA,QAAMK,qBAAqB,GAAG,MAAOH,IAAP,IAAgB;AAC5CZ,IAAAA,QAAQ,CAACV,YAAY,CAACsB,IAAD,CAAb,CAAR;AACAjB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAqB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAJD;;AAMApC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,IAAL,EAAW;AACTU,MAAAA,SAAS,CAAC;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAD,CAAT;AACD;;AACD,WAAO,MAAM,CACX;AACD,KAFD;AAGD,GAPQ,EAON,CAACX,IAAD,EAAOG,YAAP,CAPM,CAAT;AAQFwB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BC,IAA7B;AACE,sBACE,QAAC,KAAD;AACE,IAAA,UAAU,EAAE,IADd;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,IAAA,IAAI,EAAE7B,IAHR;AAIE,IAAA,MAAM,EAAEC,WAJV;AAKE,IAAA,QAAQ,MALV;AAAA,4BAOE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,mBADZ;AAEE,YAAA,WAAW,EAAC,8BAFd;AAGE,YAAA,IAAI,EAAC,aAHP;AAIE,YAAA,QAAQ,EAAGY,CAAD,IAAOT,WAAW,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAJ9B;AAKE,YAAA,OAAO,EAAGH,CAAD,IAAOT,WAAW,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eA4BE,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACGd,SAAS,KAAIA,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAE4B,MAAf,CAAT,GACC5B,SAAS,CAAC6B,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,kBACZ,QAAC,GAAD;AAAA,oBACG1B,YAAY,MAAKyB,KAAL,aAAKA,KAAL,uBAAKA,KAAK,CAAEE,MAAZ,CAAZ,gBACC,QAAC,QAAD;AACE,YAAA,SAAS,EAAC,QADZ;AAEE,YAAA,SAAS,EAAEF,KAAK,CAACG,IAFnB;AAGE,YAAA,KAAK,EAAEH,KAAK,CAAClB,IAHf;AAIE,YAAA,YAAY,EAAEkB;AAJhB;AAAA;AAAA;AAAA;AAAA,kBADD,gBAQC,QAAC,QAAD;AACE,YAAA,OAAO,EAAE,MAAM3B,cAAc,CAAC2B,KAAD,EAAQ1B,SAAR,CAD/B;AAEE,YAAA,SAAS,EAAE0B,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEG,IAFpB;AAGE,YAAA,KAAK,EAAEH,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAElB,IAHhB;AAIE,YAAA,YAAY,EAAEkB;AAJhB;AAAA;AAAA;AAAA;AAAA;AATJ,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,gBAqBC;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD,CAnGD;;GAAMlC,a;UAUaH,W;;;KAVbG,a;AAqGN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Modal } from \"react-bootstrap\";\nimport \"./ModalCurrencyStyle.scss\";\nimport CoinItem from \"../../coinItem/CoinItem\";\nimport { useDispatch } from \"react-redux\";\nimport { tokenListAdd, tokenListDel } from \"../../../redux/actions\";\n\nconst ModalCurrency = ({\n  show,\n  handleClose,\n  tokenList,\n  searchByName,\n  searchToken,\n  selectCurrency,\n  tokenType,\n  currencyName,\n}) => {\n  const dispatch = useDispatch();\n  const [values, setValues] = useState({ tokenSearch: \"\" });\n\n  // Set Token Search Input Value and Pass to Parent Component (Add Liquidity)\n  const handleChange = (e, name) => {\n    searchByName(e.target.value);\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const [isAdded, setTokenAdd] = useState(true);\n  const handleTokenList = (data) => {\n    data.isAdd = false;\n    data.isDel = true;\n    dispatch(tokenListAdd(data));\n    setTokenAdd(false);\n  };\n  const handleRemoveTokenList = async (data) => {\n    dispatch(tokenListDel(data));\n    searchByName(\"\");\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    if (!show) {\n      setValues({ tokenSearch: \"\" });\n    }\n    return () => {\n      // cleanup function here\n    };\n  }, [show, searchByName]);\nconsole.log(\"aja token list\",toke)\n  return (\n    <Modal\n      scrollable={true}\n      className=\"selectCurrency_modal\"\n      show={show}\n      onHide={handleClose}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Select a Token</Modal.Title>\n      </Modal.Header>\n      <Row>\n        <Col>\n          <div className=\"gradiantWrap\">\n            <input\n              className=\"searchInput_Style\"\n              placeholder=\"Search name or paste address\"\n              name=\"tokenSearch\"\n              onChange={(e) => searchToken(e.target.value)}\n              onPaste={(e) => searchToken(e.target.value)}\n            />\n          </div>\n          <div className=\"tokenName\">\n            <h4>Token Name</h4>\n            <hr />\n          </div>\n        </Col>\n      </Row>\n\n      <Modal.Body>\n        <Row className=\"coinListBlockStyle\">\n          {tokenList && tokenList?.length ? (\n            tokenList.map((token, index) => (\n              <Col key={index}>\n                {currencyName === token?.symbol ? (\n                  <CoinItem\n                    className=\"active\"\n                    iconImage={token.icon}\n                    title={token.name}\n                    tokenDetails={token}\n                  />\n                ) : (\n                  <CoinItem\n                    onClick={() => selectCurrency(token, tokenType)}\n                    iconImage={token?.icon}\n                    title={token?.name}\n                    tokenDetails={token}\n                  />\n                )}\n              </Col>\n            ))\n          ) : (\n            <div className=\"\">No results found.</div>\n          )}\n        </Row>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default ModalCurrency;\n"]},"metadata":{},"sourceType":"module"}