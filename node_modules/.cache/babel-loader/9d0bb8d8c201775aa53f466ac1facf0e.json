{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/nm/SaitaSwap/src/components/ConnectWallet/ConnectWallet.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Col, Row, Modal, Button } from 'react-bootstrap';\nimport './ConnectWallet.scss';\nimport { useDispatch } from \"react-redux\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { login } from \"../../redux/actions\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport iconMatamask from '../../assets/images/metamask_icon.png';\nimport iconCoinbase from \"../../assets/images/coinbase_icon.svg\";\nimport iconWallet from \"../../assets/images/wallet_icon.svg\";\nimport TokenPocket from '../../assets/images/tp.png';\nimport TrustWallet from '../../assets/images/trust-wallet.png';\nimport Binance from '../../assets/images/Binance-chain.png';\nimport MathWallet from '../../assets/images/mathwallet.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConnectWallet = ({\n  show,\n  handleClose\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const loginCall = async (walletType, type) => {\n    try {\n      if (walletType === 'BinanceChain') {\n        const account = await ContractServices.isBinanceChainInstalled();\n\n        if (account) {\n          dispatch(login({\n            account,\n            walletType\n          }));\n          handleClose(false);\n          window.location.reload();\n        }\n      } else if (walletType === 'Walletconnect') {\n        try {\n          const provider = new WalletConnectProvider({\n            //infuraId: \"8570afa4d18b4c5d9cb3a629b08de069\",\n            rpc: {\n              97: 'https://data-seed-prebsc-2-s3.binance.org:8545/',\n              56: \"https://bsc-dataseed.binance.org/\"\n            },\n            chainId: 56,\n            network: \"binance\",\n            qrcode: true,\n            qrcodeModalOptions: {\n              mobileLinks: [\"rainbow\", \"metamask\", \"argent\", \"trust\", \"imtoken\", \"pillar\"],\n              desktopLinks: [\"encrypted ink\"]\n            }\n          });\n          const results = await provider.enable();\n          provider.on('accountsChanged', async accounts => {\n            setTimeout(function () {\n              window.location.reload();\n            }, 500);\n            let account = accounts[0];\n            dispatch(login({\n              account,\n              walletType\n            }));\n            handleClose(false); //return;\n            // window.location.reload();\n          });\n          await ContractServices.callWeb3ForWalletConnect(provider);\n          const account = await provider.accounts[0];\n          dispatch(login({\n            account,\n            walletType\n          }));\n          handleClose(false); //  window.location.reload();\n        } catch (error) {\n          console.log(error, 'wallet error');\n        }\n      } else {\n        const account = await ContractServices.isMetamaskInstalled(type);\n\n        if (account) {\n          dispatch(login({\n            account,\n            walletType\n          }));\n          handleClose(false); // window.location.reload();\n        }\n      }\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    centered: true,\n    scrollable: true,\n    className: \"connect_wallet\",\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Connect to a wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"baseToken_style token_strut\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => loginCall('Metamask', 'Metamask'),\n                children: [\"MetaMask\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconMatamask\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 105\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 99\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: [\"CoinBase Wallet\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconCoinbase\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 62\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 56\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: [\"WalletConnect\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconWallet\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 60\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 54\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: [\"TrustWallet\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: TrustWallet\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 52\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: [\"MathWallet\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: MathWallet\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 51\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: [\"TokenPocket\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: TokenPocket\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 52\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: [\"Binance Chain Wallet\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Binance\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 67\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 61\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConnectWallet, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ConnectWallet;\nexport default ConnectWallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectWallet\");","map":{"version":3,"sources":["/home/user/Desktop/nm/SaitaSwap/src/components/ConnectWallet/ConnectWallet.js"],"names":["React","Col","Row","Modal","Button","useDispatch","ContractServices","login","toast","WalletConnectProvider","iconMatamask","TokenPocket","TrustWallet","Binance","MathWallet","ConnectWallet","show","handleClose","dispatch","loginCall","walletType","type","account","isBinanceChainInstalled","window","location","reload","provider","rpc","chainId","network","qrcode","qrcodeModalOptions","mobileLinks","desktopLinks","results","enable","on","accounts","setTimeout","callWeb3ForWalletConnect","error","console","log","isMetamaskInstalled","err","message","iconCoinbase","iconWallet"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Col, Row, Modal, Button } from 'react-bootstrap'\nimport './ConnectWallet.scss'\nimport { useDispatch } from \"react-redux\"\nimport { ContractServices } from \"../../services/ContractServices\"\nimport { login } from \"../../redux/actions\"\nimport { toast } from \"../../components/Toast/Toast\";\nimport WalletConnectProvider from '@walletconnect/web3-provider'\n\nimport iconMatamask from '../../assets/images/metamask_icon.png'\nimport iconCoinbase from '../../assets/images/coinbase_icon.svg'\nimport iconWallet from '../../assets/images/wallet_icon.svg'\nimport TokenPocket from '../../assets/images/tp.png'\nimport TrustWallet from '../../assets/images/trust-wallet.png'\nimport Binance from '../../assets/images/Binance-chain.png'\nimport MathWallet from '../../assets/images/mathwallet.png'\n\nconst ConnectWallet = ({ show, handleClose }) => {\n    const dispatch = useDispatch();\n\n    const loginCall = async (walletType, type) => {\n        try {\n            if (walletType === 'BinanceChain') {\n                const account = await ContractServices.isBinanceChainInstalled();\n                if (account) {\n                    dispatch(login({ account, walletType }));\n                    handleClose(false);\n                    window.location.reload();\n                }\n            } else if (walletType === 'Walletconnect') {\n                try {\n                    const provider = new WalletConnectProvider({\n                        //infuraId: \"8570afa4d18b4c5d9cb3a629b08de069\",\n                        rpc: {\n                            97: 'https://data-seed-prebsc-2-s3.binance.org:8545/',\n                            56: \"https://bsc-dataseed.binance.org/\",\n                        },\n                        chainId: 56,\n                        network: \"binance\",\n                        qrcode: true,\n                        qrcodeModalOptions: {\n                            mobileLinks: [\n                                \"rainbow\",\n                                \"metamask\",\n                                \"argent\",\n                                \"trust\",\n                                \"imtoken\",\n                                \"pillar\",\n                            ],\n                            desktopLinks: [\n                                \"encrypted ink\",\n                            ]\n                        }\n                    });\n                    const results = await provider.enable();\n\n                    provider.on('accountsChanged', async (accounts) => {\n                        setTimeout(function () {\n                            window.location.reload()\n                        }, 500)\n                        let account = accounts[0]\n                        dispatch(login({ account, walletType }));\n                        handleClose(false);\n                        //return;\n                        // window.location.reload();\n                    });\n                    await ContractServices.callWeb3ForWalletConnect(provider);\n                    const account = await provider.accounts[0];\n                    dispatch(login({ account, walletType }));\n                    handleClose(false);\n                    //  window.location.reload();\n                } catch (error) {\n                    console.log(error, 'wallet error')\n                }\n\n            } else {\n                const account = await ContractServices.isMetamaskInstalled(type);\n                if (account) {\n                    dispatch(login({ account, walletType }));\n                    handleClose(false);\n                    // window.location.reload();\n                }\n            }\n        } catch (err) {\n            toast.error(err.message);\n        }\n    }\n\n    return (\n        <Modal centered scrollable={true} className=\"connect_wallet\" show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Connect to a wallet</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col className=\"baseToken_style token_strut\">\n                        <ul>\n                            <li><Button onClick={() => loginCall('Metamask', 'Metamask')}>MetaMask<span><img src={iconMatamask} /></span> </Button></li>\n                            <li><Button>CoinBase Wallet<span><img src={iconCoinbase} /></span> </Button></li>\n                            <li><Button>WalletConnect<span><img src={iconWallet} /></span> </Button></li>\n                            <li><Button>TrustWallet<span><img src={TrustWallet} /></span> </Button></li>\n                            <li><Button>MathWallet<span><img src={MathWallet} /></span> </Button></li>\n                            <li><Button>TokenPocket<span><img src={TokenPocket} /></span> </Button></li>\n                            <li><Button>Binance Chain Wallet<span><img src={Binance} /></span> </Button></li>\n                        </ul>\n                    </Col>\n                </Row>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default ConnectWallet;\n"]},"metadata":{},"sourceType":"module"}