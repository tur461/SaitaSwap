[{"/home/user/Desktop/nm/SaitaSwap/src/index.js":"1","/home/user/Desktop/nm/SaitaSwap/src/reportWebVitals.js":"2","/home/user/Desktop/nm/SaitaSwap/src/App.js":"3","/home/user/Desktop/nm/SaitaSwap/src/Application.js":"4","/home/user/Desktop/nm/SaitaSwap/src/redux/store.js":"5","/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/history.js":"6","/home/user/Desktop/nm/SaitaSwap/src/constant.js":"7","/home/user/Desktop/nm/SaitaSwap/src/Confirmation.js":"8","/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/index.js":"9","/home/user/Desktop/nm/SaitaSwap/src/components/LoaderComponent/LoaderComponent.js":"10","/home/user/Desktop/nm/SaitaSwap/src/routes/PublicRoutes/PublicRoutes.js":"11","/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/loading.js":"12","/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/persist.js":"13","/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/register.js":"14","/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/security.js":"15","/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/farm.js":"16","/home/user/Desktop/nm/SaitaSwap/src/components/Header/Header.js":"17","/home/user/Desktop/nm/SaitaSwap/src/components/Sidebar/Sidebar.js":"18","/home/user/Desktop/nm/SaitaSwap/src/components/Footer/Footer.js":"19","/home/user/Desktop/nm/SaitaSwap/src/pages/Referral/Referral.js":"20","/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/Trade.js":"21","/home/user/Desktop/nm/SaitaSwap/src/pages/FarmPlanets/FarmPlanets.js":"22","/home/user/Desktop/nm/SaitaSwap/src/pages/PoolGalaxy/PoolGalaxy.js":"23","/home/user/Desktop/nm/SaitaSwap/src/pages/Home/Home.js":"24","/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/AddLiquidity.js":"25","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/index.js":"26","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/LoadingActions.js":"27","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/PersistActions.js":"28","/home/user/Desktop/nm/SaitaSwap/src/services/UserService.js":"29","/home/user/Desktop/nm/SaitaSwap/src/services/ContractServices.js":"30","/home/user/Desktop/nm/SaitaSwap/src/services/ExchangeService.js":"31","/home/user/Desktop/nm/SaitaSwap/src/components/Button/Button.js":"32","/home/user/Desktop/nm/SaitaSwap/src/components/ConnectWallet/ConnectWallet.js":"33","/home/user/Desktop/nm/SaitaSwap/src/components/ProfileModal/ProfileModal.js":"34","/home/user/Desktop/nm/SaitaSwap/src/services/ReferralsServices.js":"35","/home/user/Desktop/nm/SaitaSwap/src/hooks/getWindowDimensions.js":"36","/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/Exchange.js":"37","/home/user/Desktop/nm/SaitaSwap/src/components/ScrollTop/ScrollTop.js":"38","/home/user/Desktop/nm/SaitaSwap/src/components/Toast/Toast.js":"39","/home/user/Desktop/nm/SaitaSwap/src/components/RecentTransactions/RecentTransactions.js":"40","/home/user/Desktop/nm/SaitaSwap/src/components/SupplyModal/SupplyModal.js":"41","/home/user/Desktop/nm/SaitaSwap/src/components/buttonBack/ButtonBack.js":"42","/home/user/Desktop/nm/SaitaSwap/src/components/selectCoin/SelectCoin.js":"43","/home/user/Desktop/nm/SaitaSwap/src/components/Modal/ModalCurrency/ModalCurrency.js":"44","/home/user/Desktop/nm/SaitaSwap/src/components/Modal/SettingModal/SettingModal.js":"45","/home/user/Desktop/nm/SaitaSwap/src/components/cardCustom/CardCustom.js":"46","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/ExchangeActions.js":"47","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/tokenActions.js":"48","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/SecurityActions.js":"49","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/FarmAction.js":"50","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/RegisterActions.js":"51","/home/user/Desktop/nm/SaitaSwap/src/assets/tokens/index.js":"52","/home/user/Desktop/nm/SaitaSwap/src/services/Fetch.js":"53","/home/user/Desktop/nm/SaitaSwap/src/components/TransactionalModal/TransactionalModal.js":"54","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/AuthActions.js":"55","/home/user/Desktop/nm/SaitaSwap/src/services/FarmService.js":"56","/home/user/Desktop/nm/SaitaSwap/src/components/SwapModal/SwapModal.js":"57","/home/user/Desktop/nm/SaitaSwap/src/components/FarmCard/FarmCard.js":"58","/home/user/Desktop/nm/SaitaSwap/src/components/coinItem/CoinItem.js":"59","/home/user/Desktop/nm/SaitaSwap/src/components/ReturnInvest/ReturnInvest.js":"60","/home/user/Desktop/nm/SaitaSwap/src/components/GetLPToken/GetLPToken.js":"61","/home/user/Desktop/nm/SaitaSwap/src/components/GetLPToken/WithDrawLPToken.js":"62","/home/user/Desktop/nm/SaitaSwap/src/components/GalaxyCard/GalaxyCard.js":"63","/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/Liquidity.js":"64","/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/ImportPool.js":"65","/home/user/Desktop/nm/SaitaSwap/src/services/SecurityService.js":"66","/home/user/Desktop/nm/SaitaSwap/src/components/TransactionModal/TransactionModal.js":"67","/home/user/Desktop/nm/SaitaSwap/src/components/PlanetCard/PlanetCard.js":"68","/home/user/Desktop/nm/SaitaSwap/src/Helpers/storageHelper.js":"69","/home/user/Desktop/nm/SaitaSwap/src/components/Card/Card.js":"70","/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/TokenBalance.js":"71","/home/user/Desktop/nm/SaitaSwap/src/components/Modal/RemoveLiquidity/RemoveLiquidity.js":"72","/home/user/Desktop/nm/SaitaSwap/src/components/buttonLink/ButtonLink.js":"73","/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/RangeSlider.js":"74"},{"size":573,"mtime":1655813874000,"results":"75","hashOfConfig":"76"},{"size":362,"mtime":1655813606000,"results":"77","hashOfConfig":"76"},{"size":705,"mtime":1655813874000,"results":"78","hashOfConfig":"76"},{"size":1088,"mtime":1655813874000,"results":"79","hashOfConfig":"76"},{"size":1099,"mtime":1655813874000,"results":"80","hashOfConfig":"76"},{"size":94,"mtime":1655813874000,"results":"81","hashOfConfig":"76"},{"size":3253,"mtime":1655813874000,"results":"82","hashOfConfig":"76"},{"size":1067,"mtime":1656063010553,"results":"83","hashOfConfig":"76"},{"size":782,"mtime":1655813874000,"results":"84","hashOfConfig":"76"},{"size":708,"mtime":1655813874000,"results":"85","hashOfConfig":"76"},{"size":3257,"mtime":1656062911594,"results":"86","hashOfConfig":"76"},{"size":377,"mtime":1655813874000,"results":"87","hashOfConfig":"76"},{"size":2563,"mtime":1655816405483,"results":"88","hashOfConfig":"76"},{"size":431,"mtime":1655813874000,"results":"89","hashOfConfig":"76"},{"size":1336,"mtime":1655813874000,"results":"90","hashOfConfig":"76"},{"size":400,"mtime":1655813874000,"results":"91","hashOfConfig":"76"},{"size":3669,"mtime":1655813874000,"results":"92","hashOfConfig":"76"},{"size":8992,"mtime":1656063010557,"results":"93","hashOfConfig":"76"},{"size":3075,"mtime":1656063010557,"results":"94","hashOfConfig":"76"},{"size":6514,"mtime":1656063010557,"results":"95","hashOfConfig":"76"},{"size":6145,"mtime":1656062911594,"results":"96","hashOfConfig":"76"},{"size":18393,"mtime":1655817383294,"results":"97","hashOfConfig":"76"},{"size":20467,"mtime":1655813874000,"results":"98","hashOfConfig":"76"},{"size":30160,"mtime":1656063010557,"results":"99","hashOfConfig":"76"},{"size":33906,"mtime":1656062911594,"results":"100","hashOfConfig":"76"},{"size":264,"mtime":1655813874000,"results":"101","hashOfConfig":"76"},{"size":377,"mtime":1655813874000,"results":"102","hashOfConfig":"76"},{"size":3552,"mtime":1655816377399,"results":"103","hashOfConfig":"76"},{"size":706,"mtime":1655813874000,"results":"104","hashOfConfig":"76"},{"size":12682,"mtime":1656064804338,"results":"105","hashOfConfig":"76"},{"size":37117,"mtime":1656069471393,"results":"106","hashOfConfig":"76"},{"size":338,"mtime":1655813874000,"results":"107","hashOfConfig":"76"},{"size":5071,"mtime":1655813874000,"results":"108","hashOfConfig":"76"},{"size":2082,"mtime":1656070660757,"results":"109","hashOfConfig":"76"},{"size":1296,"mtime":1655813874000,"results":"110","hashOfConfig":"76"},{"size":581,"mtime":1655813874000,"results":"111","hashOfConfig":"76"},{"size":37575,"mtime":1656076395024,"results":"112","hashOfConfig":"76"},{"size":950,"mtime":1655813606000,"results":"113","hashOfConfig":"76"},{"size":511,"mtime":1655813874000,"results":"114","hashOfConfig":"76"},{"size":3561,"mtime":1655813874000,"results":"115","hashOfConfig":"76"},{"size":2840,"mtime":1655813874000,"results":"116","hashOfConfig":"76"},{"size":439,"mtime":1655813606000,"results":"117","hashOfConfig":"76"},{"size":1590,"mtime":1655976007150,"results":"118","hashOfConfig":"76"},{"size":2962,"mtime":1656062911590,"results":"119","hashOfConfig":"76"},{"size":4978,"mtime":1655813874000,"results":"120","hashOfConfig":"76"},{"size":270,"mtime":1655813606000,"results":"121","hashOfConfig":"76"},{"size":9820,"mtime":1656068557291,"results":"122","hashOfConfig":"76"},{"size":493,"mtime":1655813874000,"results":"123","hashOfConfig":"76"},{"size":7423,"mtime":1655813874000,"results":"124","hashOfConfig":"76"},{"size":1,"mtime":1655813874000,"results":"125","hashOfConfig":"76"},{"size":1660,"mtime":1655813874000,"results":"126","hashOfConfig":"76"},{"size":10560,"mtime":1656075418561,"results":"127","hashOfConfig":"76"},{"size":1569,"mtime":1655813874000,"results":"128","hashOfConfig":"76"},{"size":1400,"mtime":1656073090431,"results":"129","hashOfConfig":"76"},{"size":733,"mtime":1655813874000,"results":"130","hashOfConfig":"76"},{"size":8488,"mtime":1655813874000,"results":"131","hashOfConfig":"76"},{"size":2084,"mtime":1655813874000,"results":"132","hashOfConfig":"76"},{"size":1162,"mtime":1655813874000,"results":"133","hashOfConfig":"76"},{"size":360,"mtime":1655813874000,"results":"134","hashOfConfig":"76"},{"size":4118,"mtime":1655813874000,"results":"135","hashOfConfig":"76"},{"size":2475,"mtime":1655813874000,"results":"136","hashOfConfig":"76"},{"size":3746,"mtime":1655813874000,"results":"137","hashOfConfig":"76"},{"size":18408,"mtime":1656063010557,"results":"138","hashOfConfig":"76"},{"size":6576,"mtime":1656062911594,"results":"139","hashOfConfig":"76"},{"size":8798,"mtime":1656063475029,"results":"140","hashOfConfig":"76"},{"size":2181,"mtime":1655813874000,"results":"141","hashOfConfig":"76"},{"size":1645,"mtime":1656073098199,"results":"142","hashOfConfig":"76"},{"size":22273,"mtime":1655818868048,"results":"143","hashOfConfig":"76"},{"size":637,"mtime":1655813874000,"results":"144","hashOfConfig":"76"},{"size":192,"mtime":1655813874000,"results":"145","hashOfConfig":"76"},{"size":1048,"mtime":1655813874000,"results":"146","hashOfConfig":"76"},{"size":33343,"mtime":1656073210315,"results":"147","hashOfConfig":"76"},{"size":309,"mtime":1655813606000,"results":"148","hashOfConfig":"76"},{"size":729,"mtime":1655813874000,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"153cyvs",{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"152"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"152"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"152"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"152"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":84,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"152"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"152"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"152"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"152"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"152"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"152"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"152"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"152"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"152"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"152"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"152"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"152"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"152"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"152"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"/home/user/Desktop/nm/SaitaSwap/src/index.js",[],["320","321"],"/home/user/Desktop/nm/SaitaSwap/src/reportWebVitals.js",[],"/home/user/Desktop/nm/SaitaSwap/src/App.js",[],"/home/user/Desktop/nm/SaitaSwap/src/Application.js",["322","323","324"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PublicRoutes from \"./routes/PublicRoutes/PublicRoutes\";\nimport { rootName } from \"./constant\";\nimport LoaderComponent from \"./components/LoaderComponent/LoaderComponent\";\nimport Confirmation from \"./Confirmation\";\nimport { useSelector } from \"react-redux\";\n\nconst Application = () => {\n    // const hasAccess = useSelector(state => state.persist.hasAccess);\n\n    return (\n        // <>\n            // {hasAccess === false ?\n                // <> <Confirmation /> </>\n                // :\n                <>\n                    <LoaderComponent></LoaderComponent>\n                    <Router>\n                        <Switch>\n                            {/* <AuthGuard path={`${rootName}/auth`} component={PrivateRoutes} /> */}\n                            <Route path={`${rootName}/`} component={PublicRoutes} />\n                        </Switch>\n                    </Router>\n                </>\n            // }\n        // </>\n    )\n}\n\nexport default Application\n","/home/user/Desktop/nm/SaitaSwap/src/redux/store.js",[],"/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/history.js",[],"/home/user/Desktop/nm/SaitaSwap/src/constant.js",["325","326","327","328"],"export const rootName = \"\";\nexport const HOME_ROUTE = process.env.REACT_APP_HOME_ROUTE;\nexport const API_HOST = process.env.REACT_APP_API_URL;\nexport const CAPTCHA_KEY = process.env.REACT_APP_GOOGLE_CAPTCHA_KEY;\nexport const BSC_SCAN = process.env.REACT_APP_BSC_SCAN;\nexport const NETWORK_CHAIN_NAME = process.env.REACT_APP_NETWORK_CHAIN_NAME;\nexport const NETWORK_RPC_URL = process.env.REACT_APP_NETWORK_RPC_URL;\nexport const NETWORK_LINK = process.env.REACT_APP_NETWORK_LINK;\nexport const NETWORK_VERSION = process.env.REACT_APP_NETWORK_VERSION;\nexport const NETWORK_CHAIN_ID = process.env.REACT_APP_NETWORK_CHAIN_ID;\nexport const NETWORK_NATIVE_CURRENCY_NAME = process.env.REACT_APP_NETWORK_NATIVE_CURRENCY_NAME;\nexport const NETWORK_NATIVE_CURRENCY_SYMBOL = process.env.REACT_APP_NETWORK_NATIVE_CURRENCY_SYMBOL;\nexport const NETWORK_NATIVE_CURRENCY_DECIMALS = process.env.REACT_APP_NETWORK_NATIVE_CURRENCY_DECIMALS;\nexport const globalResErrMsg =\n  \"Woops something went wrong, Please try again.\";\nexport const SUCCESS_200 = 200;\nexport const BAD_REQUEST = 400;\nexport const UNAUTHORISED = 401;\nexport const AUTH_TOKEN_KEY = \"api-access-token\";\nexport const PASSPORT_FRONT = 0;\nexport const PASSPORT_BACK = 4;\nexport const LICENSE_FRONT = 2;\nexport const LICENSE_BACK = 3;\nexport const NATIONAL_ID = 1;\nexport const KYC_SUBMITTED = 0;\nexport const KYC_APPROVED = 1;\nexport const KYC_DECLINED = 2;\nexport const KYC_RE_SUBMITTED = 3;\nexport const LIQUIDITY_PROVIDER_FEE = 0.2;\nexport const DOCS_LINK = 'https://docs.anchorswap.finance';\nexport const TWITTER_LINK = 'https://twitter.com/AnchorSwap';\nexport const TELEGRAM_LINK = 'https://t.me/joinchat/KP-_HKro73ViZTZk';\nexport const AUDIT_LINK = 'https://docs.anchorswap.finance/audit/';\n\n\nexport const isMetamakConnected = async () => {\n  const { ethereum } = window;\n  const result = Boolean(ethereum && ethereum.isMetaMask);\n  try {\n    if (result) {\n      const chain = await ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: NETWORK_CHAIN_ID }],\n      });\n      return true;\n    } else {\n      window.alert(`Install Metamask extension first!`);\n      window.open('https://metamask.io/', '_blank');\n      return false;\n    }\n  } catch (error) {\n    if (error?.code === 4902) {\n      try {\n        const addChain = await ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: await window.ethereum.chainId,\n            chainName: NETWORK_CHAIN_NAME,\n            nativeCurrency: {\n              name: NETWORK_NATIVE_CURRENCY_NAME,\n              symbol: NETWORK_NATIVE_CURRENCY_SYMBOL,\n              decimals: Number(NETWORK_NATIVE_CURRENCY_DECIMALS)\n            },\n            rpcUrls: [NETWORK_RPC_URL],\n            blockExplorerUrls: [NETWORK_LINK]\n          }],\n        });\n\n        return true;;\n\n      } catch (error) {\n        return false;\n      }\n    }\n    if (error?.code === 4001) {\n      return false;\n    }\n    throw error;\n  }\n\n}\n\nexport const addCommas = (nStr) => {\n  nStr += '';\n  let x = nStr.split('.');\n  let x1 = x[0];\n  let x2 = x.length > 1 ? '.' + x[1] : '';\n  let rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n  }\n  return x1 + x2;\n}\n\n","/home/user/Desktop/nm/SaitaSwap/src/Confirmation.js",["329"],"/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/index.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/LoaderComponent/LoaderComponent.js",[],"/home/user/Desktop/nm/SaitaSwap/src/routes/PublicRoutes/PublicRoutes.js",["330","331","332","333"],"/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/loading.js",[],"/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/persist.js",[],"/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/register.js",["334"],"import { UserService } from \"../../services/UserService\";\nimport { actionTypes } from \"../actions\";\n\nconst initialState = {\n  email: \"\",\n  captcha: \"\"\n};\n\nconst register = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.REGISTER_FORM_UPDATE:\n      return {\n\n        ...state, [action.payload.prop]: action.payload.value\n\n      };\n\n\n\n    default:\n      return state;\n  }\n}\nexport default register;\n","/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/security.js",[],"/home/user/Desktop/nm/SaitaSwap/src/redux/reducers/farm.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/Header/Header.js",["335","336","337"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport './Header.scss'\nimport { Link } from 'react-router-dom'\nimport IconToggle from '../../assets/images/menu_toggle_icon.png'\nimport Iconmenu from '../../assets/images/wrap-menu.png'\nimport Button from \"../Button/Button\";\nimport ConnectWallet from \"../ConnectWallet/ConnectWallet\";\nimport ProfileModal from \"../ProfileModal/ProfileModal\";\nimport { login, logout, versionManager } from \"../../redux/actions\"\nimport { ContractServices } from \"../../services/ContractServices\";\n\nconst Header = props => {\n    const dispatch = useDispatch();\n    const isUserConnected = useSelector(state => state.persist.isUserConnected);\n    const walletType = useSelector(state => state.persist.walletType);\n    const [show, setShow] = useState(false);\n    useEffect(() => {\n        const init = async () => {\n            await dispatch(versionManager());\n            if (walletType) {\n                await ContractServices.setWalletType(walletType);\n            } else {\n                dispatch(logout());\n            }\n        };\n        init();\n        addListeners();\n    }, []);\n    const handleClose = () => setShow(false);\n\n    const handleShow = () => setShow(true);\n\n    const connectCall = () => {\n        isUserConnected ? setShow(!show) : setShow(true);\n    }\n    const addListeners = async () => {\n        let address;\n        if (walletType === 'Metamask') {\n            address = await ContractServices.isMetamaskInstalled('');\n        }\n        if (walletType === 'BinanceChain') {\n            address = await ContractServices.isBinanceChainInstalled();\n        }\n\n        ContractServices.walletWindowListener();\n        if (address) {\n            window.ethereum.on('accountsChanged', function (accounts) {\n                const account = accounts[0];\n                dispatch(login({ account, walletType }));\n                window.location.reload();\n            });\n        }\n    };\n    const logoutCall = () => {\n        dispatch(logout());\n        setShow(false);\n    }\n\n    return (\n        <div className={`header_style ${props.className}`}>\n            <div className=\"header_left_style\">\n                <div className=\"for_desktop\">\n                    <div className=\"hamburg\" onClick={props.small_nav}>\n                        {\n                            props.mobileIcon ?\n                                <img src={Iconmenu} alt=\"\" />\n                                :\n                                <img src={IconToggle} />\n                        }\n                    </div>\n                </div>\n                <div className=\"for_mobile\">\n                    <div className=\"hamburg\" onClick={props.small_nav}>\n                        {\n                            props.mobileIcon ?\n                                <img src={IconToggle} />\n                                :\n                                <img src={Iconmenu} alt=\"\" />\n                        }\n                    </div>\n                </div>\n                <Link to=\"/home\" className=\"header_logo\"></Link>\n            </div>\n            <div className=\"header_right_style\">\n                <Button onClick={() => connectCall()} title={isUserConnected ? `${isUserConnected.substring(1, 6)}...${isUserConnected.substr(isUserConnected.length - 4)}` : 'Connect'} />\n            </div>\n            {isUserConnected === \"\" && <ConnectWallet show={show} handleShow={handleShow} handleClose={handleClose} />}\n            {isUserConnected !== \"\" && <ProfileModal show={show} handleClose={handleClose} logout={logoutCall} />}\n        </div>\n\n    )\n}\n\nexport default Header;","/home/user/Desktop/nm/SaitaSwap/src/components/Sidebar/Sidebar.js",["338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"/home/user/Desktop/nm/SaitaSwap/src/components/Footer/Footer.js",["358"],"/home/user/Desktop/nm/SaitaSwap/src/pages/Referral/Referral.js",["359","360","361","362","363"],"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/Trade.js",["364","365","366","367"],"/home/user/Desktop/nm/SaitaSwap/src/pages/FarmPlanets/FarmPlanets.js",["368","369","370","371","372","373","374","375","376","377","378","379","380","381"],"import Button from \"@restart/ui/esm/Button\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Col,\n  Row,\n  Form,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport {\n  addTransaction,\n  searchTokenByNameOrAddress,\n  startLoading,\n  stopLoading,\n} from \"../../redux/actions\";\nimport { ReferralsServices } from \"../../services/ReferralsServices\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport BigNumber from \"bignumber.js\";\nimport GetLPToken from \"../../components/GetLPToken/GetLPToken\";\n\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport { rootName } from \"../../constant\";\nimport Searchicon from \"../../assets/images/search.png\";\nimport FarmIcon from \"../../assets/images/Farm-Header-Logo.svg\";\nimport \"./FarmPlanets.scss\";\nimport PlanetCard from \"../../components/PlanetCard/PlanetCard\";\nimport NIOB from \"../../assets/images/token_icons/NIOB.svg\";\nimport BUSD from \"../../assets/images/token_icons/BUSD-Token.svg\";\nimport ANCHOR from \"../../assets/images/token_icons/ANCHOR-Token.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport WithDrawLPToken from \"../../components/GetLPToken/WithDrawLPToken\";\nimport TransactionalModal from \"../../components/TransactionalModal/TransactionalModal\";\nimport TransactionModal from \"../../components/TransactionModal/TransactionModal\";\n\nconst FarmPlanets = (props) => {\n  const {\n    match: { params },\n    history,\n  } = props;\n  const { tab } = params;\n  const handleTab = (data) => {\n    history.push(`${rootName}/farmplanets/${data}`);\n  };\n\n  const handleClose = () => {\n    setStakeValue(null);\n    setShowStake(false);\n  };\n  const handleWithdrawClose = () => {\n    setStakeValue(null);\n    setShowStakeWithdraw(false);\n  };\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const referralAddress = useSelector((state) => state.persist.referralAddress);\n\n  const [checked, setChecked] = useState(false);\n  const [active, setActive] = useState(true);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [showStake, setShowStake] = useState(false);\n  const [showStakeWithdraw, setShowStakeWithdraw] = useState(false);\n  const [showAPY, setShowAPY] = useState(false);\n  const [roiModalData, setRoiModalData] = useState(null);\n\n  const [poolLength, setPoolLength] = useState(0);\n  const [farms, setFarms] = useState([]);\n  const [inactiveFarms, setInactiveFarms] = useState([]);\n  const [stakingOnly, setStakingOnly] = useState([]);\n  const [stakeData, setStakeData] = useState(null);\n  const [stakeValue, setStakeValue] = useState(0);\n  const [referrer, setReferrer] = useState(\n    \"0x0000000000000000000000000000000000000000\"\n  );\n\n  const [stakeConfirmation, setStakeConfimation] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [lpDetails, setLpTokenDetails] = useState(null);\n  const [selectedPairId, setSelectedPairId] = useState();\n\n  //staking only\n  const handleChange = () => setChecked(!checked);\n\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false);\n    setFarms([]);\n    setInactiveFarms([]);\n    setStakingOnly([]);\n    init();\n    window.location.reload();\n  };\n\n  const cloaseRoiModal = () => {\n    setShowAPY(false);\n  };\n  const handleRoiModal = (data, lpDetails) => {\n    setRoiModalData(data);\n    setLpTokenDetails(lpDetails);\n    setShowAPY(true);\n  };\n\n  const handleIndex = (index) => {\n    if (currentIndex === index) {\n      setCurrentIndex(-1);\n    } else {\n      setCurrentIndex(index);\n    }\n  };\n\n  useEffect(() => {\n    init();\n    return () => {\n      setFarms([]);\n      setInactiveFarms([]);\n    };\n  }, [isUserConnected]);\n\n  const init = async () => {\n    try {\n      dispatch(startLoading());\n      let ref = await ReferralsServices.getReferrer(isUserConnected);\n      if (ref === \"0x0000000000000000000000000000000000000000\") {\n        if (\n          referralAddress &&\n          referralAddress !== \"0x0000000000000000000000000000000000000000\"\n        ) {\n          ref = referralAddress;\n        }\n        setReferrer(ref);\n      }\n      const pL = Number(await FarmService.poolLength());\n      setPoolLength(pL);\n      dispatch(stopLoading());\n      for (let i = 0; i < pL; i++) {\n        const poolInfo = await FarmService.poolInfo(i, \"1\");\n        const userInfo = await FarmService.userInfo(i, isUserConnected);\n        // console.log(userInfo, '------i------', i);\n        if (poolInfo) {\n          if (Number(poolInfo.allocPoint) === 0) {\n            setInactiveFarms((inactiveFarms) => [\n              ...inactiveFarms,\n              { poolInfo, userInfo, pid: i },\n            ]);\n          } else {\n            if (Number(userInfo.amount) > 0) {\n              // console.log('index', i);\n              setStakingOnly((stakingOnly) => [\n                ...stakingOnly,\n                { poolInfo, userInfo, pid: i },\n              ]);\n            }\n            setFarms((farms) => [...farms, { poolInfo, userInfo, pid: i }]);\n          }\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const closeStakeModal = () => {\n    setShowStakeWithdraw(false);\n    setShowStake(false);\n    setStakeData(null);\n    setStakeValue(0);\n  };\n\n  const stakeHandle = (data, type) => {\n    // setSelectedPairId is used for getting the id of the farm that user clicked (and staked) to\n    // change the values of only single farm --will be implemented in future\n    setSelectedPairId(data.pid);\n    if (type === \"withdraw\") {\n      setStakeData(data);\n      setShowStakeWithdraw(true);\n    }\n    if (type === \"deposit\") {\n      setStakeData(data);\n      setShowStake(true);\n    }\n  };\n\n  const handleStakeValue = (e) => {\n    const value = e.target.value;\n    setStakeValue(value);\n  };\n  const setMaxValue = () => setStakeValue(stakeData.balance);\n\n  const harvest = async (pid, lpTokenName) => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n\n    if (stakeConfirmation) {\n      return toast.info(\"Transaction is processing!\");\n    }\n    setStakeConfimation(true);\n    const data = {\n      pid: pid.toString(),\n      amount: 0,\n      referrer: referrer,\n      from: isUserConnected,\n    };\n    try {\n      dispatch(startLoading());\n      const result = await FarmService.deposit(data);\n      dispatch(stopLoading());\n      setStakeConfimation(false);\n\n      if (result) {\n        setTxHash(result);\n        setShowTransactionModal(true);\n\n        const data = {\n          message: `Harvest ${lpTokenName}`,\n          tx: result,\n        };\n        dispatch(addTransaction(data));\n      }\n    } catch (err) {\n      console.log(err, \"lp harvest\");\n      dispatch(stopLoading());\n      setStakeConfimation(false);\n\n      const message = await ContractServices.web3ErrorHandle(err);\n      toast.error(message);\n    }\n  };\n\n  // // this function will be used to change the values of single farm that user clicked and staked\n  // const refreshChangedItem = async () => {\n  //   try {\n  //     dispatch(startLoading());\n  //     let ref = await ReferralsServices.getReferrer(isUserConnected);\n  //     if (ref === '0x0000000000000000000000000000000000000000') {\n  //       if (referralAddress && referralAddress !== '0x0000000000000000000000000000000000000000') {\n  //         ref = referralAddress;\n  //       }\n  //       setReferrer(ref);\n  //     }\n  //     const pL = Number(await FarmService.poolLength());\n  //     setPoolLength(pL);\n  //     // let farmsTemp = [];\n  //     dispatch(stopLoading());\n  //     for (let i = 0; i < pL; i++) {\n  //       const poolInfo = await FarmService.poolInfo(i, '1');\n  //       const userInfo = await FarmService.userInfo(i, isUserConnected);\n  //       // console.log(userInfo, '------i------', i);\n  //       if (poolInfo) {\n  //         if (Number(poolInfo.allocPoint) === 0) {\n  //           setInactiveFarms(inactiveFarms => [...inactiveFarms, { poolInfo, userInfo, pid: i }]);\n  //         } else {\n  //           if (Number(userInfo.amount) > 0) {\n  //             console.log('index', i);\n  //           }\n  //           // setStakingOnly(stakingOnly => stakingOnly.pid === selectedPairId ?  { poolInfo, userInfo, pid: i }: stakingOnly);\n  //           // setFarms(farms => [...farms, { poolInfo, userInfo, pid: i }]);\n  //           let newArr = [...farms]; // copying the old farms\n  //           newArr[selectedPairId] = { poolInfo, userInfo, pid: selectedPairId };\n  //           setFarms(newArr);\n  //         }\n  //       }\n  //     }\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n\n  const depositWithdraw = async (type) => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n    const value = Number(stakeValue);\n    if (isNaN(value)) {\n      return toast.error(\"Enter vaild amount!\");\n    }\n    if (value <= 0) {\n      return toast.error(\"Enter amount greater than zero!\");\n    }\n    if (value > stakeData.balance) {\n      return toast.error(\"Value is greater than max value!\");\n    }\n    if (!stakeData) {\n      return toast.info(\"Reload page try again!\");\n    }\n    if (stakeConfirmation) {\n      return toast.info(\"Transaction is processing!\");\n    }\n    setStakeConfimation(true);\n    if (type === \"deposit\") {\n      const amount = BigNumber(\n        value * 10 ** stakeData.lpTokenDetails.decimals\n      ).toFixed();\n\n      const data = {\n        pid: stakeData.pid.toString(),\n        amount,\n        referrer: referrer,\n        from: isUserConnected,\n      };\n      // console.log('sending this deposit data' ,data);\n      try {\n        closeStakeModal();\n        dispatch(startLoading());\n        const result = await FarmService.deposit(data);\n        setStakeConfimation(false);\n        dispatch(stopLoading());\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n\n          const data = {\n            message: `Deposit ${stakeData.lpTokenDetails.lpTokenName}`,\n            tx: result,\n          };\n          dispatch(addTransaction(data));\n        }\n      } catch (err) {\n        console.log(err, \"lp deposit\");\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n      }\n    }\n    if (type === \"withdraw\") {\n      const amount = BigNumber(\n        value * 10 ** stakeData.lpTokenDetails.decimals\n      ).toFixed();\n      const data = {\n        pid: stakeData.pid.toString(),\n        amount,\n        from: isUserConnected,\n      };\n      // console.log('sending this withdraw data' , data);\n      try {\n        closeStakeModal();\n        dispatch(startLoading());\n        const result = await FarmService.withdraw(data);\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n\n          const data = {\n            message: `Withdraw ${stakeData.lpTokenDetails.lpTokenName}`,\n            tx: result,\n          };\n          dispatch(addTransaction(data));\n        }\n      } catch (err) {\n        console.log(err, \"lp withdraw\");\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container_wrap farmpln frm_plnet_disply\">\n      <div className=\"upper_text\">\n        <Container>\n          <Row>\n            <Col xl={6} className=\"pl-0\">\n              <div className=\"farm_title\">\n                <div className=\"farm_icon\">\n                  <img src={FarmIcon} />\n                </div>\n                <div className=\"desc\">\n                  <h1 className=\"title_hd\">Farm Planets</h1>\n                  <p>\n                    There is so much to explore! SaitaSwap offers multiple\n                    farming oppurtunities to you. Get amazing rewards by staking\n                    your LP tokens in return for additional SAITAMA Tokens.\n                  </p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <div className=\"farm_srchbar\">\n        <Container>\n          <div className=\"contain_area\">\n            <Form className=\"srchbar_area\">\n              <div className=\"serch_field\">\n                <Form.Label>Search</Form.Label>\n                <InputGroup>\n                  <FormControl id=\"search\" placeholder=\"Saitama\" />\n                  <Button className=\"search_btn\">\n                    <img src={Searchicon} />\n                  </Button>\n                </InputGroup>\n              </div>\n              <div className=\"staked_only\">\n                <Form.Check\n                  type=\"checkbox\"\n                  id=\"stakecheck\"\n                  label=\"Staked only\"\n                  checked={checked}\n                  onChange={handleChange}\n                />\n                <Button className=\"btn harvest_btn\">Harvest all</Button>\n              </div>\n            </Form>\n            <div className=\"frm_plnet_list\">\n              <div className=\"farm_tabs\">\n                <Tabs\n                  activeKey={tab}\n                  id=\"frmplanet_tab\"\n                  variant=\"pills\"\n                  onSelect={handleTab}\n                >\n                  <Tab eventKey=\"active\" title=\"Active\">\n                    <div className=\"planet_list active\">\n                      <Row>\n                        <Col xl={12}>\n                          {checked && (\n                            <div className=\"planet_list_view\">\n                              {stakingOnly.map((farm, index) => (\n                                <PlanetCard\n                                  key={index}\n                                  index={index}\n                                  harvestOnClick={harvest}\n                                  currentIndex={currentIndex}\n                                  handleChange={() => handleIndex(index)}\n                                  stakeHandle={stakeHandle}\n                                  handleRoiModal={handleRoiModal}\n                                  status={true}\n                                  farm={farm}\n                                  icon1={NIOB}\n                                  icon2={BUSD}\n                                  title={`NIOB`}\n                                  title1={`BUSD`}\n                                />\n                              ))}\n                            </div>\n                          )}\n\n                          {!checked && (\n                            <div className=\"planet_list_view\">\n                              {farms.map((farm, index) => (\n                                <PlanetCard\n                                  key={index}\n                                  index={index}\n                                  harvestOnClick={harvest}\n                                  currentIndex={currentIndex}\n                                  handleChange={() => handleIndex(index)}\n                                  stakeHandle={stakeHandle}\n                                  handleRoiModal={handleRoiModal}\n                                  status={true}\n                                  farm={farm}\n                                  icon1={NIOB}\n                                  icon2={BUSD}\n                                  title={`NIOB`}\n                                  title1={`BUSD`}\n                                />\n                              ))}\n                            </div>\n                          )}\n                        </Col>\n                      </Row>\n                    </div>\n                  </Tab>\n\n                  <Tab eventKey=\"inactive\" title=\"Inactive\">\n                    <div className=\"planet_list active\">\n                      <Row>\n                        <Col xl={12}>\n                          <div className=\"planet_list_view\">\n                            {inactiveFarms.map((farm, index) => (\n                              <PlanetCard\n                                key={index}\n                                index={index}\n                                harvestOnClick={harvest}\n                                currentIndex={currentIndex}\n                                handleChange={() => handleIndex(index)}\n                                stakeHandle={stakeHandle}\n                                handleRoiModal={handleRoiModal}\n                                status={true}\n                                farm={farm}\n                                icon1={NIOB}\n                                icon2={BUSD}\n                                title={`NIOB`}\n                                title1={`BUSD`}\n                              />\n                            ))}\n                          </div>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Tab>\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n      <GetLPToken\n        stakeValue={stakeValue}\n        stakeData={stakeData}\n        stakeConfirmation={stakeConfirmation}\n        handleStakeValue={handleStakeValue}\n        depositWithdraw={depositWithdraw}\n        setMaxValue={setMaxValue}\n        show={showStake}\n        closeStakeModal={handleClose}\n      />\n      <WithDrawLPToken\n        stakeValue={stakeValue}\n        stakeData={stakeData}\n        stakeConfirmation={stakeConfirmation}\n        handleStakeValue={handleStakeValue}\n        depositWithdraw={depositWithdraw}\n        setMaxValue={setMaxValue}\n        show={showStakeWithdraw}\n        closeStakeModal={handleWithdrawClose}\n        isNiobWithdrawabe={false}\n      />\n      <TransactionalModal\n        show={showTransactionModal}\n        handleClose={closeTransactionModal}\n        txHash={txHash}\n      />\n    </div>\n  );\n};\n\nexport default FarmPlanets;\n","/home/user/Desktop/nm/SaitaSwap/src/pages/PoolGalaxy/PoolGalaxy.js",["382","383","384","385","386","387","388","389","390","391","392","393","394","395","396"],"import React, { useEffect, useState } from \"react\";\nimport Button from \"@restart/ui/esm/Button\";\nimport {\n  Container,\n  Col,\n  Row,\n  Form,\n  InputGroup,\n  FormControl,\n  Tabs,\n  Tab,\n} from \"react-bootstrap\";\nimport Searchicon from \"../../assets/images/search.png\";\nimport PoolIcon from \"../../assets/images/Pool-Header-Logo.svg\";\nimport \"./PoolGalaxy.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTransaction, startLoading, stopLoading } from \"../../redux/actions\";\nimport { ReferralsServices } from \"../../services/ReferralsServices\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport BigNumber from \"bignumber.js\";\nimport GalaxyCard from \"../../components/GalaxyCard/GalaxyCard\";\nimport NIOB from \"../../assets/images/token_icons/NIOB.svg\";\nimport BUSD from \"../../assets/images/token_icons/BUSD-Token.svg\";\nimport GetLPToken from \"../../components/GetLPToken/GetLPToken\";\nimport WithDrawLPToken from \"../../components/GetLPToken/WithDrawLPToken\";\nimport TransactionalModal from \"../../components/TransactionalModal/TransactionalModal\";\nimport ReturnInvest from \"../../components/ReturnInvest/ReturnInvest\"\nimport { TOKEN_LIST, ANCHOR_BUSD_LP } from \"../../assets/tokens\";\n\nfunction PoolGalaxy(props) {\n  const {\n    match: { params },\n    history,\n  } = props;\n  const { tab } = params;\n  // const handleTab = (data) => {\n  //   history.push(`${rootName}/farmplanets/${data}`);\n  // };\n\n  const handleClose = () => { setStakeValue(null); setShowStake(false) };\n  const handleWithdrawClose = () => { setStakeValue(null); setShowStakeWithdraw(false) };\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const referralAddress = useSelector(state => state.persist.referralAddress);\n\n  const [checked, setChecked] = useState(false);\n  const [active, setActive] = useState(true);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [showStake, setShowStake] = useState(false);\n  const [showStakeWithdraw, setShowStakeWithdraw] = useState(false);\n  const [showAPY, setShowAPY] = useState(false);\n  const [roiModalData, setRoiModalData] = useState(null);\n\n  const [poolLength, setPoolLength] = useState(0);\n  const [farms, setFarms] = useState([]);\n  const [inactiveFarms, setInactiveFarms] = useState([]);\n  const [stakingOnly, setStakingOnly] = useState([]);\n  const [stakeData, setStakeData] = useState(null);\n  const [stakeValue, setStakeValue] = useState(0);\n  const [referrer, setReferrer] = useState('0x0000000000000000000000000000000000000000');\n\n  const [stakeConfirmation, setStakeConfimation] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState('');\n  const [lpDetails, setLpTokenDetails] = useState(null);\n  const [niobStats, setNiobStats] = useState(null);\n\n\n  //staking only\n  const handleChange = () => setChecked(!checked);\n\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false);\n    setFarms([]);\n    setInactiveFarms([]);\n    setStakingOnly([]);\n    init();\n    window.location.reload();\n  }\n\n  const cloaseRoiModal = () => {\n    setShowAPY(false);\n  }\n  const handleRoiModal = (data, lpDetails, niobId) => {\n    // console.log(data, lpDetails);\n    setNiobStats(niobId);\n    setRoiModalData(data);\n    setLpTokenDetails(lpDetails);\n    setShowAPY(true);\n  }\n\n  const handleIndex = (index) => {\n    if (currentIndex === index) {\n      setCurrentIndex(-1);\n    } else {\n      setCurrentIndex(index);\n    }\n  };\n\n\n  const getValue = async (address) => {\n    if (address != undefined) {\n      try {\n        const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        return (val.toFixed(3));\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n  }\n\n\n  //this will re-arrange locked pool to desired position\n  const getSortedPools = (array, from, to) => {\n    if (to === from) return array;\n\n    let target = array[from];\n    let increment = to < from ? -1 : 1;\n\n    for (let k = from; k != to; k += increment) {\n      array[k] = array[k + increment];\n    }\n    array[to] = target;\n    return array;\n  }\n\n  useEffect(() => {\n    init();\n    return () => {\n      setFarms([]);\n      setInactiveFarms([]);\n    }\n  }, [isUserConnected]);\n\n  const init = async () => {\n    try {\n      dispatch(startLoading());\n      let ref = await ReferralsServices.getReferrer(isUserConnected);\n      if (ref === '0x0000000000000000000000000000000000000000') {\n        if (referralAddress && referralAddress !== '0x0000000000000000000000000000000000000000') {\n          ref = referralAddress;\n        }\n        setReferrer(ref);\n      }\n      const pL = Number(await FarmService.poolLength());\n      // console.log('qq', pL);\n      setPoolLength(pL);\n      // let farmsTemp = [];\n      dispatch(stopLoading());\n      let activePoolsToSort = [];\n      let stakingOnlyArrayToSort = [];\n      for (let i = 0; i < pL; i++) {\n\n        const poolInfo = await FarmService.poolInfo(i, '2');\n        const niobId = await FarmService.niobId();\n        const userInfo = await FarmService.userInfo(i, isUserConnected);\n        const dollarVal = await getValue(poolInfo.lpToken);\n        if (poolInfo) {\n          if (Number(poolInfo.allocPoint) === 0) {\n            setInactiveFarms(inactiveFarms => [...inactiveFarms, { poolInfo, userInfo, pid: i, isLocked: niobId == i ? true : false, dollarVal }]);\n          } else {\n            if (Number(userInfo.amount) > 0) {\n              // stakingOnlyArrayToSort.push({ poolInfo, userInfo, pid: i, niobId })\n              setStakingOnly(stakingOnly => [...stakingOnly, { poolInfo, userInfo, pid: i, isLocked: false, dollarVal }]);\n            }\n            // activePoolsToSort.push({ poolInfo, userInfo, pid: i, niobId })\n            setFarms(farms => [...farms, { poolInfo, userInfo, pid: i, niobId, isLocked: false, dollarVal }]);\n          }\n        }\n      }\n\n      // // this x is the current postion of lockedNiobPool which we use to change it's position up to second later\n      // let lockedNiobIndex =  activePoolsToSort.findIndex(x => x.pid == x.niobId)\n      // // this will change position of lockedNiobPool to index 1\n      // let sortedAllPools = getSortedPools(activePoolsToSort, lockedNiobIndex, 1);\n      // //Now get unlocked niob pool details\n      // const unlockedNiobPool = sortedAllPools.find(pool => pool.pid == '6');\n      // // again get index of lockedNiobPool\n      // let newlockedNiobIndex =  sortedAllPools.findIndex(x => x.pid == x.niobId)\n      // //firstly lets fix realAllocPoint of lockedNiobPool \n      // let realAllocPointOfLockedPool = sortedAllPools[newlockedNiobIndex].poolInfo.allocPoint; \n\n      // //Now attach unlockedNiob pool's allocPoint to lockedNiobPool\n      // sortedAllPools[newlockedNiobIndex].poolInfo.allocPoint = unlockedNiobPool.poolInfo.allocPoint; \n      // sortedAllPools[newlockedNiobIndex].poolInfo.displayAllocPoint = realAllocPointOfLockedPool; \n      // // these are the total (also active) farms\n      // // setFarms(sortedAllPools);\n\n      // // these are the staked pools\n      // let lockedNiobIndexStakedOnly =  stakingOnlyArrayToSort.findIndex(x => x.pid == x.niobId);\n      // // this will change position of lockedNiobPool to index 1\n      // // check if user has staked locked pool, if yes only then sort the pools\n      // let sortedStakingOnlyPools;\n      // if (lockedNiobIndexStakedOnly !== -1 && stakingOnlyArrayToSort.length > 1) {\n      //      sortedStakingOnlyPools = getSortedPools(stakingOnlyArrayToSort, lockedNiobIndexStakedOnly, 1);\n      //     //  setStakingOnly(sortedStakingOnlyPools);\n      // }\n      // // else set the stakingOnly array as it is\n      // else {\n      //   // setStakingOnly(stakingOnlyArrayToSort);\n      // }\n\n      // these are the inactive pools\n\n    } catch (err) {\n      console.log(err)\n    }\n  };\n  const closeStakeModal = () => {\n    setShowStakeWithdraw(false);\n    setShowStake(false);\n    setStakeData(null);\n    setStakeValue(0);\n  }\n  const handleROIModal = () => {\n    setShowStakeWithdraw(false);\n    setShowStake(false);\n    setStakeData(null);\n    setStakeValue(0);\n  }\n  const stakeHandle = (data, type) => {\n    if (type === 'withdraw') {\n      setStakeData(data);\n      setShowStakeWithdraw(true);\n    }\n    if (type === 'deposit') {\n      setStakeData(data);\n      setShowStake(true);\n    }\n  }\n\n  const handleStakeValue = e => {\n    const value = e.target.value;\n    setStakeValue(value);\n  }\n  const setMaxValue = () => setStakeValue(stakeData.balance);\n\n  const harvest = async (pid, lpTokenName) => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error('Wallet address doesn`t match!');\n    }\n\n    if (stakeConfirmation) {\n      return toast.info('Transaction is processing!');\n    }\n    setStakeConfimation(true);\n    const data = {\n      pid: pid.toString(),\n      amount: 0,\n      referrer: referrer,\n      from: isUserConnected\n    }\n    try {\n      dispatch(startLoading());\n      const result = await FarmService.deposit(data);\n      dispatch(stopLoading());\n      setStakeConfimation(false);\n\n      if (result) {\n        setTxHash(result);\n        setShowTransactionModal(true);\n\n        const data = {\n          message: `Harvest ${lpTokenName}`,\n          tx: result\n        };\n        dispatch(addTransaction(data));\n      }\n    } catch (err) {\n      console.log(err, 'lp harvest');\n      dispatch(stopLoading());\n      setStakeConfimation(false);\n\n      const message = await ContractServices.web3ErrorHandle(err);\n      toast.error(message);\n    }\n  }\n\n  const depositWithdraw = async (type, isLocked) => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error('Wallet address doesn`t match!');\n    }\n    const value = Number(stakeValue);\n    if (isNaN(value)) {\n      return toast.error('Enter vaild amount!');\n    }\n    if (value <= 0) {\n      return toast.error('Enter amount greater than zero!');\n    }\n    if (value > stakeData.balance) {\n      return toast.error('Value is greater than max value!');\n    }\n    if (!stakeData) {\n      return toast.info('Reload page try again!');\n    }\n    if (stakeConfirmation) {\n      return toast.info('Transaction is processing!');\n    }\n    setStakeConfimation(true);\n    if (type === 'deposit') {\n      const amount = BigNumber(value * 10 ** stakeData.lpTokenDetails.decimals).toFixed();\n      // const deposit = '10000';\n\n      const data = {\n        pid: stakeData.pid.toString(),\n        amount,\n        referrer: referrer,\n        from: isUserConnected,\n      }\n      // console.log(data, 'before deposit----------farm--------------');\n      try {\n        closeStakeModal();\n        dispatch(startLoading());\n        const result = await FarmService.deposit(data);\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n\n          const data = {\n            message: `Deposit ${stakeData.lpTokenDetails.lpTokenName}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n      } catch (err) {\n        console.log(err, 'lp deposit');\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n      }\n    }\n    if (type === 'withdraw') {\n      const amount = BigNumber(value * 10 ** stakeData.lpTokenDetails.decimals).toFixed();\n\n      const data = {\n        pid: stakeData.pid.toString(),\n        amount,\n        from: isUserConnected\n      }\n      // console.log(data, 'before withdraw----------farm--------------');\n      try {\n        closeStakeModal();\n        dispatch(startLoading());\n        let result;\n        if (isLocked) {\n          console.log('zzz', data);\n          result = await FarmService.withdrawNiob(data);\n        } else {\n          result = await FarmService.withdraw(data);\n        }\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n\n          const data = {\n            message: `Withdraw ${stakeData.lpTokenDetails.lpTokenName}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n      } catch (err) {\n        console.log(err, 'lp withdraw');\n        dispatch(stopLoading());\n        setStakeConfimation(false);\n\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n\n      }\n    }\n  }\n  return (\n    <div className=\"container_wrap farmpln poolGalaxy_cont\">\n      <div className=\"upper_text\">\n        <Container>\n          <Row>\n            <Col xl={6} className=\"pl-0\">\n              <div className=\"farm_title\">\n                <div className=\"farm_icon\">\n                  <img src={PoolIcon} />\n                </div>\n                <div className=\"desc\">\n                  <h1 className=\"title_hd\">Pool Galaxy</h1>\n                  <p>\n                    Stake NIOB to earn new tokens. You can unstake at any time!\n                    Rewards are calculated per block.\n                  </p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <div className=\"farm_srchbar\">\n        <Container>\n          <div className=\"contain_area\">\n            <Form className=\"srchbar_area\">\n              <div className=\"serch_field\">\n                <Form.Label>Search</Form.Label>\n                <InputGroup>\n                  <FormControl id=\"search\" placeholder=\"Niob\" />\n                  <Button className=\"search_btn\">\n                    <img src={Searchicon} />\n                  </Button>\n                </InputGroup>\n              </div>\n              <div className=\"staked_only\">\n                <Form.Check\n                  type=\"checkbox\"\n                  id=\"stakecheck\"\n                  label=\"Staked only\"\n                  checked={checked}\n                  onChange={handleChange}\n                />\n                <Button className=\"btn harvest_btn\">Harvest all</Button>\n              </div>\n            </Form>\n            <div className=\"frm_plnet_list\">\n              <div className=\"farm_tabs\">\n                <Tabs\n                  activeKey={tab}\n                  id=\"frmplanet_tab\"\n                  variant=\"pills\"\n                //   onSelect={handleTab}\n                >\n\n                  <Tab eventKey=\"active\" title=\"Active\">\n                    <div className=\"planet_list active\">\n                      <Row>\n                        <Col xl={12}>\n                          {checked && (\n                            <div className=\"planet_list_view\">\n                              <div className=\"headingStyle\">\n                                <h6>Token</h6>\n                                <h6>APR</h6>\n                                <h6>Total Staked</h6>\n                                <h6 className=\"earnTxt\">Earned</h6>\n                              </div>\n                              {stakingOnly.map((farm, index) =>\n                                <GalaxyCard\n                                  key={index}\n                                  index={index}\n                                  harvestOnClick={harvest}\n                                  currentIndex={currentIndex}\n                                  handleChange={() => handleIndex(index)}\n                                  stakeHandle={stakeHandle}\n                                  handleRoiModal={handleRoiModal}\n                                  status={true}\n                                  farm={farm}\n                                  icon1={NIOB}\n                                  icon2={BUSD}\n                                  title={`NIOB`}\n                                  title1={`BUSD`}\n                                />\n                              )}\n                            </div>\n                          )}\n                          {!checked && (\n                            <div className=\"planet_list_view\">\n                              <div className=\"headingStyle\">\n                                <h6>Token</h6>\n                                <h6>APR</h6>\n                                <h6>Total Staked</h6>\n                                <h6 className=\"earnTxt\">Earned</h6>\n                              </div>\n                              {farms.map((farm, index) =>\n                                <GalaxyCard\n                                  key={index}\n                                  index={index}\n                                  harvestOnClick={harvest}\n                                  currentIndex={currentIndex}\n                                  handleChange={() => handleIndex(index)}\n                                  stakeHandle={stakeHandle}\n                                  handleRoiModal={handleRoiModal}\n                                  status={true}\n                                  farm={farm}\n                                  icon1={NIOB}\n                                  icon2={BUSD}\n                                  title={`NIOB`}\n                                  title1={`BUSD`}\n                                />\n                              )}\n                            </div>\n                          )}\n                        </Col>\n                      </Row>\n                    </div>\n                  </Tab>\n\n                  <Tab eventKey=\"inactive\" title=\"Inactive\">\n                    <div className=\"planet_list active\">\n                      <Row>\n                        <Col xl={12}>\n                          <div className=\"planet_list_view\">\n                            <div className=\"headingStyle\">\n                              <h6>Token</h6>\n                              <h6>APR</h6>\n                              <h6>Total Staked</h6>\n                              <h6 className=\"earnTxt\">Earned</h6>\n                            </div>\n                            {inactiveFarms.map((farm, index) =>\n                              <GalaxyCard\n                                key={index}\n                                index={index}\n                                harvestOnClick={harvest}\n                                currentIndex={currentIndex}\n                                handleChange={() => handleIndex(index)}\n                                stakeHandle={stakeHandle}\n                                handleRoiModal={handleRoiModal}\n                                status={false}\n                                farm={farm}\n                                icon1={NIOB}\n                                icon2={BUSD}\n                                title={`NIOB`}\n                                title1={`BUSD`}\n                              />\n                            )}\n                          </div>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Tab>\n\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n      <GetLPToken stakeValue={stakeValue} stakeData={stakeData} stakeConfirmation={stakeConfirmation} handleStakeValue={handleStakeValue} depositWithdraw={depositWithdraw} setMaxValue={setMaxValue} show={showStake} closeStakeModal={handleClose} />\n      <WithDrawLPToken stakeValue={stakeValue} stakeData={stakeData} stakeConfirmation={stakeConfirmation} handleStakeValue={handleStakeValue} depositWithdraw={depositWithdraw} setMaxValue={setMaxValue} show={showStakeWithdraw} closeStakeModal={handleWithdrawClose} address={isUserConnected} isNiobWithdrawabe={true} />\n      <TransactionalModal show={showTransactionModal} handleClose={closeTransactionModal} txHash={txHash} />\n      {showAPY && <ReturnInvest\n        show={showAPY}\n        niobId={niobStats}\n        roiModalData={roiModalData}\n        lpDetails={lpDetails}\n        handleClose={cloaseRoiModal}\n      />}\n    </div>\n  );\n}\n\nexport default PoolGalaxy;\n","/home/user/Desktop/nm/SaitaSwap/src/pages/Home/Home.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/AddLiquidity.js",["481","482","483","484","485","486","487","488","489","490","491","492"],"/home/user/Desktop/nm/SaitaSwap/src/redux/actions/index.js",[],"/home/user/Desktop/nm/SaitaSwap/src/redux/actions/LoadingActions.js",[],"/home/user/Desktop/nm/SaitaSwap/src/redux/actions/PersistActions.js",["493"],"import packageJson from \"../../../package.json\";\nimport { ContractServices } from \"../../services/ContractServices\";\n\n/** seting action types */\nexport const actionTypes = {\n  USER_CONNECTED: \"USER_CONNECTED\",\n  LOGOUT: \"LOGOUT\",\n  TOKEN_LIST_ADD: \"TOKEN_LIST_ADD\",\n  TOKEN_LIST_DEL: \"TOKEN_LIST_DEL\",\n  SAVE_SLIPPAGE_PERCENTAGE: \"SAVE_SLIPPAGE_PERCENTAGE\",\n  SAVE_DEADLINE: \"SAVE_DEADLINE\",\n  LOGIN_USER_SUCCESS: \"LOGIN_USER_SUCCESS\",\n  SAVE_USER_LP_TOKENS: \"SAVE_USER_LP_TOKENS\",\n  SAVE_USER_RECENT_TRANSACTIONS: \"SAVE_USER_RECENT_TRANSACTIONS\",\n  SAVE_REFFRAL_ADDRESS: \"SAVE_REFFRAL_ADDRESS\",\n  CHECK_USER_LPTOKENS: \"CHECK_USER_LPTOKENS\",\n  LOGIN_CONFIRMATION_SREEN: \"LOGIN_CONFIRMATION_SREEN\",\n  LOGOUT_CONFIRMATION_SREEN: \"LOGOUT_CONFIRMATION_SREEN\",\n  SAVE_FOOTER_DATA: \"SAVE_FOOTER_DATA\",\n};\n\nexport const versionManager = () => async (dispatch, getState) => {\n  try {\n    const version = packageJson.version;\n    const react_version = localStorage.getItem(\"react_version\");\n    if (react_version && version !== react_version) {\n      localStorage.clear();\n      window.location.reload();\n    }\n    if (!react_version) {\n      localStorage.setItem(\"react_version\", version);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*\n * Action creators\n */\nexport const login = (data) => {\n  return {\n    type: actionTypes.USER_CONNECTED,\n    payload: data,\n  };\n};\nexport const logout = () => {\n  ContractServices.setWalletType(\"Metamask\");\n  localStorage.removeItem(\"persist:root\");\n  window.location.reload();\n  return {\n    type: actionTypes.LOGOUT,\n  };\n};\n\nexport const tokenListAdd = (data) => {\n  return {\n    type: actionTypes.TOKEN_LIST_ADD,\n    payload: data,\n  };\n};\nexport const tokenListDel = (data) => {\n  return {\n    type: actionTypes.TOKEN_LIST_DEL,\n    payload: data,\n  };\n};\nexport const saveSlippagePercentage = (data) => {\n  return {\n    type: actionTypes.SAVE_SLIPPAGE_PERCENTAGE,\n    payload: data,\n  };\n};\nexport const saveDeadline = (data) => {\n  return {\n    type: actionTypes.SAVE_DEADLINE,\n    payload: data,\n  };\n};\nexport const saveUser = (data) => {\n  return {\n    type: actionTypes.LOGIN_USER_SUCCESS,\n    payload: data,\n  };\n};\nexport const saveUserLpTokens = (data) => {\n  return {\n    type: actionTypes.SAVE_USER_LP_TOKENS,\n    payload: data,\n  };\n};\nexport const checkUserLpTokens = (payload) => {\n  return {\n    type: actionTypes.CHECK_USER_LPTOKENS,\n    payload,\n  };\n};\n\nexport const savereffralAddress = (address) => {\n  return {\n    type: actionTypes.SAVE_REFFRAL_ADDRESS,\n    payload: address,\n  };\n};\n\nexport const addTransaction = (data) => async (dispatch, getState) => {\n  let {\n    persist: { recentTransactions },\n  } = getState();\n  recentTransactions.unshift(data);\n  dispatch({\n    type: actionTypes.SAVE_USER_RECENT_TRANSACTIONS,\n    payload: { recentTransactions },\n  });\n};\n\nexport const removeTokenList = (data) => async (dispatch, getState) => {\n  let {\n    persist: { tokenList },\n  } = getState();\n  const findIndex = tokenList.findIndex(\n    (a) => a.address.toLowerCase() === data.address.toLowerCase()\n  );\n  const tkList = tokenList.splice(findIndex, 1);\n  // console.log(tkList);\n};\n\nexport const loginConfirmationScreen = (data) => {\n  return {\n    type: actionTypes.LOGIN_CONFIRMATION_SREEN,\n  };\n};\n\nexport const logoutConfirmationScreen = (data) => {\n  return {\n    type: actionTypes.LOGOUT_CONFIRMATION_SREEN,\n  };\n};\n\nexport const saveFotterValues = (data) => async (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.SAVE_FOOTER_DATA,\n    payload: data,\n  });\n};\n","/home/user/Desktop/nm/SaitaSwap/src/services/UserService.js",[],"/home/user/Desktop/nm/SaitaSwap/src/services/ContractServices.js",["494","495","496","497","498","499","500"],"/home/user/Desktop/nm/SaitaSwap/src/services/ExchangeService.js",["501","502","503","504","505"],"/home/user/Desktop/nm/SaitaSwap/src/components/Button/Button.js",["506"],"import \"./Button.scss\";\n\nconst Button = (props) => {\n  return (\n    <button\n      onClick={props.onClick}\n      title={props.title}\n      className={`btn buttonStyle ${props.className}`}\n      disabled={props.disabled}\n    >\n      {props.title} {props.icon ? <img src={props.icon} /> : \"\" } \n    </button>\n  );\n};\n\nexport default Button;\n","/home/user/Desktop/nm/SaitaSwap/src/components/ConnectWallet/ConnectWallet.js",["507","508","509","510","511","512","513","514"],"import React from 'react'\nimport { Col, Row, Modal, Button } from 'react-bootstrap'\nimport './ConnectWallet.scss'\nimport { useDispatch } from \"react-redux\"\nimport { ContractServices } from \"../../services/ContractServices\"\nimport { login } from \"../../redux/actions\"\nimport { toast } from \"../../components/Toast/Toast\";\nimport WalletConnectProvider from '@walletconnect/web3-provider'\n\nimport iconMatamask from '../../assets/images/metamask_icon.png'\nimport iconCoinbase from '../../assets/images/coinbase_icon.svg'\nimport iconWallet from '../../assets/images/wallet_icon.svg'\nimport TokenPocket from '../../assets/images/tp.png'\nimport TrustWallet from '../../assets/images/trust-wallet.png'\nimport Binance from '../../assets/images/Binance-chain.png'\nimport MathWallet from '../../assets/images/mathwallet.png'\n\nconst ConnectWallet = ({ show, handleClose }) => {\n    const dispatch = useDispatch();\n\n    const loginCall = async (walletType, type) => {\n        try {\n            if (walletType === 'BinanceChain') {\n                const account = await ContractServices.isBinanceChainInstalled();\n                if (account) {\n                    dispatch(login({ account, walletType }));\n                    handleClose(false);\n                    window.location.reload();\n                }\n            } else if (walletType === 'Walletconnect') {\n                try {\n                    const provider = new WalletConnectProvider({\n                        //infuraId: \"8570afa4d18b4c5d9cb3a629b08de069\",\n                        rpc: {\n                            97: 'https://data-seed-prebsc-2-s3.binance.org:8545/',\n                            56: \"https://bsc-dataseed.binance.org/\",\n                        },\n                        chainId: 56,\n                        network: \"binance\",\n                        qrcode: true,\n                        qrcodeModalOptions: {\n                            mobileLinks: [\n                                \"rainbow\",\n                                \"metamask\",\n                                \"argent\",\n                                \"trust\",\n                                \"imtoken\",\n                                \"pillar\",\n                            ],\n                            desktopLinks: [\n                                \"encrypted ink\",\n                            ]\n                        }\n                    });\n                    const results = await provider.enable();\n\n                    provider.on('accountsChanged', async (accounts) => {\n                        setTimeout(function () {\n                            window.location.reload()\n                        }, 500)\n                        let account = accounts[0]\n                        dispatch(login({ account, walletType }));\n                        handleClose(false);\n                        //return;\n                        // window.location.reload();\n                    });\n                    await ContractServices.callWeb3ForWalletConnect(provider);\n                    const account = await provider.accounts[0];\n                    dispatch(login({ account, walletType }));\n                    handleClose(false);\n                    //  window.location.reload();\n                } catch (error) {\n                    console.log(error, 'wallet error')\n                }\n\n            } else {\n                const account = await ContractServices.isMetamaskInstalled(type);\n                if (account) {\n                    dispatch(login({ account, walletType }));\n                    handleClose(false);\n                    // window.location.reload();\n                }\n            }\n        } catch (err) {\n            toast.error(err.message);\n        }\n    }\n\n    return (\n        <Modal centered scrollable={true} className=\"connect_wallet\" show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Connect to a wallet</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col className=\"baseToken_style token_strut\">\n                        <ul>\n                            <li><Button onClick={() => loginCall('Metamask', 'Metamask')}>MetaMask<span><img src={iconMatamask} /></span> </Button></li>\n                            <li><Button>CoinBase Wallet<span><img src={iconCoinbase} /></span> </Button></li>\n                            <li><Button>WalletConnect<span><img src={iconWallet} /></span> </Button></li>\n                            <li><Button>TrustWallet<span><img src={TrustWallet} /></span> </Button></li>\n                            <li><Button>MathWallet<span><img src={MathWallet} /></span> </Button></li>\n                            <li><Button>TokenPocket<span><img src={TokenPocket} /></span> </Button></li>\n                            <li><Button>Binance Chain Wallet<span><img src={Binance} /></span> </Button></li>\n                        </ul>\n                    </Col>\n                </Row>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default ConnectWallet;\n","/home/user/Desktop/nm/SaitaSwap/src/components/ProfileModal/ProfileModal.js",["515"],"/home/user/Desktop/nm/SaitaSwap/src/services/ReferralsServices.js",[],"/home/user/Desktop/nm/SaitaSwap/src/hooks/getWindowDimensions.js",[],"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/Exchange.js",["516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551"],"/home/user/Desktop/nm/SaitaSwap/src/components/ScrollTop/ScrollTop.js",["552"],"import React, { Component } from \"react\";\nimport ScrollUp from \"../../assets/images/scroll-up-icon.svg\";\n\nexport default class ScrollTop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_visible: false\n    };\n  }\n\n  componentDidMount() {\n    var scrollComponent = this;\n    document.addEventListener(\"scroll\", function(e) {\n      scrollComponent.toggleVisibility();\n    });\n  }\n\n  toggleVisibility() {\n    if (window.pageYOffset > 100) {\n      this.setState({\n        is_visible: true\n      });\n    } else {\n      this.setState({\n        is_visible: false\n      });\n    }\n  }\n\n  scrollToTop() {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  render() {\n    const { is_visible } = this.state;\n    return (\n      <div className=\"scroll_top\">\n        <div onClick={() => this.scrollToTop()}>\n              <img src={ScrollUp} alt={\"icon\"} />\n          </div>\n      </div>\n    );\n  }\n}\n","/home/user/Desktop/nm/SaitaSwap/src/components/Toast/Toast.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/RecentTransactions/RecentTransactions.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/SupplyModal/SupplyModal.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/buttonBack/ButtonBack.js",["553"],"import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport goBack from '../../assets/images/icon_goback.png'\nimport './ButtonBackStyle.scss'\n\n\nconst ButtonBack = props => {\n    const history =  useHistory()\n    return (\n        <Link className=\"goBackButtonStyle\" to={{javascript:void(0)}}  onClick={() => {\n            history.goBack();\n        }}><img src={goBack} /></Link>\n    ) \n}\n\nexport default ButtonBack\n","/home/user/Desktop/nm/SaitaSwap/src/components/selectCoin/SelectCoin.js",["554","555","556"],"/home/user/Desktop/nm/SaitaSwap/src/components/Modal/ModalCurrency/ModalCurrency.js",["557","558","559","560"],"/home/user/Desktop/nm/SaitaSwap/src/components/Modal/SettingModal/SettingModal.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/cardCustom/CardCustom.js",[],"/home/user/Desktop/nm/SaitaSwap/src/redux/actions/ExchangeActions.js",["561","562"],"/home/user/Desktop/nm/SaitaSwap/src/redux/actions/tokenActions.js",["563","564","565","566"],"import { UserService } from \"../../services/UserService\";\nimport { startLoading, stopLoading } from \"./LoadingActions\";\nimport { PersistActions } from \"../actions\"\nimport { ContractServices } from \"../../services/ContractServices\";\n\n\n\nexport function getTokenBalance() {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    ContractServices.tokenBalance()\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((ex) => {\n        reject(ex);\n      });\n\n  });\n}\n\n\n","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/SecurityActions.js",["567","568","569","570","571","572","573","574","575","576"],"import { SecurityService } from \"../../services/SecurityService\";\nimport { startLoading, stopLoading } from \"./LoadingActions\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport { AUTH_TOKEN_KEY } from \"../../constant\";\nimport { getToken } from \"../../Helpers/storageHelper\"\n\n\n\n/** seting action types */\nexport const actionTypes = {\n  SAVE_GOOGLE_AUTH_DETAIL: \"SAVE_GOOGLE_AUTH_DETAIL\",\n  KYC_FORM_UPDATE: \"KYC_FORM_UPDATE\",\n  KYC_FORM_CLEAR: \"KYC_FORM_CLEAR\"\n\n};\n\n\n\nexport function saveKycFormData(data) {\n\n  return {\n    type: actionTypes.KYC_FORM_UPDATE,\n    payload: data\n  };\n}\n\nexport function clearKycFormData() {\n\n  return {\n    type: actionTypes.KYC_FORM_CLEAR,\n  };\n}\n\n\nexport function saveGoogleAuthDetails(data) {\n  return {\n    type: actionTypes.SAVE_GOOGLE_AUTH_DETAIL,\n    payload: data\n  };\n}\n\n\nexport function get2FaImage(data) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    dispatch(startLoading())\n    SecurityService.get2FaImage(data, {\n      jwt: getToken(AUTH_TOKEN_KEY)\n    })\n      .then((res) => {\n        dispatch(saveGoogleAuthDetails(res.data.data))\n        dispatch(stopLoading());\n        resolve(res);\n      })\n      .catch((ex) => {\n        toast.error(ex.data.message)\n        dispatch(stopLoading());\n\n        reject(ex);\n      });\n\n  });\n}\n\n\nexport function google2faValidate(data) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    dispatch(startLoading())\n    SecurityService.google2faValidate(data, {\n      jwt: getToken(AUTH_TOKEN_KEY)\n    })\n      .then((res) => {\n        toast.success(res.data.message);\n\n        dispatch(stopLoading());\n        resolve(res);\n      })\n      .catch((ex) => {\n        toast.error(ex.data.message)\n        dispatch(stopLoading());\n        reject(ex);\n      });\n\n  });\n}\n\n\nexport function google2faDisable(data) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    dispatch(startLoading())\n    SecurityService.google2faDisable(data, {\n\n      jwt: getToken(AUTH_TOKEN_KEY)\n    })\n      .then((res) => {\n        toast.success(res.data.message);\n\n        dispatch(stopLoading());\n        resolve(res);\n      })\n      .catch((ex) => {\n        toast.error(ex.data.message)\n        dispatch(stopLoading());\n        reject(ex);\n      });\n\n  });\n}\n\n\n\nexport const uploadRawFile = file => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    // dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.uploadRawFile(file, {\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          dispatch(stopLoading());\n          toast.success(res.data.message);\n          resolve(res);\n        })\n        .catch((ex) => {\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\n\n\nexport const removeKycDoc = file => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.removeKycDoc(file, {\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          dispatch(stopLoading());\n          toast.success(res.data.message);\n          resolve(res);\n        })\n        .catch((ex) => {\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\n\n\nexport const getUserKycDetails = data => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.getUserKycDetails({\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          dispatch(stopLoading());\n          resolve(res);\n        })\n        .catch((ex) => {\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\n\n\n\n\nexport const getFileById = data => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.getFileById(data, {\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          dispatch(stopLoading());\n          resolve(res);\n        })\n        .catch((ex) => {\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\n\n//PROFILE\nexport const getUserProfile = () => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.getUserProfile({\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          dispatch(stopLoading());\n          resolve(res);\n        })\n        .catch((ex) => {\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\n\n\nexport const updateUserProfile = data => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.updateUserProfile(data, {\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          toast.success(res.data.message);\n          dispatch(stopLoading());\n          resolve(res);\n        })\n        .catch((ex) => {\n          toast.error(ex.data.message)\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\n\n\nexport const getUserInfo = () => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.getUserInfo({\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          dispatch(stopLoading());\n          resolve(res);\n        })\n        .catch((ex) => {\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\nexport const getUserTrustedDevice = () => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.getUserTrustedDevice({\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          dispatch(stopLoading());\n          resolve(res);\n        })\n        .catch((ex) => {\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\n\n\n\n\n\nexport const resetUserPassword = data => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.resetUserPassword(data, {\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          toast.success(res.data.message);\n          dispatch(stopLoading());\n          resolve(res);\n        })\n        .catch((ex) => {\n          toast.error(ex.data.message)\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\n\n\n\nexport const updateUserKyc = data => {\n  return (dispatch, getState) => {\n    let state = getState();\n\n    dispatch(startLoading());\n    return new Promise((resolve, reject) => {\n      SecurityService.updateUserKyc(data, {\n        jwt: getToken(AUTH_TOKEN_KEY)\n      })\n        .then((res) => {\n          toast.success(res.data.message);\n          dispatch(stopLoading());\n          resolve(res);\n        })\n        .catch((ex) => {\n          toast.error(ex.data.message)\n          dispatch(stopLoading());\n          reject(ex);\n        });\n    });\n  };\n};\n\n\n\n\n\n\n\n\n\n","/home/user/Desktop/nm/SaitaSwap/src/redux/actions/FarmAction.js",[],"/home/user/Desktop/nm/SaitaSwap/src/redux/actions/RegisterActions.js",[],"/home/user/Desktop/nm/SaitaSwap/src/assets/tokens/index.js",["577","578","579","580","581","582","583","584","585","586"],"/home/user/Desktop/nm/SaitaSwap/src/services/Fetch.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/TransactionalModal/TransactionalModal.js",["587","588"],"/home/user/Desktop/nm/SaitaSwap/src/redux/actions/AuthActions.js",[],"/home/user/Desktop/nm/SaitaSwap/src/services/FarmService.js",["589"],"import { MAIN_CONTRACT_LIST } from \"../assets/tokens\";\nimport { toast } from \"../components/Toast/Toast\";\nimport { ContractServices } from \"./ContractServices\";\n\n\nconst poolLength = async () => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    return await contract.methods.poolLength().call();\n  } catch (error) {\n    return error;\n  }\n};\n\nconst poolInfo = async (index, type) => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    const result = await contract.methods.poolInfo(index).call();\n    const poolType = await contract.methods.poolType(result.lpToken).call();\n    if (poolType === type) {\n      return result;\n    }\n    return false;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst niobId = async () => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    return await contract.methods.niobId().call();\n  } catch (error) {\n    return error;\n  }\n};\n\n\nconst farmAndPoolInfo = async (index) => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    const result = await contract.methods.poolInfo(index).call();\n    const poolType = await contract.methods.poolType(result.lpToken).call();\n\n    if (poolType === '1') {\n      return { farm: result, pool: false };\n    }\n    if (poolType === '2') {\n      return { farm: false, pool: result };\n    }\n    return false;\n  } catch (error) {\n    return error;\n  }\n};\nconst totalPoolInfo = async (index, type) => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    const result = await contract.methods.poolInfo(index).call();\n    const web3 = await ContractServices.callWeb3();\n    const latest = await web3.eth.getBlockNumber();\n    return { poolInfo: result, latest };\n  } catch (error) {\n    return error;\n  }\n};\n\nconst getLpTokenDetails = async (lpToken) => {\n  try {\n    const contract = await ContractServices.callContract(lpToken, MAIN_CONTRACT_LIST.pair.abi);\n    const decimals = await contract.methods.decimals().call();\n    const token0 = await contract.methods.token0().call();\n    const token1 = await contract.methods.token1().call();\n\n    let symbol0 = await ContractServices.getTokenSymbol(token0);\n    if (symbol0 === 'WETH') {\n      symbol0 = 'BNB';\n    }\n\n    let symbol1 = await ContractServices.getTokenSymbol(token1);\n    if (symbol1 === 'WETH') {\n      symbol1 = 'BNB';\n    }\n    const lpTokenName = `${symbol0}-${symbol1} LP`;\n    return {\n      token0,\n      token1,\n      symbol0,\n      symbol1,\n      decimals,\n      lpTokenName,\n    };\n  } catch (err) {\n    return err;\n  }\n}\nconst getPoolTokenDetails = async (lpToken) => {\n  try {\n    const decimals = await ContractServices.getDecimals(lpToken);\n\n\n    let symbol = await ContractServices.getTokenSymbol(lpToken);\n    if (symbol === 'WETH') {\n      symbol = 'BNB';\n    }\n\n    return {\n      symbol,\n      lpTokenName: symbol,\n      decimals\n    };\n  } catch (err) {\n    return err;\n  }\n}\nconst userInfo = async (index, address) => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    return await contract.methods.userInfo(index, address).call();\n  } catch (err) {\n    console.log(\"Error:\", err);\n    return err;\n  }\n}\n\nconst poolInfoo = async (index, address) => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    return await contract.methods.niob().call();\n  } catch (err) {\n    return err;\n  }\n}\n\n\n\nconst deposit = async (data) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let {\n        pid,\n        amount,\n        referrer,\n        from\n      } = data;\n      const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n      const gasPrice = await ContractServices.calculateGasPrice();\n\n      const gas = await contract.methods.deposit(\n        pid,\n        amount,\n        referrer\n      ).estimateGas({ from, value: 0 });\n\n      contract.methods.deposit(\n        pid,\n        amount,\n        referrer\n      ).send({ from, gasPrice, gas, value: 0 })\n        .on('transactionHash', (hash) => {\n          resolve(hash);\n        })\n        .on('receipt', (receipt) => {\n          resolve(receipt)\n          toast.success('Token deposited successfully');\n        })\n        .on('error', (error, receipt) => {\n          reject(error);\n        });\n    } catch (error) {\n      reject(error);\n      return error;\n    }\n  });\n}\nconst withdraw = async (data) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let {\n        pid,\n        amount,\n        from\n      } = data;\n      const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n      const gasPrice = await ContractServices.calculateGasPrice();\n\n      const gas = await contract.methods.withdraw(\n        pid,\n        amount\n      ).estimateGas({ from, value: 0 });\n\n      contract.methods.withdraw(\n        pid,\n        amount\n      ).send({ from, gasPrice, gas, value: 0 })\n        .on('transactionHash', (hash) => {\n          resolve(hash);\n        })\n        .on('receipt', (receipt) => {\n          toast.success('LP withdrawn successfully.');\n        })\n        .on('error', (error, receipt) => {\n          reject(error);\n        });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nconst withdrawNiob = async (data) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let {\n        pid,\n        amount,\n        from\n      } = data;\n      const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n      const gasPrice = await ContractServices.calculateGasPrice();\n\n      const gas = await contract.methods.withdrawNiob(\n        amount\n      ).estimateGas({ from, value: 0 });\n\n      contract.methods.withdrawNiob(\n        amount\n      ).send({ from, gasPrice, gas, value: 0 })\n        .on('transactionHash', (hash) => {\n          resolve(hash);\n        })\n        .on('receipt', (receipt) => {\n          toast.success('LP withdrawn successfully.');\n        })\n        .on('error', (error, receipt) => {\n          reject(error);\n        });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nconst canHarvest = async (pid, address) => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    return await contract.methods.canHarvest(pid, address).call();\n  } catch (err) {\n    return err;\n  }\n}\nconst pendingPanther = async (pid, address) => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    return await contract.methods.pendingNiob(pid, address).call();\n  } catch (err) {\n    return err;\n  }\n}\n\nconst totalAllocationPoint = async () => {\n  try {\n    const contractFarm = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    return await contractFarm.methods.totalAllocPoint().call();\n  } catch (err) {\n    return err;\n  }\n}\nconst pantherPerBlock = async () => {\n  try {\n    const contractFarm = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    return await contractFarm.methods.niobPerBlock().call();\n  } catch (err) {\n    return err;\n  }\n}\nconst getNiob = async (address) => {\n  try {\n    const contract = await ContractServices.callContract(MAIN_CONTRACT_LIST.farm.address, MAIN_CONTRACT_LIST.farm.abi);\n    //const decimals = await ContractServices.getDecimals(address);\n    const res = await contract.methods.getWithdrawableNiob(address).call();\n    let niobTokens = 0;\n    if (res[0]) {\n      niobTokens = (res[0] / 10 ** 18);\n    }\n    return niobTokens;\n  } catch (error) {\n    return error;\n  }\n};\nexport const FarmService = {\n  poolLength,\n  poolInfo,\n  getLpTokenDetails,\n  userInfo,\n  deposit,\n  withdraw,\n  withdrawNiob,\n  canHarvest,\n  pendingPanther,\n  getPoolTokenDetails,\n  poolInfoo,\n  totalAllocationPoint,\n  pantherPerBlock,\n  totalPoolInfo,\n  farmAndPoolInfo,\n  niobId,\n  getNiob\n};\n","/home/user/Desktop/nm/SaitaSwap/src/components/SwapModal/SwapModal.js",["590","591","592","593","594"],"import './SwapModal.scss'\nimport { Link } from \"react-router-dom\";\nimport Card from \"../Card/Card\";\nimport closeBtn from \"../../assets/images/ionic-md-close.svg\";\nimport { Col, Row, Modal, Button } from \"react-bootstrap\";\n\nconst SwapModal = ({\n  closeModal,\n  tokenOneCurrency,\n  tokenTwoCurrency,\n  tokenOneValue,\n  tokenTwoValue,\n  tokenOneIcon,\n  tokenTwoIcon,\n  sharePoolValue,\n  handleSwap,\n  priceImpact,\n  liquidityProviderFee,\n  show,\n}) => {\n  return (\n    <>\n      <Modal\n        centered\n        scrollable={true}\n        className=\"connect_wallet supply_mode\"\n        show={show}\n        onHide={closeModal}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>You are creating a pool</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <ul className=\"swap_confirmation\">\n              <li>\n                <p>\n                  <img src={tokenOneIcon} alt=\"icon\" className='me-2' />\n                  {tokenOneValue}\n                </p>{\" \"}\n                <span> {tokenOneCurrency}</span>\n              </li>\n              <li>\n                <p>\n                  <img src={tokenTwoIcon} alt=\"icon\" className=\"me-2\" />\n                  {tokenTwoValue}\n                </p>{\" \"}\n                <span> {tokenTwoCurrency}</span>\n              </li>\n              <li>\n                Price:{\" \"}\n                <span>\n                  {\" \"}\n                  {sharePoolValue} {tokenOneCurrency}/ {tokenTwoCurrency}\n                </span>\n              </li>\n              <li>\n                Price Impact: <span>{priceImpact}%</span>\n              </li>\n              <li>\n                Liquidity provider fee: <span>{liquidityProviderFee}</span>\n              </li>\n            </ul>\n            <div className=\"col modal_headerStyle__rowC_colRight Confirm_btn\">\n              <button className=\"btn buttonStyle full\" onClick={() => handleSwap()}>\n                Confirm\n              </button>\n            </div>\n          </Row>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default SwapModal;\n","/home/user/Desktop/nm/SaitaSwap/src/components/FarmCard/FarmCard.js",["595","596"],"import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport ButtonLink from \"../buttonLink/ButtonLink\";\nimport { rootName } from \"../../constant\";\nimport farmicon from \"../../assets/images/farm-button-icon.png\";\nimport './FarmCard.scss'\nimport { useHistory } from 'react-router';\n\nconst FarmCard = props => {\n    const history = useHistory();\n\n    return (\n       <Card className=\"farmcard\">\n           <div className=\"d-flex\">\n                <div className=\"cions\">\n                    <span className=\"coin_imgs uppr\"><img src={props.icon1} alt={\"icon\"}/></span>\n                    <span className=\"coin_imgs dwn\"><img src={props.icon2} alt={\"icon\"}/></span>\n                </div>\n                <div className=\"coin_name\">\n                    <h3 className=\"coin_title\">{props.title}-{props.title1}</h3>\n                    <span>Liquidity {props.liquidity}</span>\n                </div>\n            </div> \n            <div className=\"direction\">\n                <h3>APR {props.apy}</h3>\n                <ButtonLink title=\"Farm\" icon={farmicon} link=\"/farmplanets/active\" />\n            </div>\n       </Card>\n    )\n}\n\nexport default FarmCard;","/home/user/Desktop/nm/SaitaSwap/src/components/coinItem/CoinItem.js",["597","598"],"import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport \"./CoinItemStyle.scss\";\n\nconst CoinItem = (props) => {\n  \n  return (\n    <>\n    <Col {...props} className={`coinItem_style ${props.className}`}>\n      <img src={props.iconImage} />\n      <p className=\"titleStyle\">{props.title}</p>\n    </Col>\n    </>\n  );\n};\nexport default CoinItem;","/home/user/Desktop/nm/SaitaSwap/src/components/ReturnInvest/ReturnInvest.js",["599","600","601","602"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Col, Row, Modal, Button, Table } from 'react-bootstrap'\nimport './ReturnInvest.scss'\nconst ReturnInvest = ({ roiModalData, handleClose, lpDetails, show, niobId }) => {\n    const handleROI = (day, liquidity) => {\n        const lq = liquidity ? 1000 : roiModalData?.liquidity;\n        let apr;\n        if (niobId == 12) {\n             apr = (((roiModalData?.allocPoint / roiModalData?.totalAllcationPoint) * ((roiModalData?.anchorPerBlock / 10 ** 18) * 28800 * day * 100 * roiModalData?.anchorPrice)) / lq) * 10.5537;\n        }\n        else {\n             apr = ((roiModalData?.allocPoint / roiModalData?.totalAllcationPoint) * ((roiModalData?.anchorPerBlock / 10 ** 18) * 28800 * day * 100 * roiModalData?.anchorPrice)) / lq;\n        }\n        return isNaN(apr) ? 0 : apr.toFixed(2);\n    }\n\n    const handleAnchorPerThousand = (day) => {\n        const totalLpWorth = roiModalData?.liquidity;\n        let anchorPerThousand;\n        if (niobId == 12) {\n          anchorPerThousand = ((1000 * (roiModalData?.anchorPerBlock / 10 ** 18) * 28800 * day * (roiModalData?.allocPoint / roiModalData?.totalAllcationPoint)) / totalLpWorth) * 10.5537;\n        } else {\n          anchorPerThousand = (1000 * (roiModalData?.anchorPerBlock / 10 ** 18) * 28800 * day * (roiModalData?.allocPoint / roiModalData?.totalAllcationPoint)) / totalLpWorth;\n        }\n        return isNaN(anchorPerThousand) ? 0 : anchorPerThousand.toFixed(2);\n    }\n    return (\n        <Modal centered scrollable={true} className=\"connect_wallet return_invest\" show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Return on Invest</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col className=\"lp_tokens\">\n                        <div className=\"invest_area\">\n                            <Table>\n                                <thead>\n                                    <tr>\n                                        <th>Timeframe</th>\n                                        <th>ROI</th>\n                                        <th>NIOB per $1000</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>1d</td>\n                                        <td>{handleROI(1, false)}%</td>\n                                        <td>{handleAnchorPerThousand(1)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>7d</td>\n                                        <td>{handleROI(7, false)}%</td>\n                                        <td>{handleAnchorPerThousand(7)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>30d</td>\n                                        <td>{handleROI(30, false)}%</td>\n                                        <td>{handleAnchorPerThousand(30)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>365d(APR)</td>\n                                        <td>{handleROI(365, false)}%</td>\n                                        <td>{handleAnchorPerThousand(365)}</td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                            <p>Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.</p>\n                            <div className=\"confirmation\">\n                                <Link to=\"trade/liquidity/addLiquidity\" className=\"btn buttonStyle\" onClick={handleClose}>Get {lpDetails?.lpTokenName} </Link>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default ReturnInvest;\n","/home/user/Desktop/nm/SaitaSwap/src/components/GetLPToken/GetLPToken.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/GetLPToken/WithDrawLPToken.js",["603","604","605"],"import React, { useEffect, useState } from 'react'\nimport { Col, Row, Modal, Button, Form, InputGroup, FormControl } from 'react-bootstrap'\nimport './GetLPToken.scss'\nimport { FarmService } from '../../services/FarmService'\nimport { toast } from '../Toast/Toast'\n\n\nconst WithDrawLPToken = props => {\n    const [symbolsArr] = useState([\"e\", \"E\", \"+\", \"-\"]);\n    const [niobWithdrawable, setNiob] = useState(0);\n    useEffect(() => {\n        \n        if (props.isNiobWithdrawabe && props?.stakeData?.isLocked) init();\n    }, []);\n\n    const init = async () => {\n        const niob = await FarmService.getNiob(props.address);\n        setNiob(niob);\n    }\n\n    const checkIfAmountGreaterThanWithdrawable = (value, isLocked) => {\n        // console.log('oooo', props.farms.isLocked);\n        // if ( (props.isNiobWithdrawabe && props?.stakeData?.isLocked) && value > niobWithdrawable) {\n            // toast.error('Amount greater than withdrawable !')\n        // } else {\n            props.depositWithdraw('withdraw', isLocked);\n        // }\n    }\n\n    return (\n        <Modal centered scrollable={true} className=\"connect_wallet get_tokens\" show={props.show} onHide={props.closeStakeModal}>\n            <Modal.Header closeButton>\n                <Modal.Title>Withdraw {props.stakeData?.lpTokenDetails?.lpTokenName} Tokens</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col className=\"lp_tokens\">\n                        <Form className=\"lptokn_area\">\n                            <p className=\"text-end\"><span>{props.stakeData?.balance}</span> {props.stakeData?.lpTokenDetails?.lpTokenName} available</p>\n                            {/* {(props.isNiobWithdrawabe && props?.stakeData?.isLocked) &&\n                                <p className=\"text-end\"><span>{niobWithdrawable ? niobWithdrawable?.toFixed(4) : 0}</span> Withdrawable Niob</p>} */}\n                            <InputGroup>\n                                <FormControl\n                                    onKeyDown={(evt) => { symbolsArr.includes(evt.key) && evt.preventDefault() }}\n                                    type=\"number\"\n                                    id=\"search\"\n                                    autoCorrect=\"off\"\n                                    autoComplete=\"off\"\n                                    placeholder=\"0.0\"\n                                    minLength={1}\n                                    maxLength={79}\n                                    value={props.stakeValue}\n                                    onChange={(e) => props.handleStakeValue(e)}\n                                />\n                                <div className=\"action\">\n                                    <span className=\"token_name\"></span>\n                                    <Button onClick={() => props.setMaxValue()} className=\"max_btn cm_btn\">Max</Button>\n                                </div>\n                            </InputGroup>\n                            <div className=\"confirmation\">\n                                <Button onClick={() => props.closeStakeModal()} className=\"cancel_btn\">Cancel</Button>\n                                {/* <Button disabled={props.stakeConfirmation} onClick={() => props.depositWithdraw('withdraw')} className=\"cm_btn confirm\">Confirm</Button> */}\n                                <Button disabled={props.stakeConfirmation} onClick={() => checkIfAmountGreaterThanWithdrawable(props.stakeValue, props.stakeData.isLocked)} className=\"cm_btn confirm\">Confirm</Button>\n                            </div>\n                        </Form>\n                    </Col>\n                </Row>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default WithDrawLPToken;\n","/home/user/Desktop/nm/SaitaSwap/src/components/GalaxyCard/GalaxyCard.js",["606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639"],"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/Liquidity.js",["640","641","642","643","644","645","646","647"],"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/ImportPool.js",["648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667"],"/home/user/Desktop/nm/SaitaSwap/src/services/SecurityService.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/TransactionModal/TransactionModal.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/PlanetCard/PlanetCard.js",["668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696"],"import React, { useEffect, useState } from \"react\";\nimport ButtonCustom from \"../Button/Button\";\nimport { Button } from \"react-bootstrap\";\nimport \"./PlanetCard.scss\";\nimport RightArrow from \"../../assets/images/right-arrow.png\";\nimport DownArrow from \"../../assets/images/down-arrow.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport {\n  MAIN_CONTRACT_LIST,\n  WETH,\n  ANCHOR_BUSD_LP,\n  TOKEN_LIST,\n  BNB_BUSD_LP,\n} from \"../../assets/tokens\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { BigNumber } from \"bignumber.js\";\nimport { toast } from \"../Toast/Toast\";\nimport { addTransaction, startLoading, stopLoading } from \"../../redux/actions\";\nimport { addCommas } from \"../../constant\";\nimport NIOB from \"../../assets/images/token_icons/NIOB.svg\";\n\nconst PlanetCard = (props) => {\n  const [classToggle, setClassToggle] = useState(false);\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const {\n    farm: { poolInfo, userInfo, pid },\n    index,\n    currentIndex,\n    handleChange,\n    harvestOnClick,\n    stakeHandle,\n    handleRoiModal,\n    status,\n  } = props;\n\n  const [lpTokenDetails, setLpTokenDetails] = useState(null);\n  const [showIncrease, setShowIncrease] = useState(false);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [liquidity, setLiquidity] = useState(0);\n  const [worth, setWorth] = useState(0);\n  const [showApproveButton, setShowApproveButton] = useState(true);\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const [stakeAmounts, setStakeAmounts] = useState({ amount: 0, rewards: 0 });\n  const [apr, setApr] = useState(0);\n  const [roi, setROI] = useState({\n    allocPoint: 0,\n    totalAllcationPoint: 0,\n    anchorPerBlock: 0,\n    anchorPrice: 0,\n    liquidity: 0,\n    lpWorth: 0,\n  });\n  const [dollarValue, setAnchorDollarValue] = useState(0.01);\n\n  const getAnchorDollarValue = async () => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n        let reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        // const token0 = await ExchangeService.getTokenZero(poolInfo.lpToken);\n        // const token1 = await ExchangeService.getTokenOne(poolInfo.lpToken);\n\n        // if ((token0.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) || (token1.toLowerCase() === TOKEN_LIST[1].address.toLowerCase())) {\n        //   reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        // } else {\n\n        //   //const pair = await ExchangeService.getPairFromPancakeFactory(poolInfo.lpToken);\n        //   reserves = await ExchangeService.getReserves(poolInfo.lpToken);\n        // }\n\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const getDollarAPR = async (address) => {\n    try {\n      if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n        const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      } else if (\n        address.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()\n      ) {\n        return 1;\n      } else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n        const pair = await ExchangeService.getPairFromPancakeFactory(\n          address,\n          TOKEN_LIST[2].address\n        );\n        const reserves = await ExchangeService.getReserves(pair);\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const init = async () => {\n    if (poolInfo) {\n      // console.log(\"Pool Info:\", poolInfo);\n      const { lpToken } = poolInfo;\n      if (lpToken) {\n        const totalSupplyTemp = await ContractServices.getTotalSupply(lpToken);\n        setTotalSupply(totalSupplyTemp);\n        const liquidity = await handleLiquidity(lpToken);\n        setLiquidity(liquidity);\n        const tokenStaked = await ExchangeService.getTokenStaked(lpToken);\n        const lpWorth = liquidity / tokenStaked;\n        setWorth(lpWorth);\n        const lpTokenDetailsTemp = await FarmService.getLpTokenDetails(lpToken);\n        setLpTokenDetails(lpTokenDetailsTemp);\n\n        const a = await calculateAPR(\n          Number(poolInfo.allocPoint),\n          lpToken,\n          liquidity\n        );\n        lpTokenDetailsTemp.apr = a;\n        setApr(a);\n\n        if (isUserConnected) {\n          const allowance = await ContractServices.allowanceToken(\n            lpToken,\n            MAIN_CONTRACT_LIST.farm.address,\n            isUserConnected\n          );\n          let check = true;\n          if (\n            BigNumber(allowance).isGreaterThanOrEqualTo(BigNumber(2 * 255 - 1))\n          ) {\n            setShowApproveButton(false);\n            check = false;\n          }\n\n          let balance = await ContractServices.getTokenBalance(\n            poolInfo.lpToken,\n            isUserConnected\n          );\n          if (balance > 0.00001) {\n            balance -= 0.00001;\n          }\n          setBalance(balance);\n          const amount = userInfo.amount / 10 ** lpTokenDetailsTemp.decimals;\n          // const amount = Number(\n          //   (\n          //     Number(userInfo.amount) /\n          //     10 ** Number(lpTokenDetailsTemp.decimals)\n          //   )\n          // ).toFixed(18)\n\n          const rewards = Number(\n            Number(\n              (await FarmService.pendingPanther(pid, isUserConnected)) /\n                10 ** 18\n            ).toFixed(5)\n          );\n          if (!check && amount > 0) {\n            setShowIncrease(true);\n          }\n          setStakeAmounts({ amount, rewards });\n\n          //nextHarvest\n          const nextHarvestUntil = await FarmService.canHarvest(\n            pid,\n            isUserConnected\n          );\n          if (\n            !check &&\n            rewards > 0 &&\n            Number(userInfo.nextHarvestUntil) > 0 &&\n            nextHarvestUntil\n          ) {\n            setShowHarvest(true);\n          }\n        }\n      }\n    }\n  };\n  //call web3 approval function\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n    if (approvalConfirmation) {\n      return toast.info(\"Token approval is processing\");\n    }\n    // (2*256 - 1);\n    const value =\n      \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n\n    try {\n      dispatch(startLoading());\n      setApprovalConfirmation(true);\n      const r = await ContractServices.approveToken(\n        isUserConnected,\n        value,\n        MAIN_CONTRACT_LIST.farm.address,\n        poolInfo.lpToken\n      );\n      if (r) {\n        let data = {\n          message: `Approve LP Token`,\n          tx: r.transactionHash,\n        };\n        dispatch(addTransaction(data));\n        setApprovalConfirmation(false);\n        init();\n      }\n      dispatch(stopLoading());\n    } catch (err) {\n      setApprovalConfirmation(false);\n      dispatch(stopLoading());\n      toast.error(\"Approval Transaction Reverted!\");\n    }\n  };\n\n  const beforeStake = async (type) => {\n    if (isUserConnected) {\n      let bal = 0;\n      if (type === \"deposit\") {\n        bal = balance;\n      }\n      if (type === \"withdraw\") {\n        bal = stakeAmounts.amount;\n      }\n      stakeHandle({ pid, poolInfo, lpTokenDetails, balance: bal }, type);\n    } else {\n      return toast.error(\"Connect wallet first!\");\n    }\n  };\n\n  const calPrice = async (pairAddress) => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    }\n\n    // console.log(\"pairAddresspairAddress\", pairAddress);\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    // console.log(tokenZero, TOKEN_LIST[2].address);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2]?.address.toLowerCase()) {\n      return (price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero));\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2]?.address.toLowerCase()) {\n      return (price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne));\n    }\n\n    let priceBNBToUSD = await calPrice(BNB_BUSD_LP); //replace with BNB-USD pair\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero);\n      return price * priceBNBToUSD;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne);\n      return price * priceBNBToUSD;\n    }\n  };\n\n  const calculateAPR = async (allocPoint, lpToken, lpWorth) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(\n      await FarmService.totalAllocationPoint()\n    );\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock());\n    //need to calculate usd price.\n    const liquidity = await handleLiquidity(lpToken);\n    // console.log(\"liquidity: \", liquidity);\n    if (liquidity != 0) {\n      const apr =\n        ((allocPoint / totalAllcationPoint) *\n          ((anchorPerBlock / 10 ** 18) * 28800 * 365 * 100 * anchorPrice)) /\n        liquidity;\n      setROI({\n        allocPoint,\n        totalAllcationPoint,\n        anchorPerBlock,\n        anchorPrice,\n        liquidity,\n        lpWorth,\n      });\n\n      return apr.toFixed(2);\n    }\n\n    return 0;\n  };\n  const handleLiquidity = async (pairAddress) => {\n    if (pairAddress != \"0x0000000000000000000000000000000000000000\") {\n      const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n      const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n      const reserve = await ExchangeService.getReserves(pairAddress);\n\n      const tokenZeroPairUSDT = await ExchangeService.getPair(\n        tokenZero,\n        TOKEN_LIST[2]?.address\n      );\n      const tokenOnePairUSDT = await ExchangeService.getPair(\n        tokenOne,\n        TOKEN_LIST[2]?.address\n      );\n\n      const tokenZeroPairBNB = await ExchangeService.getPair(tokenZero, WETH);\n      const tokenOnePairBNB = await ExchangeService.getPair(tokenOne, WETH);\n\n      const decimalZero = await ContractServices.getDecimals(tokenZero);\n      const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n      let priceA = await getDollarAPR(tokenZero);\n      let priceB = await getDollarAPR(tokenOne);\n\n      // if (tokenZero.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceA = 1;\n      // } else if (tokenZero.toLowerCase() == WETH.toLowerCase()) {\n      //   //  priceA = await calPrice(BNB_BUSD_LP);\n      //   priceA = await getDollarAPR(tokenZero);\n      // }\n\n      // if (tokenOne.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceB = 1;\n      // } else if (tokenOne.toLowerCase() == WETH.toLowerCase()) {\n      //   //priceB = await calPrice(BNB_BUSD_LP);\n      //   priceB = await getDollarAPR(tokenOne);\n      // }\n\n      // if (priceA == 0) {\n      //   if (tokenZeroPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     // priceA = await calPrice(tokenZeroPairUSDT);\n      //     priceB = await getDollarAPR(tokenOne);\n      //   } else if (\n      //     tokenZeroPairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     //  priceA = await calPrice(tokenZeroPairBNB);\n      //     priceA = await getDollarAPR(tokenZero);\n      //   } else {\n      //     priceA = 0;\n      //   }\n      // }\n\n      // if (priceB == 0) {\n      //   if (tokenOnePairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceB = await getDollarAPR(tokenOne);\n      //   } else if (\n      //     tokenOnePairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceB = await getDollarAPR(tokenOne);\n      //   } else {\n      //     priceB = 0;\n      //   }\n      // }\n\n      const totalSupply = await ExchangeService.getTotalSupply(pairAddress);\n      const tokenStaked = await ExchangeService.getTokenStaked(pairAddress);\n      console.log(\"PriceA:\", priceA);\n      console.log(\"PriceB:\", priceB);\n      console.log(\"reserve:\", reserve);\n      const liquidity =\n        (((reserve[0] / 10 ** decimalZero) * priceA +\n          (reserve[1] / 10 ** decimalOne) * priceB) /\n          totalSupply) *\n        tokenStaked;\n\n      return liquidity;\n    }\n    return 0;\n  };\n  const handleIcon = (symbol) => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(\n        (d) => d.symbol.toLowerCase() === symbol.toLowerCase()\n      );\n      return tokenObj != undefined && tokenObj.icon;\n    }\n  };\n\n  const handleDefaultIcon = (symbol) => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(\n        (d) => d.symbol.toLowerCase() === symbol.toLowerCase()\n      );\n      let index = tokenObj != undefined && tokenObj.icon.lastIndexOf(\"/\") + 1;\n      let filename = tokenObj != undefined && tokenObj.icon.substr(index);\n      return filename == \"default.60b90c93.svg\" ? \"farm-coin\" : \"\";\n    }\n  };\n  const earnedNiobValue = (dollarValue, rewards) => {\n    console.log(\"DOllar value:\", dollarValue);\n    let fixedAfterDecimal = Number(0.01 * rewards).toFixed(9);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  };\n\n  const earnedDollarValue = (dollarValue, rewards) => {\n    let fixedAfterDecimal = Number(dollarValue * rewards).toFixed(9);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  };\n  useEffect(async () => {\n    await getAnchorDollarValue();\n    init();\n    // console.log('userInfo.amount', userInfo.amount);\n  }, [isUserConnected]);\n\n  return (\n    <>\n      <Button\n        className={`planet_bar`}\n        onClick={() => setClassToggle(!classToggle)}\n      >\n        <div className=\"cions\">\n          <span className=\"coin_imgs uppr\">\n            <img\n              src={\n                handleIcon(lpTokenDetails?.symbol0)\n                  ? handleIcon(lpTokenDetails?.symbol0)\n                  : \"\"\n              }\n            />\n          </span>\n          <span className=\"coin_imgs dwn\">\n            <img\n              src={\n                handleIcon(lpTokenDetails?.symbol1)\n                  ? handleIcon(lpTokenDetails?.symbol1)\n                  : \"\"\n              }\n            />\n          </span>\n          <span className=\"coin_title\">{lpTokenDetails?.lpTokenName}</span>\n        </div>\n        {poolInfo.depositFeeBP && Number(poolInfo.depositFeeBP) === 0 && (\n          <div className=\"info_about_card_feeinfo\">\n            {\" \"}\n            <img src={props.fee_icon} alt=\"\" /> No Fee\n          </div>\n        )}\n        <div className=\"prcentx\">{poolInfo?.allocPoint}X</div>\n        <div className=\"coin_detail\">\n          {status && (\n            <div className=\"apr\">\n              <span>APR</span>\n              {/* <span className=\"token-icon\" onClick={() => handleRoiModal(roi, lpTokenDetails)}> */}\n              {/* <svg viewBox=\"0 0 25 24\" color=\"text\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\" className=\"sc-bdfBwQ dhaIlc\"><path d=\"M19.2 3H5.19995C4.09995 3 3.19995 3.9 3.19995 5V19C3.19995 20.1 4.09995 21 5.19995 21H19.2C20.3 21 21.2 20.1 21.2 19V5C21.2 3.9 20.3 3 19.2 3ZM19.2 19H5.19995V5H19.2V19Z\" fill=\"#1FC7D4\"></path><path d=\"M11.45 7.72021H6.44995V9.22022H11.45V7.72021Z\" fill=\"#1FC7D4\"></path><path d=\"M18.2 15.75H13.2V17.25H18.2V15.75Z\" fill=\"#1FC7D4\"></path><path d=\"M18.2 13.25H13.2V14.75H18.2V13.25Z\" fill=\"#1FC7D4\"></path><path d=\"M8.19995 18H9.69995V16H11.7V14.5H9.69995V12.5H8.19995V14.5H6.19995V16H8.19995V18Z\" fill=\"#1FC7D4\"></path><path d=\"M14.29 10.95L15.7 9.54L17.11 10.95L18.17 9.89L16.76 8.47L18.17 7.06L17.11 6L15.7 7.41L14.29 6L13.23 7.06L14.64 8.47L13.23 9.89L14.29 10.95Z\" fill=\"#1FC7D4\"></path></svg></span> */}\n              <p>{addCommas(apr) === \"NaN\" || NaN ? 0 : addCommas(apr)}%</p>\n            </div>\n          )}\n          <div className=\"lqdty\">\n            <span>Liquidity</span>\n            <p>\n              $\n              {addCommas(Number(liquidity.toFixed(2))) === \"NaN\" || NaN\n                ? 0\n                : addCommas(Number(liquidity.toFixed(2)))}\n            </p>\n          </div>\n          <div className=\"erndniob\">\n            <span>Earned Niob</span>\n            <p>\n              {addCommas(stakeAmounts.rewards) === \"NaN\" || NaN\n                ? 0\n                : addCommas(stakeAmounts.rewards)}\n            </p>\n            <p>\n              ${\" \"}\n              {earnedNiobValue(dollarValue, stakeAmounts.rewards) === \"NaN\" ||\n              NaN\n                ? 0\n                : earnedNiobValue(dollarValue, stakeAmounts.rewards)}\n            </p>\n          </div>\n        </div>\n        <div className=\"dtl_btn\">\n          <p>\n            Details{\" \"}\n            <span>\n              <img src={DownArrow} />\n            </span>\n          </p>\n        </div>\n      </Button>\n      <div className={classToggle ? \"planet_strip\" : \"d-none\"}>\n        <div className=\"available_funds\">\n          <div className=\"funds\">\n            {isUserConnected ? (\n              <>\n                {showIncrease ? (\n                  <div className=\"cardFarm_increase\">\n                    <button\n                      type=\"button\"\n                      onClick={() => beforeStake(\"withdraw\")}\n                    >\n                      <span>-</span>\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => beforeStake(\"deposit\")}\n                    >\n                      <span>+</span>\n                    </button>\n                  </div>\n                ) : (\n                  <>\n                    {showApproveButton ? (\n                      <Button\n                        className=\"funds_btn\"\n                        onClick={() => handleTokenApproval()}\n                      >\n                        Enable Farm\n                      </Button>\n                    ) : (\n                      <Button\n                        className=\"funds_btn\"\n                        onClick={() => beforeStake(\"deposit\")}\n                      >\n                        Stake\n                      </Button>\n                    )}\n                  </>\n                )}\n              </>\n            ) : (\n              <>\n                <Button\n                  onClick={() => toast.error(\"Connect to wallet first!\")}\n                  className=\"funds_btn\"\n                >\n                  Unlock Wallet\n                </Button>\n              </>\n            )}\n            <div className=\"count_funds\">\n              <span>Available LP</span>\n              <p>{balance} LP</p>\n              <span>LP Worth - </span>\n              <span>${addCommas(Number(worth.toFixed(2)))}</span>\n            </div>\n            <span className=\"forwd_arrow\">\n              <img src={RightArrow} alt={\"right-arrow\"} />\n            </span>\n          </div>\n          <div className=\"funds\">\n            {/* <Button disabled={!showApproveButton} onClick={() => handleTokenApproval()} className=\"funds_btn\">Enable Farm</Button> */}\n            <div className=\"count_funds\">\n              <span>{lpTokenDetails?.lpTokenName} STAKED</span>\n              {showIncrease ? (\n                <p> {addCommas(stakeAmounts.amount)}</p>\n              ) : (\n                <p>0</p>\n              )}\n              <span>\n                $\n                {earnedDollarValue(stakeAmounts.amount, worth) === \"NaN\" || NaN\n                  ? 0\n                  : earnedDollarValue(stakeAmounts.amount, worth)}\n              </span>\n            </div>{\" \"}\n            <span className=\"forwd_arrow\">\n              <img src={RightArrow} alt={\"right-arrow\"} />\n            </span>\n          </div>\n          <div className=\"funds\">\n            <Button\n              onClick={() => {\n                setShowHarvest(false);\n                harvestOnClick(pid, lpTokenDetails?.lpTokenName);\n              }}\n              disabled={!showHarvest}\n              className=\"funds_btn\"\n            >\n              Harvest\n            </Button>\n            <div className=\"count_funds\">\n              <span>Earned</span>\n              <p>\n                {addCommas(stakeAmounts.rewards) === \"NaN\" || NaN\n                  ? 0\n                  : addCommas(stakeAmounts.rewards)}{\" \"}\n                NIOB\n              </p>\n              <span>\n                $\n                {earnedDollarValue(dollarValue, stakeAmounts.rewards) ===\n                  \"NaN\" || NaN\n                  ? 0\n                  : earnedDollarValue(dollarValue, stakeAmounts.rewards)}\n              </span>\n            </div>\n          </div>\n          <div className=\"funds\">\n            <div className=\"count_funds\">\n              <span>\n                Deposit Fee :{\" \"}\n                {poolInfo.depositFeeBP\n                  ? (Number(poolInfo.depositFeeBP) / 10000) * 100\n                  : 0}\n                %\n              </span>\n              <span className=\"d-block\">\n                Harvest Interval:{\" \"}\n                {poolInfo.harvestInterval\n                  ? Number((poolInfo.harvestInterval / 3600).toFixed(2))\n                  : 0}{\" \"}\n                Hour(s)\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PlanetCard;\n","/home/user/Desktop/nm/SaitaSwap/src/Helpers/storageHelper.js",[],"/home/user/Desktop/nm/SaitaSwap/src/components/Card/Card.js",[],"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/TokenBalance.js",["697"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContractServices } from '../../services/ContractServices';\n\nconst TokenBalance = ({ address }) => {\n\n      const [balance, setBalance] = useState('');\n      const isUserConnected = useSelector(state => state.persist.isUserConnected);\n\n      useEffect(() => {\n            init();\n      }, [isUserConnected, address]);\n\n      const init = async () => {\n            try {\n                  let res = 0;\n                  if (address === 'BNB') {\n                        res = await ContractServices.getBNBBalance(isUserConnected);\n                        setBalance(res);\n                  } else {\n                        res = await ContractServices.getTokenBalance(address, isUserConnected);\n                        setBalance(res);\n                  }\n            } catch (error) {\n                  console.log(error);\n            }\n      }\n\n      return <span className=\"tokenName_textStyle\">{balance}</span>\n\n}\n\nexport default TokenBalance;","/home/user/Desktop/nm/SaitaSwap/src/components/Modal/RemoveLiquidity/RemoveLiquidity.js",["698","699","700","701","702","703","704","705","706","707"],"/home/user/Desktop/nm/SaitaSwap/src/components/buttonLink/ButtonLink.js",[],"/home/user/Desktop/nm/SaitaSwap/src/pages/Trade/RangeSlider.js",[],{"ruleId":"708","replacedBy":"709"},{"ruleId":"710","replacedBy":"711"},{"ruleId":"712","severity":1,"message":"713","line":1,"column":17,"nodeType":"714","messageId":"715","endLine":1,"endColumn":26},{"ruleId":"712","severity":1,"message":"716","line":6,"column":8,"nodeType":"714","messageId":"715","endLine":6,"endColumn":20},{"ruleId":"712","severity":1,"message":"717","line":7,"column":10,"nodeType":"714","messageId":"715","endLine":7,"endColumn":21},{"ruleId":"712","severity":1,"message":"718","line":41,"column":13,"nodeType":"714","messageId":"715","endLine":41,"endColumn":18},{"ruleId":"712","severity":1,"message":"719","line":54,"column":15,"nodeType":"714","messageId":"715","endLine":54,"endColumn":23},{"ruleId":"720","severity":1,"message":"721","line":90,"column":31,"nodeType":"722","messageId":"723","endLine":90,"endColumn":32},{"ruleId":"720","severity":1,"message":"721","line":90,"column":37,"nodeType":"722","messageId":"723","endLine":90,"endColumn":38},{"ruleId":"712","severity":1,"message":"717","line":2,"column":23,"nodeType":"714","messageId":"715","endLine":2,"endColumn":34},{"ruleId":"712","severity":1,"message":"724","line":2,"column":17,"nodeType":"714","messageId":"715","endLine":2,"endColumn":25},{"ruleId":"712","severity":1,"message":"725","line":11,"column":8,"nodeType":"714","messageId":"715","endLine":11,"endColumn":20},{"ruleId":"712","severity":1,"message":"726","line":12,"column":10,"nodeType":"714","messageId":"715","endLine":12,"endColumn":18},{"ruleId":"727","severity":1,"message":"728","line":73,"column":9,"nodeType":"729","messageId":"730","endLine":73,"endColumn":39},{"ruleId":"712","severity":1,"message":"731","line":1,"column":10,"nodeType":"714","messageId":"715","endLine":1,"endColumn":21},{"ruleId":"732","severity":1,"message":"733","line":29,"column":8,"nodeType":"734","endLine":29,"endColumn":10,"suggestions":"735"},{"ruleId":"736","severity":1,"message":"737","line":69,"column":33,"nodeType":"738","endLine":69,"endColumn":57},{"ruleId":"736","severity":1,"message":"737","line":77,"column":33,"nodeType":"738","endLine":77,"endColumn":57},{"ruleId":"712","severity":1,"message":"739","line":1,"column":17,"nodeType":"714","messageId":"715","endLine":1,"endColumn":26},{"ruleId":"712","severity":1,"message":"740","line":22,"column":3,"nodeType":"714","messageId":"715","endLine":22,"endColumn":8},{"ruleId":"712","severity":1,"message":"741","line":23,"column":3,"nodeType":"714","messageId":"715","endLine":23,"endColumn":7},{"ruleId":"712","severity":1,"message":"742","line":24,"column":3,"nodeType":"714","messageId":"715","endLine":24,"endColumn":17},{"ruleId":"712","severity":1,"message":"743","line":25,"column":3,"nodeType":"714","messageId":"715","endLine":25,"endColumn":10},{"ruleId":"712","severity":1,"message":"744","line":26,"column":3,"nodeType":"714","messageId":"715","endLine":26,"endColumn":15},{"ruleId":"712","severity":1,"message":"745","line":27,"column":3,"nodeType":"714","messageId":"715","endLine":27,"endColumn":22},{"ruleId":"712","severity":1,"message":"746","line":28,"column":3,"nodeType":"714","messageId":"715","endLine":28,"endColumn":23},{"ruleId":"747","severity":1,"message":"748","line":48,"column":24,"nodeType":"722","messageId":"749","endLine":48,"endColumn":26},{"ruleId":"747","severity":1,"message":"748","line":91,"column":32,"nodeType":"722","messageId":"749","endLine":91,"endColumn":34},{"ruleId":"736","severity":1,"message":"737","line":252,"column":15,"nodeType":"738","endLine":252,"endColumn":38},{"ruleId":"736","severity":1,"message":"737","line":257,"column":13,"nodeType":"738","endLine":257,"endColumn":32},{"ruleId":"736","severity":1,"message":"737","line":263,"column":15,"nodeType":"738","endLine":263,"endColumn":35},{"ruleId":"750","severity":1,"message":"751","line":267,"column":13,"nodeType":"738","messageId":"752","endLine":267,"endColumn":65,"fix":"753"},{"ruleId":"736","severity":1,"message":"737","line":268,"column":15,"nodeType":"738","endLine":268,"endColumn":33},{"ruleId":"736","severity":1,"message":"737","line":273,"column":15,"nodeType":"738","endLine":273,"endColumn":35},{"ruleId":"750","severity":1,"message":"751","line":277,"column":13,"nodeType":"738","messageId":"752","endLine":277,"endColumn":71,"fix":"754"},{"ruleId":"736","severity":1,"message":"737","line":278,"column":15,"nodeType":"738","endLine":278,"endColumn":36},{"ruleId":"750","severity":1,"message":"751","line":282,"column":13,"nodeType":"738","messageId":"752","endLine":282,"endColumn":65,"fix":"755"},{"ruleId":"736","severity":1,"message":"737","line":283,"column":15,"nodeType":"738","endLine":283,"endColumn":37},{"ruleId":"712","severity":1,"message":"756","line":1,"column":28,"nodeType":"714","messageId":"715","endLine":1,"endColumn":36},{"ruleId":"712","severity":1,"message":"757","line":2,"column":37,"nodeType":"714","messageId":"715","endLine":2,"endColumn":48},{"ruleId":"732","severity":1,"message":"758","line":30,"column":8,"nodeType":"734","endLine":30,"endColumn":10,"suggestions":"759"},{"ruleId":"736","severity":1,"message":"737","line":60,"column":56,"nodeType":"738","endLine":60,"endColumn":77},{"ruleId":"736","severity":1,"message":"737","line":85,"column":55,"nodeType":"738","endLine":85,"endColumn":76},{"ruleId":"736","severity":1,"message":"737","line":86,"column":55,"nodeType":"738","endLine":86,"endColumn":77},{"ruleId":"712","severity":1,"message":"760","line":19,"column":10,"nodeType":"714","messageId":"715","endLine":19,"endColumn":22},{"ruleId":"712","severity":1,"message":"761","line":33,"column":9,"nodeType":"714","messageId":"715","endLine":33,"endColumn":24},{"ruleId":"712","severity":1,"message":"762","line":54,"column":10,"nodeType":"714","messageId":"715","endLine":54,"endColumn":13},{"ruleId":"712","severity":1,"message":"763","line":54,"column":15,"nodeType":"714","messageId":"715","endLine":54,"endColumn":21},{"ruleId":"712","severity":1,"message":"764","line":13,"column":3,"nodeType":"714","messageId":"715","endLine":13,"endColumn":29},{"ruleId":"712","severity":1,"message":"765","line":32,"column":8,"nodeType":"714","messageId":"715","endLine":32,"endColumn":14},{"ruleId":"712","severity":1,"message":"766","line":37,"column":8,"nodeType":"714","messageId":"715","endLine":37,"endColumn":24},{"ruleId":"712","severity":1,"message":"767","line":63,"column":10,"nodeType":"714","messageId":"715","endLine":63,"endColumn":16},{"ruleId":"712","severity":1,"message":"768","line":63,"column":18,"nodeType":"714","messageId":"715","endLine":63,"endColumn":27},{"ruleId":"712","severity":1,"message":"769","line":67,"column":10,"nodeType":"714","messageId":"715","endLine":67,"endColumn":17},{"ruleId":"712","severity":1,"message":"770","line":68,"column":10,"nodeType":"714","messageId":"715","endLine":68,"endColumn":22},{"ruleId":"712","severity":1,"message":"771","line":70,"column":10,"nodeType":"714","messageId":"715","endLine":70,"endColumn":20},{"ruleId":"712","severity":1,"message":"772","line":83,"column":10,"nodeType":"714","messageId":"715","endLine":83,"endColumn":19},{"ruleId":"712","severity":1,"message":"773","line":84,"column":10,"nodeType":"714","messageId":"715","endLine":84,"endColumn":24},{"ruleId":"712","severity":1,"message":"774","line":98,"column":9,"nodeType":"714","messageId":"715","endLine":98,"endColumn":23},{"ruleId":"732","severity":1,"message":"758","line":121,"column":6,"nodeType":"734","endLine":121,"endColumn":23,"suggestions":"775"},{"ruleId":"736","severity":1,"message":"737","line":379,"column":19,"nodeType":"738","endLine":379,"endColumn":41},{"ruleId":"736","severity":1,"message":"737","line":403,"column":21,"nodeType":"738","endLine":403,"endColumn":45},{"ruleId":"712","severity":1,"message":"776","line":31,"column":10,"nodeType":"714","messageId":"715","endLine":31,"endColumn":20},{"ruleId":"712","severity":1,"message":"777","line":36,"column":5,"nodeType":"714","messageId":"715","endLine":36,"endColumn":12},{"ruleId":"712","severity":1,"message":"767","line":51,"column":10,"nodeType":"714","messageId":"715","endLine":51,"endColumn":16},{"ruleId":"712","severity":1,"message":"768","line":51,"column":18,"nodeType":"714","messageId":"715","endLine":51,"endColumn":27},{"ruleId":"712","severity":1,"message":"771","line":58,"column":10,"nodeType":"714","messageId":"715","endLine":58,"endColumn":20},{"ruleId":"747","severity":1,"message":"778","line":106,"column":17,"nodeType":"722","messageId":"749","endLine":106,"endColumn":19},{"ruleId":"712","severity":1,"message":"779","line":122,"column":9,"nodeType":"714","messageId":"715","endLine":122,"endColumn":23},{"ruleId":"747","severity":1,"message":"778","line":128,"column":26,"nodeType":"722","messageId":"749","endLine":128,"endColumn":28},{"ruleId":"732","severity":1,"message":"758","line":141,"column":6,"nodeType":"734","endLine":141,"endColumn":23,"suggestions":"780"},{"ruleId":"712","severity":1,"message":"781","line":158,"column":11,"nodeType":"714","messageId":"715","endLine":158,"endColumn":28},{"ruleId":"712","severity":1,"message":"782","line":159,"column":11,"nodeType":"714","messageId":"715","endLine":159,"endColumn":33},{"ruleId":"747","severity":1,"message":"748","line":168,"column":113,"nodeType":"722","messageId":"749","endLine":168,"endColumn":115},{"ruleId":"712","severity":1,"message":"783","line":223,"column":9,"nodeType":"714","messageId":"715","endLine":223,"endColumn":23},{"ruleId":"736","severity":1,"message":"737","line":398,"column":19,"nodeType":"738","endLine":398,"endColumn":41},{"ruleId":"736","severity":1,"message":"737","line":421,"column":21,"nodeType":"738","endLine":421,"endColumn":45},{"ruleId":"712","severity":1,"message":"784","line":10,"column":8,"nodeType":"714","messageId":"715","endLine":10,"endColumn":12},{"ruleId":"712","severity":1,"message":"785","line":11,"column":8,"nodeType":"714","messageId":"715","endLine":11,"endColumn":12},{"ruleId":"712","severity":1,"message":"765","line":12,"column":8,"nodeType":"714","messageId":"715","endLine":12,"endColumn":14},{"ruleId":"712","severity":1,"message":"786","line":13,"column":8,"nodeType":"714","messageId":"715","endLine":13,"endColumn":12},{"ruleId":"712","severity":1,"message":"787","line":18,"column":8,"nodeType":"714","messageId":"715","endLine":18,"endColumn":17},{"ruleId":"712","severity":1,"message":"788","line":21,"column":3,"nodeType":"714","messageId":"715","endLine":21,"endColumn":15},{"ruleId":"712","severity":1,"message":"789","line":29,"column":3,"nodeType":"714","messageId":"715","endLine":29,"endColumn":17},{"ruleId":"712","severity":1,"message":"790","line":49,"column":10,"nodeType":"714","messageId":"715","endLine":49,"endColumn":20},{"ruleId":"712","severity":1,"message":"791","line":49,"column":22,"nodeType":"714","messageId":"715","endLine":49,"endColumn":35},{"ruleId":"712","severity":1,"message":"792","line":57,"column":10,"nodeType":"714","messageId":"715","endLine":57,"endColumn":17},{"ruleId":"712","severity":1,"message":"793","line":57,"column":19,"nodeType":"714","messageId":"715","endLine":57,"endColumn":28},{"ruleId":"712","severity":1,"message":"794","line":59,"column":10,"nodeType":"714","messageId":"715","endLine":59,"endColumn":25},{"ruleId":"712","severity":1,"message":"795","line":59,"column":27,"nodeType":"714","messageId":"715","endLine":59,"endColumn":45},{"ruleId":"712","severity":1,"message":"796","line":61,"column":10,"nodeType":"714","messageId":"715","endLine":61,"endColumn":20},{"ruleId":"712","severity":1,"message":"797","line":61,"column":22,"nodeType":"714","messageId":"715","endLine":61,"endColumn":35},{"ruleId":"712","severity":1,"message":"771","line":62,"column":10,"nodeType":"714","messageId":"715","endLine":62,"endColumn":20},{"ruleId":"712","severity":1,"message":"798","line":63,"column":10,"nodeType":"714","messageId":"715","endLine":63,"endColumn":15},{"ruleId":"712","severity":1,"message":"799","line":63,"column":17,"nodeType":"714","messageId":"715","endLine":63,"endColumn":25},{"ruleId":"712","severity":1,"message":"800","line":64,"column":10,"nodeType":"714","messageId":"715","endLine":64,"endColumn":23},{"ruleId":"712","severity":1,"message":"801","line":64,"column":25,"nodeType":"714","messageId":"715","endLine":64,"endColumn":41},{"ruleId":"712","severity":1,"message":"802","line":65,"column":10,"nodeType":"714","messageId":"715","endLine":65,"endColumn":21},{"ruleId":"712","severity":1,"message":"803","line":65,"column":23,"nodeType":"714","messageId":"715","endLine":65,"endColumn":37},{"ruleId":"712","severity":1,"message":"804","line":66,"column":10,"nodeType":"714","messageId":"715","endLine":66,"endColumn":19},{"ruleId":"712","severity":1,"message":"805","line":66,"column":21,"nodeType":"714","messageId":"715","endLine":66,"endColumn":33},{"ruleId":"712","severity":1,"message":"806","line":67,"column":10,"nodeType":"714","messageId":"715","endLine":67,"endColumn":20},{"ruleId":"712","severity":1,"message":"807","line":67,"column":22,"nodeType":"714","messageId":"715","endLine":67,"endColumn":35},{"ruleId":"712","severity":1,"message":"808","line":68,"column":10,"nodeType":"714","messageId":"715","endLine":68,"endColumn":18},{"ruleId":"712","severity":1,"message":"809","line":71,"column":10,"nodeType":"714","messageId":"715","endLine":71,"endColumn":21},{"ruleId":"712","severity":1,"message":"810","line":72,"column":10,"nodeType":"714","messageId":"715","endLine":72,"endColumn":22},{"ruleId":"712","severity":1,"message":"811","line":78,"column":10,"nodeType":"714","messageId":"715","endLine":78,"endColumn":24},{"ruleId":"712","severity":1,"message":"812","line":78,"column":26,"nodeType":"714","messageId":"715","endLine":78,"endColumn":43},{"ruleId":"712","severity":1,"message":"813","line":79,"column":10,"nodeType":"714","messageId":"715","endLine":79,"endColumn":25},{"ruleId":"712","severity":1,"message":"814","line":79,"column":27,"nodeType":"714","messageId":"715","endLine":79,"endColumn":45},{"ruleId":"712","severity":1,"message":"815","line":80,"column":10,"nodeType":"714","messageId":"715","endLine":80,"endColumn":18},{"ruleId":"712","severity":1,"message":"816","line":80,"column":20,"nodeType":"714","messageId":"715","endLine":80,"endColumn":31},{"ruleId":"712","severity":1,"message":"817","line":81,"column":10,"nodeType":"714","messageId":"715","endLine":81,"endColumn":19},{"ruleId":"712","severity":1,"message":"818","line":81,"column":21,"nodeType":"714","messageId":"715","endLine":81,"endColumn":33},{"ruleId":"712","severity":1,"message":"819","line":82,"column":10,"nodeType":"714","messageId":"715","endLine":82,"endColumn":17},{"ruleId":"712","severity":1,"message":"820","line":82,"column":19,"nodeType":"714","messageId":"715","endLine":82,"endColumn":36},{"ruleId":"712","severity":1,"message":"821","line":83,"column":10,"nodeType":"714","messageId":"715","endLine":83,"endColumn":17},{"ruleId":"712","severity":1,"message":"822","line":83,"column":19,"nodeType":"714","messageId":"715","endLine":83,"endColumn":29},{"ruleId":"712","severity":1,"message":"823","line":84,"column":10,"nodeType":"714","messageId":"715","endLine":84,"endColumn":22},{"ruleId":"712","severity":1,"message":"824","line":84,"column":24,"nodeType":"714","messageId":"715","endLine":84,"endColumn":40},{"ruleId":"712","severity":1,"message":"825","line":85,"column":10,"nodeType":"714","messageId":"715","endLine":85,"endColumn":21},{"ruleId":"712","severity":1,"message":"826","line":85,"column":23,"nodeType":"714","messageId":"715","endLine":85,"endColumn":31},{"ruleId":"712","severity":1,"message":"827","line":86,"column":10,"nodeType":"714","messageId":"715","endLine":86,"endColumn":19},{"ruleId":"712","severity":1,"message":"828","line":86,"column":21,"nodeType":"714","messageId":"715","endLine":86,"endColumn":33},{"ruleId":"712","severity":1,"message":"829","line":87,"column":10,"nodeType":"714","messageId":"715","endLine":87,"endColumn":16},{"ruleId":"712","severity":1,"message":"830","line":87,"column":18,"nodeType":"714","messageId":"715","endLine":87,"endColumn":27},{"ruleId":"712","severity":1,"message":"831","line":88,"column":10,"nodeType":"714","messageId":"715","endLine":88,"endColumn":29},{"ruleId":"712","severity":1,"message":"832","line":88,"column":31,"nodeType":"714","messageId":"715","endLine":88,"endColumn":46},{"ruleId":"712","severity":1,"message":"833","line":89,"column":10,"nodeType":"714","messageId":"715","endLine":89,"endColumn":21},{"ruleId":"712","severity":1,"message":"834","line":90,"column":10,"nodeType":"714","messageId":"715","endLine":90,"endColumn":17},{"ruleId":"712","severity":1,"message":"835","line":91,"column":10,"nodeType":"714","messageId":"715","endLine":91,"endColumn":27},{"ruleId":"712","severity":1,"message":"836","line":91,"column":29,"nodeType":"714","messageId":"715","endLine":91,"endColumn":48},{"ruleId":"712","severity":1,"message":"837","line":92,"column":10,"nodeType":"714","messageId":"715","endLine":92,"endColumn":30},{"ruleId":"712","severity":1,"message":"838","line":92,"column":32,"nodeType":"714","messageId":"715","endLine":92,"endColumn":55},{"ruleId":"712","severity":1,"message":"839","line":93,"column":10,"nodeType":"714","messageId":"715","endLine":93,"endColumn":16},{"ruleId":"712","severity":1,"message":"840","line":93,"column":18,"nodeType":"714","messageId":"715","endLine":93,"endColumn":27},{"ruleId":"712","severity":1,"message":"841","line":96,"column":10,"nodeType":"714","messageId":"715","endLine":96,"endColumn":17},{"ruleId":"732","severity":1,"message":"842","line":101,"column":13,"nodeType":"843","endLine":120,"endColumn":4},{"ruleId":"747","severity":1,"message":"778","line":111,"column":16,"nodeType":"722","messageId":"749","endLine":111,"endColumn":18},{"ruleId":"732","severity":1,"message":"844","line":120,"column":6,"nodeType":"734","endLine":120,"endColumn":23,"suggestions":"845"},{"ruleId":"747","severity":1,"message":"778","line":161,"column":32,"nodeType":"722","messageId":"749","endLine":161,"endColumn":34},{"ruleId":"747","severity":1,"message":"778","line":296,"column":19,"nodeType":"722","messageId":"749","endLine":296,"endColumn":21},{"ruleId":"747","severity":1,"message":"748","line":362,"column":21,"nodeType":"722","messageId":"749","endLine":362,"endColumn":23},{"ruleId":"747","severity":1,"message":"778","line":411,"column":40,"nodeType":"722","messageId":"749","endLine":411,"endColumn":42},{"ruleId":"747","severity":1,"message":"778","line":428,"column":21,"nodeType":"722","messageId":"749","endLine":428,"endColumn":23},{"ruleId":"712","severity":1,"message":"846","line":433,"column":13,"nodeType":"714","messageId":"715","endLine":433,"endColumn":30},{"ruleId":"712","severity":1,"message":"847","line":437,"column":13,"nodeType":"714","messageId":"715","endLine":437,"endColumn":29},{"ruleId":"712","severity":1,"message":"848","line":442,"column":13,"nodeType":"714","messageId":"715","endLine":442,"endColumn":29},{"ruleId":"712","severity":1,"message":"849","line":443,"column":13,"nodeType":"714","messageId":"715","endLine":443,"endColumn":28},{"ruleId":"747","severity":1,"message":"778","line":508,"column":22,"nodeType":"722","messageId":"749","endLine":508,"endColumn":24},{"ruleId":"747","severity":1,"message":"748","line":518,"column":38,"nodeType":"722","messageId":"749","endLine":518,"endColumn":40},{"ruleId":"747","severity":1,"message":"748","line":520,"column":45,"nodeType":"722","messageId":"749","endLine":520,"endColumn":47},{"ruleId":"747","severity":1,"message":"748","line":524,"column":18,"nodeType":"722","messageId":"749","endLine":524,"endColumn":20},{"ruleId":"747","severity":1,"message":"778","line":525,"column":27,"nodeType":"722","messageId":"749","endLine":525,"endColumn":29},{"ruleId":"747","severity":1,"message":"778","line":528,"column":24,"nodeType":"722","messageId":"749","endLine":528,"endColumn":26},{"ruleId":"747","severity":1,"message":"778","line":542,"column":16,"nodeType":"722","messageId":"749","endLine":542,"endColumn":18},{"ruleId":"747","severity":1,"message":"778","line":546,"column":23,"nodeType":"722","messageId":"749","endLine":546,"endColumn":25},{"ruleId":"750","severity":1,"message":"751","line":558,"column":11,"nodeType":"738","messageId":"752","endLine":564,"endColumn":12,"fix":"850"},{"ruleId":"750","severity":1,"message":"751","line":583,"column":15,"nodeType":"738","messageId":"752","endLine":587,"endColumn":16,"fix":"851"},{"ruleId":"750","severity":1,"message":"751","line":614,"column":15,"nodeType":"738","messageId":"752","endLine":618,"endColumn":16,"fix":"852"},{"ruleId":"747","severity":1,"message":"778","line":824,"column":42,"nodeType":"722","messageId":"749","endLine":824,"endColumn":44},{"ruleId":"712","severity":1,"message":"837","line":92,"column":10,"nodeType":"714","messageId":"715","endLine":92,"endColumn":30},{"ruleId":"712","severity":1,"message":"839","line":93,"column":10,"nodeType":"714","messageId":"715","endLine":93,"endColumn":16},{"ruleId":"732","severity":1,"message":"758","line":102,"column":6,"nodeType":"734","endLine":102,"endColumn":25,"suggestions":"853"},{"ruleId":"712","severity":1,"message":"854","line":148,"column":9,"nodeType":"714","messageId":"715","endLine":148,"endColumn":30},{"ruleId":"712","severity":1,"message":"855","line":197,"column":15,"nodeType":"714","messageId":"715","endLine":197,"endColumn":16},{"ruleId":"712","severity":1,"message":"855","line":220,"column":15,"nodeType":"714","messageId":"715","endLine":220,"endColumn":16},{"ruleId":"712","severity":1,"message":"855","line":359,"column":21,"nodeType":"714","messageId":"715","endLine":359,"endColumn":22},{"ruleId":"712","severity":1,"message":"855","line":404,"column":21,"nodeType":"714","messageId":"715","endLine":404,"endColumn":22},{"ruleId":"747","severity":1,"message":"748","line":475,"column":18,"nodeType":"722","messageId":"749","endLine":475,"endColumn":20},{"ruleId":"736","severity":1,"message":"737","line":849,"column":15,"nodeType":"738","endLine":853,"endColumn":17},{"ruleId":"736","severity":1,"message":"737","line":854,"column":15,"nodeType":"738","endLine":854,"endColumn":80},{"ruleId":"736","severity":1,"message":"737","line":883,"column":15,"nodeType":"738","endLine":883,"endColumn":59},{"ruleId":"712","severity":1,"message":"856","line":124,"column":9,"nodeType":"714","messageId":"715","endLine":124,"endColumn":15},{"ruleId":"712","severity":1,"message":"857","line":21,"column":5,"nodeType":"714","messageId":"715","endLine":21,"endColumn":26},{"ruleId":"712","severity":1,"message":"718","line":95,"column":17,"nodeType":"714","messageId":"715","endLine":95,"endColumn":22},{"ruleId":"712","severity":1,"message":"719","line":103,"column":21,"nodeType":"714","messageId":"715","endLine":103,"endColumn":29},{"ruleId":"712","severity":1,"message":"718","line":129,"column":19,"nodeType":"714","messageId":"715","endLine":129,"endColumn":24},{"ruleId":"712","severity":1,"message":"719","line":137,"column":23,"nodeType":"714","messageId":"715","endLine":137,"endColumn":31},{"ruleId":"712","severity":1,"message":"718","line":166,"column":19,"nodeType":"714","messageId":"715","endLine":166,"endColumn":24},{"ruleId":"712","severity":1,"message":"858","line":416,"column":9,"nodeType":"714","messageId":"715","endLine":416,"endColumn":16},{"ruleId":"712","severity":1,"message":"776","line":7,"column":3,"nodeType":"714","messageId":"715","endLine":7,"endColumn":13},{"ruleId":"859","severity":1,"message":"860","line":121,"column":5,"nodeType":"861","messageId":"862","endLine":129,"endColumn":22},{"ruleId":"712","severity":1,"message":"863","line":1237,"column":7,"nodeType":"714","messageId":"715","endLine":1237,"endColumn":12},{"ruleId":"712","severity":1,"message":"863","line":1271,"column":7,"nodeType":"714","messageId":"715","endLine":1271,"endColumn":12},{"ruleId":"747","severity":1,"message":"748","line":1274,"column":44,"nodeType":"722","messageId":"749","endLine":1274,"endColumn":46},{"ruleId":"736","severity":1,"message":"737","line":11,"column":35,"nodeType":"738","endLine":11,"endColumn":59},{"ruleId":"712","severity":1,"message":"858","line":55,"column":27,"nodeType":"714","messageId":"715","endLine":55,"endColumn":34},{"ruleId":"736","severity":1,"message":"737","line":98,"column":105,"nodeType":"738","endLine":98,"endColumn":131},{"ruleId":"736","severity":1,"message":"737","line":99,"column":62,"nodeType":"738","endLine":99,"endColumn":88},{"ruleId":"736","severity":1,"message":"737","line":100,"column":60,"nodeType":"738","endLine":100,"endColumn":84},{"ruleId":"736","severity":1,"message":"737","line":101,"column":58,"nodeType":"738","endLine":101,"endColumn":83},{"ruleId":"736","severity":1,"message":"737","line":102,"column":57,"nodeType":"738","endLine":102,"endColumn":81},{"ruleId":"736","severity":1,"message":"737","line":103,"column":58,"nodeType":"738","endLine":103,"endColumn":83},{"ruleId":"736","severity":1,"message":"737","line":104,"column":67,"nodeType":"738","endLine":104,"endColumn":88},{"ruleId":"736","severity":1,"message":"737","line":38,"column":19,"nodeType":"738","endLine":38,"endColumn":46},{"ruleId":"712","severity":1,"message":"864","line":3,"column":26,"nodeType":"714","messageId":"715","endLine":3,"endColumn":30},{"ruleId":"712","severity":1,"message":"865","line":3,"column":32,"nodeType":"714","messageId":"715","endLine":3,"endColumn":35},{"ruleId":"712","severity":1,"message":"866","line":11,"column":8,"nodeType":"714","messageId":"715","endLine":11,"endColumn":16},{"ruleId":"712","severity":1,"message":"867","line":12,"column":8,"nodeType":"714","messageId":"715","endLine":12,"endColumn":15},{"ruleId":"712","severity":1,"message":"868","line":13,"column":8,"nodeType":"714","messageId":"715","endLine":13,"endColumn":18},{"ruleId":"712","severity":1,"message":"869","line":35,"column":8,"nodeType":"714","messageId":"715","endLine":35,"endColumn":14},{"ruleId":"712","severity":1,"message":"870","line":41,"column":10,"nodeType":"714","messageId":"715","endLine":41,"endColumn":14},{"ruleId":"712","severity":1,"message":"871","line":42,"column":9,"nodeType":"714","messageId":"715","endLine":42,"endColumn":20},{"ruleId":"712","severity":1,"message":"872","line":43,"column":9,"nodeType":"714","messageId":"715","endLine":43,"endColumn":19},{"ruleId":"712","severity":1,"message":"873","line":44,"column":10,"nodeType":"714","messageId":"715","endLine":44,"endColumn":15},{"ruleId":"712","severity":1,"message":"874","line":50,"column":10,"nodeType":"714","messageId":"715","endLine":50,"endColumn":21},{"ruleId":"712","severity":1,"message":"875","line":50,"column":23,"nodeType":"714","messageId":"715","endLine":50,"endColumn":37},{"ruleId":"712","severity":1,"message":"876","line":77,"column":10,"nodeType":"714","messageId":"715","endLine":77,"endColumn":26},{"ruleId":"712","severity":1,"message":"877","line":78,"column":10,"nodeType":"714","messageId":"715","endLine":78,"endColumn":26},{"ruleId":"712","severity":1,"message":"878","line":80,"column":10,"nodeType":"714","messageId":"715","endLine":80,"endColumn":24},{"ruleId":"712","severity":1,"message":"879","line":82,"column":10,"nodeType":"714","messageId":"715","endLine":82,"endColumn":25},{"ruleId":"712","severity":1,"message":"880","line":86,"column":10,"nodeType":"714","messageId":"715","endLine":86,"endColumn":31},{"ruleId":"712","severity":1,"message":"881","line":90,"column":10,"nodeType":"714","messageId":"715","endLine":90,"endColumn":28},{"ruleId":"712","severity":1,"message":"882","line":91,"column":10,"nodeType":"714","messageId":"715","endLine":91,"endColumn":23},{"ruleId":"712","severity":1,"message":"883","line":92,"column":10,"nodeType":"714","messageId":"715","endLine":92,"endColumn":23},{"ruleId":"712","severity":1,"message":"884","line":97,"column":10,"nodeType":"714","messageId":"715","endLine":97,"endColumn":22},{"ruleId":"712","severity":1,"message":"885","line":99,"column":10,"nodeType":"714","messageId":"715","endLine":99,"endColumn":27},{"ruleId":"712","severity":1,"message":"886","line":99,"column":29,"nodeType":"714","messageId":"715","endLine":99,"endColumn":49},{"ruleId":"712","severity":1,"message":"887","line":107,"column":10,"nodeType":"714","messageId":"715","endLine":107,"endColumn":22},{"ruleId":"712","severity":1,"message":"888","line":107,"column":24,"nodeType":"714","messageId":"715","endLine":107,"endColumn":38},{"ruleId":"732","severity":1,"message":"758","line":119,"column":6,"nodeType":"734","endLine":119,"endColumn":25,"suggestions":"889"},{"ruleId":"732","severity":1,"message":"890","line":125,"column":6,"nodeType":"734","endLine":125,"endColumn":65,"suggestions":"891"},{"ruleId":"712","severity":1,"message":"855","line":179,"column":15,"nodeType":"714","messageId":"715","endLine":179,"endColumn":16},{"ruleId":"712","severity":1,"message":"855","line":204,"column":15,"nodeType":"714","messageId":"715","endLine":204,"endColumn":16},{"ruleId":"712","severity":1,"message":"892","line":576,"column":9,"nodeType":"714","messageId":"715","endLine":576,"endColumn":28},{"ruleId":"747","severity":1,"message":"748","line":731,"column":18,"nodeType":"722","messageId":"749","endLine":731,"endColumn":20},{"ruleId":"747","severity":1,"message":"748","line":741,"column":18,"nodeType":"722","messageId":"749","endLine":741,"endColumn":20},{"ruleId":"747","severity":1,"message":"748","line":848,"column":14,"nodeType":"722","messageId":"749","endLine":848,"endColumn":16},{"ruleId":"736","severity":1,"message":"737","line":959,"column":15,"nodeType":"738","endLine":963,"endColumn":17},{"ruleId":"736","severity":1,"message":"737","line":964,"column":15,"nodeType":"738","endLine":964,"endColumn":80},{"ruleId":"736","severity":1,"message":"737","line":981,"column":13,"nodeType":"738","endLine":981,"endColumn":36},{"ruleId":"712","severity":1,"message":"893","line":39,"column":13,"nodeType":"714","messageId":"715","endLine":39,"endColumn":23},{"ruleId":"736","severity":1,"message":"737","line":12,"column":12,"nodeType":"738","endLine":12,"endColumn":32},{"ruleId":"712","severity":1,"message":"894","line":3,"column":10,"nodeType":"714","messageId":"715","endLine":3,"endColumn":14},{"ruleId":"736","severity":1,"message":"737","line":32,"column":41,"nodeType":"738","endLine":32,"endColumn":91},{"ruleId":"736","severity":1,"message":"737","line":36,"column":15,"nodeType":"738","endLine":36,"endColumn":73},{"ruleId":"712","severity":1,"message":"895","line":22,"column":9,"nodeType":"714","messageId":"715","endLine":22,"endColumn":21},{"ruleId":"712","severity":1,"message":"896","line":27,"column":10,"nodeType":"714","messageId":"715","endLine":27,"endColumn":17},{"ruleId":"712","severity":1,"message":"897","line":28,"column":9,"nodeType":"714","messageId":"715","endLine":28,"endColumn":24},{"ruleId":"712","severity":1,"message":"898","line":34,"column":9,"nodeType":"714","messageId":"715","endLine":34,"endColumn":30},{"ruleId":"712","severity":1,"message":"899","line":25,"column":15,"nodeType":"714","messageId":"715","endLine":25,"endColumn":27},{"ruleId":"712","severity":1,"message":"900","line":291,"column":17,"nodeType":"714","messageId":"715","endLine":291,"endColumn":21},{"ruleId":"712","severity":1,"message":"731","line":1,"column":10,"nodeType":"714","messageId":"715","endLine":1,"endColumn":21},{"ruleId":"712","severity":1,"message":"901","line":2,"column":10,"nodeType":"714","messageId":"715","endLine":2,"endColumn":22},{"ruleId":"712","severity":1,"message":"902","line":2,"column":24,"nodeType":"714","messageId":"715","endLine":2,"endColumn":35},{"ruleId":"712","severity":1,"message":"903","line":3,"column":10,"nodeType":"714","messageId":"715","endLine":3,"endColumn":24},{"ruleId":"712","severity":1,"message":"904","line":113,"column":9,"nodeType":"714","messageId":"715","endLine":113,"endColumn":14},{"ruleId":"712","severity":1,"message":"904","line":136,"column":9,"nodeType":"714","messageId":"715","endLine":136,"endColumn":14},{"ruleId":"712","severity":1,"message":"904","line":159,"column":9,"nodeType":"714","messageId":"715","endLine":159,"endColumn":14},{"ruleId":"712","severity":1,"message":"904","line":183,"column":9,"nodeType":"714","messageId":"715","endLine":183,"endColumn":14},{"ruleId":"712","severity":1,"message":"904","line":205,"column":9,"nodeType":"714","messageId":"715","endLine":205,"endColumn":14},{"ruleId":"712","severity":1,"message":"904","line":227,"column":9,"nodeType":"714","messageId":"715","endLine":227,"endColumn":14},{"ruleId":"712","severity":1,"message":"904","line":251,"column":9,"nodeType":"714","messageId":"715","endLine":251,"endColumn":14},{"ruleId":"712","severity":1,"message":"904","line":271,"column":9,"nodeType":"714","messageId":"715","endLine":271,"endColumn":14},{"ruleId":"712","severity":1,"message":"904","line":296,"column":9,"nodeType":"714","messageId":"715","endLine":296,"endColumn":14},{"ruleId":"712","severity":1,"message":"904","line":321,"column":9,"nodeType":"714","messageId":"715","endLine":321,"endColumn":14},{"ruleId":"712","severity":1,"message":"765","line":1,"column":8,"nodeType":"714","messageId":"715","endLine":1,"endColumn":14},{"ruleId":"712","severity":1,"message":"905","line":2,"column":8,"nodeType":"714","messageId":"715","endLine":2,"endColumn":11},{"ruleId":"712","severity":1,"message":"906","line":4,"column":8,"nodeType":"714","messageId":"715","endLine":4,"endColumn":11},{"ruleId":"712","severity":1,"message":"785","line":5,"column":8,"nodeType":"714","messageId":"715","endLine":5,"endColumn":12},{"ruleId":"712","severity":1,"message":"907","line":6,"column":8,"nodeType":"714","messageId":"715","endLine":6,"endColumn":11},{"ruleId":"712","severity":1,"message":"908","line":7,"column":8,"nodeType":"714","messageId":"715","endLine":7,"endColumn":18},{"ruleId":"712","severity":1,"message":"909","line":8,"column":8,"nodeType":"714","messageId":"715","endLine":8,"endColumn":12},{"ruleId":"712","severity":1,"message":"910","line":9,"column":8,"nodeType":"714","messageId":"715","endLine":9,"endColumn":16},{"ruleId":"712","severity":1,"message":"911","line":10,"column":8,"nodeType":"714","messageId":"715","endLine":10,"endColumn":12},{"ruleId":"712","severity":1,"message":"912","line":11,"column":8,"nodeType":"714","messageId":"715","endLine":11,"endColumn":12},{"ruleId":"712","severity":1,"message":"869","line":2,"column":27,"nodeType":"714","messageId":"715","endLine":2,"endColumn":33},{"ruleId":"712","severity":1,"message":"913","line":9,"column":9,"nodeType":"714","messageId":"715","endLine":9,"endColumn":27},{"ruleId":"712","severity":1,"message":"914","line":214,"column":9,"nodeType":"714","messageId":"715","endLine":214,"endColumn":12},{"ruleId":"712","severity":1,"message":"894","line":2,"column":10,"nodeType":"714","messageId":"715","endLine":2,"endColumn":14},{"ruleId":"712","severity":1,"message":"915","line":3,"column":8,"nodeType":"714","messageId":"715","endLine":3,"endColumn":12},{"ruleId":"712","severity":1,"message":"916","line":4,"column":8,"nodeType":"714","messageId":"715","endLine":4,"endColumn":16},{"ruleId":"712","severity":1,"message":"917","line":5,"column":10,"nodeType":"714","messageId":"715","endLine":5,"endColumn":13},{"ruleId":"712","severity":1,"message":"869","line":5,"column":27,"nodeType":"714","messageId":"715","endLine":5,"endColumn":33},{"ruleId":"712","severity":1,"message":"726","line":4,"column":10,"nodeType":"714","messageId":"715","endLine":4,"endColumn":18},{"ruleId":"712","severity":1,"message":"777","line":10,"column":11,"nodeType":"714","messageId":"715","endLine":10,"endColumn":18},{"ruleId":"712","severity":1,"message":"918","line":2,"column":15,"nodeType":"714","messageId":"715","endLine":2,"endColumn":18},{"ruleId":"736","severity":1,"message":"737","line":10,"column":7,"nodeType":"738","endLine":10,"endColumn":36},{"ruleId":"712","severity":1,"message":"756","line":1,"column":17,"nodeType":"714","messageId":"715","endLine":1,"endColumn":25},{"ruleId":"712","severity":1,"message":"869","line":3,"column":27,"nodeType":"714","messageId":"715","endLine":3,"endColumn":33},{"ruleId":"747","severity":1,"message":"748","line":9,"column":20,"nodeType":"722","messageId":"749","endLine":9,"endColumn":22},{"ruleId":"747","severity":1,"message":"748","line":21,"column":20,"nodeType":"722","messageId":"749","endLine":21,"endColumn":22},{"ruleId":"712","severity":1,"message":"919","line":5,"column":10,"nodeType":"714","messageId":"715","endLine":5,"endColumn":15},{"ruleId":"712","severity":1,"message":"920","line":10,"column":12,"nodeType":"714","messageId":"715","endLine":10,"endColumn":28},{"ruleId":"732","severity":1,"message":"921","line":14,"column":8,"nodeType":"734","endLine":14,"endColumn":10,"suggestions":"922"},{"ruleId":"712","severity":1,"message":"870","line":24,"column":10,"nodeType":"714","messageId":"715","endLine":24,"endColumn":14},{"ruleId":"712","severity":1,"message":"871","line":25,"column":9,"nodeType":"714","messageId":"715","endLine":25,"endColumn":20},{"ruleId":"712","severity":1,"message":"872","line":26,"column":9,"nodeType":"714","messageId":"715","endLine":26,"endColumn":19},{"ruleId":"712","severity":1,"message":"923","line":33,"column":75,"nodeType":"714","messageId":"715","endLine":33,"endColumn":80},{"ruleId":"712","severity":1,"message":"924","line":33,"column":82,"nodeType":"714","messageId":"715","endLine":33,"endColumn":94},{"ruleId":"712","severity":1,"message":"895","line":33,"column":96,"nodeType":"714","messageId":"715","endLine":33,"endColumn":108},{"ruleId":"712","severity":1,"message":"925","line":34,"column":50,"nodeType":"714","messageId":"715","endLine":34,"endColumn":56},{"ruleId":"712","severity":1,"message":"926","line":38,"column":10,"nodeType":"714","messageId":"715","endLine":38,"endColumn":21},{"ruleId":"712","severity":1,"message":"927","line":46,"column":10,"nodeType":"714","messageId":"715","endLine":46,"endColumn":24},{"ruleId":"712","severity":1,"message":"928","line":49,"column":10,"nodeType":"714","messageId":"715","endLine":49,"endColumn":21},{"ruleId":"732","severity":1,"message":"929","line":56,"column":6,"nodeType":"734","endLine":56,"endColumn":23,"suggestions":"930"},{"ruleId":"747","severity":1,"message":"778","line":62,"column":26,"nodeType":"722","messageId":"749","endLine":62,"endColumn":28},{"ruleId":"747","severity":1,"message":"778","line":72,"column":49,"nodeType":"722","messageId":"749","endLine":72,"endColumn":51},{"ruleId":"747","severity":1,"message":"778","line":90,"column":26,"nodeType":"722","messageId":"749","endLine":90,"endColumn":28},{"ruleId":"747","severity":1,"message":"778","line":100,"column":40,"nodeType":"722","messageId":"749","endLine":100,"endColumn":42},{"ruleId":"712","severity":1,"message":"931","line":130,"column":11,"nodeType":"714","messageId":"715","endLine":130,"endColumn":16},{"ruleId":"747","severity":1,"message":"748","line":146,"column":17,"nodeType":"722","messageId":"749","endLine":146,"endColumn":19},{"ruleId":"747","severity":1,"message":"748","line":243,"column":21,"nodeType":"722","messageId":"749","endLine":243,"endColumn":23},{"ruleId":"747","severity":1,"message":"778","line":282,"column":19,"nodeType":"722","messageId":"749","endLine":282,"endColumn":21},{"ruleId":"747","severity":1,"message":"778","line":293,"column":22,"nodeType":"722","messageId":"749","endLine":293,"endColumn":24},{"ruleId":"747","severity":1,"message":"748","line":301,"column":38,"nodeType":"722","messageId":"749","endLine":301,"endColumn":40},{"ruleId":"747","severity":1,"message":"748","line":303,"column":45,"nodeType":"722","messageId":"749","endLine":303,"endColumn":47},{"ruleId":"747","severity":1,"message":"748","line":307,"column":18,"nodeType":"722","messageId":"749","endLine":307,"endColumn":20},{"ruleId":"747","severity":1,"message":"778","line":308,"column":27,"nodeType":"722","messageId":"749","endLine":308,"endColumn":29},{"ruleId":"747","severity":1,"message":"778","line":310,"column":33,"nodeType":"722","messageId":"749","endLine":310,"endColumn":35},{"ruleId":"747","severity":1,"message":"778","line":323,"column":21,"nodeType":"722","messageId":"749","endLine":323,"endColumn":23},{"ruleId":"736","severity":1,"message":"737","line":358,"column":13,"nodeType":"738","endLine":358,"endColumn":115},{"ruleId":"736","severity":1,"message":"737","line":366,"column":13,"nodeType":"738","endLine":366,"endColumn":110},{"ruleId":"932","severity":1,"message":"933","line":378,"column":17,"nodeType":"722","messageId":"934","endLine":378,"endColumn":45},{"ruleId":"932","severity":1,"message":"933","line":379,"column":19,"nodeType":"722","messageId":"934","endLine":379,"endColumn":47},{"ruleId":"736","severity":1,"message":"737","line":386,"column":15,"nodeType":"738","endLine":386,"endColumn":38},{"ruleId":"932","severity":1,"message":"933","line":413,"column":22,"nodeType":"722","messageId":"934","endLine":413,"endColumn":50},{"ruleId":"935","severity":1,"message":"936","line":419,"column":15,"nodeType":"738","endLine":419,"endColumn":27},{"ruleId":"935","severity":1,"message":"936","line":420,"column":15,"nodeType":"738","endLine":420,"endColumn":27},{"ruleId":"712","severity":1,"message":"937","line":17,"column":8,"nodeType":"714","messageId":"715","endLine":17,"endColumn":20},{"ruleId":"712","severity":1,"message":"884","line":32,"column":10,"nodeType":"714","messageId":"715","endLine":32,"endColumn":22},{"ruleId":"712","severity":1,"message":"892","line":39,"column":9,"nodeType":"714","messageId":"715","endLine":39,"endColumn":28},{"ruleId":"712","severity":1,"message":"938","line":40,"column":9,"nodeType":"714","messageId":"715","endLine":40,"endColumn":26},{"ruleId":"732","severity":1,"message":"758","line":50,"column":6,"nodeType":"734","endLine":50,"endColumn":23,"suggestions":"939"},{"ruleId":"712","severity":1,"message":"940","line":52,"column":9,"nodeType":"714","messageId":"715","endLine":52,"endColumn":23},{"ruleId":"736","severity":1,"message":"737","line":71,"column":15,"nodeType":"738","endLine":75,"endColumn":17},{"ruleId":"736","severity":1,"message":"737","line":76,"column":15,"nodeType":"738","endLine":76,"endColumn":80},{"ruleId":"712","severity":1,"message":"917","line":2,"column":21,"nodeType":"714","messageId":"715","endLine":2,"endColumn":24},{"ruleId":"712","severity":1,"message":"941","line":3,"column":8,"nodeType":"714","messageId":"715","endLine":3,"endColumn":21},{"ruleId":"712","severity":1,"message":"942","line":5,"column":8,"nodeType":"714","messageId":"715","endLine":5,"endColumn":21},{"ruleId":"712","severity":1,"message":"943","line":6,"column":8,"nodeType":"714","messageId":"715","endLine":6,"endColumn":18},{"ruleId":"712","severity":1,"message":"944","line":7,"column":8,"nodeType":"714","messageId":"715","endLine":7,"endColumn":16},{"ruleId":"712","severity":1,"message":"866","line":8,"column":8,"nodeType":"714","messageId":"715","endLine":8,"endColumn":16},{"ruleId":"712","severity":1,"message":"867","line":9,"column":8,"nodeType":"714","messageId":"715","endLine":9,"endColumn":15},{"ruleId":"712","severity":1,"message":"945","line":14,"column":10,"nodeType":"714","messageId":"715","endLine":14,"endColumn":28},{"ruleId":"712","severity":1,"message":"946","line":15,"column":10,"nodeType":"714","messageId":"715","endLine":15,"endColumn":26},{"ruleId":"712","severity":1,"message":"789","line":20,"column":3,"nodeType":"714","messageId":"715","endLine":20,"endColumn":17},{"ruleId":"712","severity":1,"message":"947","line":21,"column":3,"nodeType":"714","messageId":"715","endLine":21,"endColumn":20},{"ruleId":"712","severity":1,"message":"869","line":26,"column":8,"nodeType":"714","messageId":"715","endLine":26,"endColumn":14},{"ruleId":"712","severity":1,"message":"948","line":27,"column":10,"nodeType":"714","messageId":"715","endLine":27,"endColumn":19},{"ruleId":"712","severity":1,"message":"949","line":28,"column":8,"nodeType":"714","messageId":"715","endLine":28,"endColumn":19},{"ruleId":"712","severity":1,"message":"950","line":29,"column":8,"nodeType":"714","messageId":"715","endLine":29,"endColumn":26},{"ruleId":"712","severity":1,"message":"937","line":31,"column":8,"nodeType":"714","messageId":"715","endLine":31,"endColumn":20},{"ruleId":"712","severity":1,"message":"894","line":32,"column":10,"nodeType":"714","messageId":"715","endLine":32,"endColumn":14},{"ruleId":"712","severity":1,"message":"873","line":37,"column":10,"nodeType":"714","messageId":"715","endLine":37,"endColumn":15},{"ruleId":"712","severity":1,"message":"951","line":38,"column":9,"nodeType":"714","messageId":"715","endLine":38,"endColumn":21},{"ruleId":"712","severity":1,"message":"952","line":39,"column":9,"nodeType":"714","messageId":"715","endLine":39,"endColumn":20},{"ruleId":"712","severity":1,"message":"953","line":2,"column":8,"nodeType":"714","messageId":"715","endLine":2,"endColumn":20},{"ruleId":"712","severity":1,"message":"784","line":22,"column":8,"nodeType":"714","messageId":"715","endLine":22,"endColumn":12},{"ruleId":"712","severity":1,"message":"923","line":31,"column":5,"nodeType":"714","messageId":"715","endLine":31,"endColumn":10},{"ruleId":"712","severity":1,"message":"924","line":32,"column":5,"nodeType":"714","messageId":"715","endLine":32,"endColumn":17},{"ruleId":"712","severity":1,"message":"895","line":33,"column":5,"nodeType":"714","messageId":"715","endLine":33,"endColumn":17},{"ruleId":"712","severity":1,"message":"954","line":36,"column":5,"nodeType":"714","messageId":"715","endLine":36,"endColumn":19},{"ruleId":"712","severity":1,"message":"926","line":42,"column":10,"nodeType":"714","messageId":"715","endLine":42,"endColumn":21},{"ruleId":"712","severity":1,"message":"955","line":51,"column":10,"nodeType":"714","messageId":"715","endLine":51,"endColumn":13},{"ruleId":"747","severity":1,"message":"778","line":62,"column":26,"nodeType":"722","messageId":"749","endLine":62,"endColumn":28},{"ruleId":"747","severity":1,"message":"778","line":98,"column":40,"nodeType":"722","messageId":"749","endLine":98,"endColumn":42},{"ruleId":"747","severity":1,"message":"748","line":252,"column":21,"nodeType":"722","messageId":"749","endLine":252,"endColumn":23},{"ruleId":"747","severity":1,"message":"778","line":298,"column":19,"nodeType":"722","messageId":"749","endLine":298,"endColumn":21},{"ruleId":"747","severity":1,"message":"778","line":318,"column":21,"nodeType":"722","messageId":"749","endLine":318,"endColumn":23},{"ruleId":"712","severity":1,"message":"846","line":323,"column":13,"nodeType":"714","messageId":"715","endLine":323,"endColumn":30},{"ruleId":"712","severity":1,"message":"847","line":327,"column":13,"nodeType":"714","messageId":"715","endLine":327,"endColumn":29},{"ruleId":"712","severity":1,"message":"848","line":332,"column":13,"nodeType":"714","messageId":"715","endLine":332,"endColumn":29},{"ruleId":"712","severity":1,"message":"849","line":333,"column":13,"nodeType":"714","messageId":"715","endLine":333,"endColumn":28},{"ruleId":"747","severity":1,"message":"778","line":397,"column":16,"nodeType":"722","messageId":"749","endLine":397,"endColumn":18},{"ruleId":"747","severity":1,"message":"778","line":401,"column":23,"nodeType":"722","messageId":"749","endLine":401,"endColumn":25},{"ruleId":"712","severity":1,"message":"956","line":405,"column":9,"nodeType":"714","messageId":"715","endLine":405,"endColumn":26},{"ruleId":"747","severity":1,"message":"778","line":406,"column":16,"nodeType":"722","messageId":"749","endLine":406,"endColumn":18},{"ruleId":"747","severity":1,"message":"778","line":410,"column":28,"nodeType":"722","messageId":"749","endLine":410,"endColumn":30},{"ruleId":"747","severity":1,"message":"778","line":411,"column":31,"nodeType":"722","messageId":"749","endLine":411,"endColumn":33},{"ruleId":"747","severity":1,"message":"748","line":412,"column":23,"nodeType":"722","messageId":"749","endLine":412,"endColumn":25},{"ruleId":"732","severity":1,"message":"842","line":427,"column":13,"nodeType":"843","endLine":431,"endColumn":4},{"ruleId":"732","severity":1,"message":"929","line":431,"column":6,"nodeType":"734","endLine":431,"endColumn":23,"suggestions":"957"},{"ruleId":"736","severity":1,"message":"737","line":441,"column":13,"nodeType":"738","endLine":447,"endColumn":15},{"ruleId":"736","severity":1,"message":"737","line":450,"column":13,"nodeType":"738","endLine":456,"endColumn":15},{"ruleId":"736","severity":1,"message":"737","line":505,"column":15,"nodeType":"738","endLine":505,"endColumn":38},{"ruleId":"732","severity":1,"message":"758","line":12,"column":10,"nodeType":"734","endLine":12,"endColumn":36,"suggestions":"958"},{"ruleId":"712","severity":1,"message":"959","line":5,"column":8,"nodeType":"714","messageId":"715","endLine":5,"endColumn":16},{"ruleId":"712","severity":1,"message":"960","line":6,"column":8,"nodeType":"714","messageId":"715","endLine":6,"endColumn":15},{"ruleId":"712","severity":1,"message":"961","line":26,"column":8,"nodeType":"714","messageId":"715","endLine":26,"endColumn":20},{"ruleId":"712","severity":1,"message":"962","line":45,"column":10,"nodeType":"714","messageId":"715","endLine":45,"endColumn":24},{"ruleId":"732","severity":1,"message":"758","line":92,"column":6,"nodeType":"734","endLine":92,"endColumn":37,"suggestions":"963"},{"ruleId":"747","severity":1,"message":"748","line":410,"column":29,"nodeType":"722","messageId":"749","endLine":410,"endColumn":31},{"ruleId":"727","severity":1,"message":"728","line":806,"column":23,"nodeType":"729","messageId":"730","endLine":806,"endColumn":30},{"ruleId":"736","severity":1,"message":"737","line":824,"column":29,"nodeType":"738","endLine":824,"endColumn":79},{"ruleId":"736","severity":1,"message":"737","line":834,"column":25,"nodeType":"738","endLine":837,"endColumn":27},{"ruleId":"736","severity":1,"message":"737","line":838,"column":25,"nodeType":"738","endLine":841,"endColumn":27},"no-native-reassign",["964"],"no-negated-in-lhs",["965"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Confirmation' is defined but never used.","'useSelector' is defined but never used.","'chain' is assigned a value but never used.","'addChain' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Redirect' is defined but never used.","'AddLiquidity' is defined but never used.","'rootName' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'UserService' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addListeners', 'dispatch', and 'walletType'. Either include them or remove the dependency array.","ArrayExpression",["966"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'AUDIT' is defined but never used.","'DOCS' is defined but never used.","'INSURANCE_FUND' is defined but never used.","'LOTTERY' is defined but never used.","'NIOB_SHARING' is defined but never used.","'PREDICTION_TRAINING' is defined but never used.","'TRADING_FEE_CASHBACK' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"967","text":"968"},{"range":"969","text":"968"},{"range":"970","text":"968"},"'useState' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["971"],"'colLiquidity' is assigned a value but never used.","'handleComponent' is assigned a value but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'searchTokenByNameOrAddress' is defined but never used.","'ANCHOR' is defined but never used.","'TransactionModal' is defined but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","'showAPY' is assigned a value but never used.","'roiModalData' is assigned a value but never used.","'poolLength' is assigned a value but never used.","'lpDetails' is assigned a value but never used.","'selectedPairId' is assigned a value but never used.","'cloaseRoiModal' is assigned a value but never used.",["972"],"'TOKEN_LIST' is defined but never used.","'history' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'getSortedPools' is assigned a value but never used.",["973"],"'activePoolsToSort' is assigned a value but never used.","'stakingOnlyArrayToSort' is assigned a value but never used.","'handleROIModal' is assigned a value but never used.","'NIOB' is defined but never used.","'BUSD' is defined but never used.","'BTCB' is defined but never used.","'Statement' is defined but never used.","'BURN_ADDRESS' is defined but never used.","'addTransaction' is defined but never used.","'potDetails' is assigned a value but never used.","'setPotDetails' is assigned a value but never used.","'rewards' is assigned a value but never used.","'seRewards' is assigned a value but never used.","'transferTaxRate' is assigned a value but never used.","'setTransferTaxRate' is assigned a value but never used.","'walletShow' is assigned a value but never used.","'setWalletShow' is assigned a value but never used.","'farms' is assigned a value but never used.","'setFarms' is assigned a value but never used.","'inactiveFarms' is assigned a value but never used.","'setInactiveFarms' is assigned a value but never used.","'stakingOnly' is assigned a value but never used.","'setStakingOnly' is assigned a value but never used.","'stakeData' is assigned a value but never used.","'setStakeData' is assigned a value but never used.","'stakeValue' is assigned a value but never used.","'setStakeValue' is assigned a value but never used.","'referrer' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'totalRewards' is assigned a value but never used.","'anchorBnbWorth' is assigned a value but never used.","'setAnchorBnbWorth' is assigned a value but never used.","'anchorBusdWorth' is assigned a value but never used.","'setAnchorBusdWorth' is assigned a value but never used.","'tokenIds' is assigned a value but never used.","'setTokenIds' is assigned a value but never used.","'allowance' is assigned a value but never used.","'setAllowance' is assigned a value but never used.","'disable' is assigned a value but never used.","'setDisabledBUtton' is assigned a value but never used.","'IButton' is assigned a value but never used.","'setIButton' is assigned a value but never used.","'ticketWindow' is assigned a value but never used.","'openTicketWindow' is assigned a value but never used.","'ticketValue' is assigned a value but never used.","'setvalue' is assigned a value but never used.","'buyButton' is assigned a value but never used.","'setBuyButton' is assigned a value but never used.","'loader' is assigned a value but never used.","'setLoader' is assigned a value but never used.","'currentTicketsArray' is assigned a value but never used.","'setCurrentArray' is assigned a value but never used.","'showHarvest' is assigned a value but never used.","'harvest' is assigned a value but never used.","'stakeConfirmation' is assigned a value but never used.","'setStakeConfimation' is assigned a value but never used.","'showTransactionModal' is assigned a value but never used.","'setShowTransactionModal' is assigned a value but never used.","'txHash' is assigned a value but never used.","'setTxHash' is assigned a value but never used.","'niobApr' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'init', and 'ref'. Either include them or remove the dependency array.",["974"],"'tokenZeroPairUSDT' is assigned a value but never used.","'tokenOnePairUSDT' is assigned a value but never used.","'tokenZeroPairBNB' is assigned a value but never used.","'tokenOnePairBNB' is assigned a value but never used.",{"range":"975","text":"976"},{"range":"977","text":"968"},{"range":"978","text":"968"},["979"],"'closeTransactionModal' is assigned a value but never used.","'r' is assigned a value but never used.","'tkList' is assigned a value but never used.","'walletConnectProvider' is assigned a value but never used.","'results' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'value' is assigned a value but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'NIOBIcon' is defined but never used.","'BNBIcon' is defined but never used.","'SwitchIcon' is defined but never used.","'Button' is defined but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'show1' is assigned a value but never used.","'classToggle' is assigned a value but never used.","'setClassToggle' is assigned a value but never used.","'tokenOneApproved' is assigned a value but never used.","'tokenTwoApproved' is assigned a value but never used.","'lpTokenBalance' is assigned a value but never used.","'showSupplyModal' is assigned a value but never used.","'liquidityConfirmation' is assigned a value but never used.","'currentPairAddress' is assigned a value but never used.","'firstProvider' is assigned a value but never used.","'showPoolShare' is assigned a value but never used.","'showSettings' is assigned a value but never used.","'slippageTolerance' is assigned a value but never used.","'setSlippageTolerance' is assigned a value but never used.","'existingPair' is assigned a value but never used.","'setPairAddress' is assigned a value but never used.",["980"],"React Hook useEffect has missing dependencies: 'handleTokenValue' and 'tokenOneValue'. Either include them or remove the dependency array.",["981"],"'handleCloseSettings' is assigned a value but never used.","'is_visible' is assigned a value but never used.","'Link' is defined but never used.","'handleChange' is assigned a value but never used.","'isAdded' is assigned a value but never used.","'handleTokenList' is assigned a value but never used.","'handleRemoveTokenList' is assigned a value but never used.","'tokenBalance' is assigned a value but never used.","'data' is assigned a value but never used.","'startLoading' is defined but never used.","'stopLoading' is defined but never used.","'PersistActions' is defined but never used.","'state' is assigned a value but never used.","'BTC' is defined but never used.","'ETH' is defined but never used.","'ADA' is defined but never used.","'defaultImg' is defined but never used.","'USDT' is defined but never used.","'POLKADOT' is defined but never used.","'TRON' is defined but never used.","'CAKE' is defined but never used.","'recentTransactions' is assigned a value but never used.","'pid' is assigned a value but never used.","'Card' is defined but never used.","'closeBtn' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'toast' is defined but never used.","'niobWithdrawable' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'init', 'props.isNiobWithdrawabe', and 'props?.stakeData?.isLocked'. Either include them or remove the dependency array.",["982"],"'index' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'status' is assigned a value but never used.","'totalSupply' is assigned a value but never used.","'pantherAddress' is assigned a value but never used.","'dollarValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAnchorDollarValue' and 'init'. Either include them or remove the dependency array.",["983"],"'price' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TokenBalance' is defined but never used.","'handleCloseRecent' is assigned a value but never used.",["984"],"'toggleDropdwon' is assigned a value but never used.","'ConnectWallet' is defined but never used.","'ButtonPrimary' is defined but never used.","'SelectCoin' is defined but never used.","'Plusicon' is defined but never used.","'MAIN_CONTRACT_LIST' is defined but never used.","'ContractServices' is defined but never used.","'checkUserLpTokens' is defined but never used.","'BigNumber' is defined but never used.","'SupplyModal' is defined but never used.","'RecentTransactions' is defined but never used.","'handleClose1' is assigned a value but never used.","'handleShow1' is assigned a value but never used.","'ButtonCustom' is defined but never used.","'handleRoiModal' is assigned a value but never used.","'roi' is assigned a value but never used.","'handleDefaultIcon' is assigned a value but never used.",["985"],["986"],"'NiobIcon' is defined but never used.","'BnbIcon' is defined but never used.","'iconDropDown' is defined but never used.","'sharePoolValue' is assigned a value but never used.",["987"],"no-global-assign","no-unsafe-negation",{"desc":"988","fix":"989"},[8410,8410]," rel=\"noreferrer\"",[8667,8667],[8816,8816],{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"992","fix":"994"},{"desc":"995","fix":"996"},[20277,20289],"\"stylesheet noreferrer\"",[21406,21406],[22564,22564],{"desc":"997","fix":"998"},{"desc":"997","fix":"999"},{"desc":"1000","fix":"1001"},{"desc":"1002","fix":"1003"},{"desc":"1004","fix":"1005"},{"desc":"992","fix":"1006"},{"desc":"1004","fix":"1007"},{"desc":"1008","fix":"1009"},{"desc":"1010","fix":"1011"},"Update the dependencies array to be: [addListeners, dispatch, walletType]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [init]",{"range":"1014","text":"1015"},"Update the dependencies array to be: [init, isUserConnected]",{"range":"1016","text":"1017"},{"range":"1018","text":"1017"},"Update the dependencies array to be: [dispatch, init, isUserConnected, ref]",{"range":"1019","text":"1020"},"Update the dependencies array to be: [init, search, tokenList]",{"range":"1021","text":"1022"},{"range":"1023","text":"1022"},"Update the dependencies array to be: [tokenTwo, tokenTwoCurrency, tokenTwoBalance, tokenTwoIcon, tokenOneValue, handleTokenValue]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [init, props.isNiobWithdrawabe, props?.stakeData?.isLocked]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [getAnchorDollarValue, init, isUserConnected]",{"range":"1028","text":"1029"},{"range":"1030","text":"1017"},{"range":"1031","text":"1029"},"Update the dependencies array to be: [isUserConnected, address, init]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [search, tokenList, props.show, init]",{"range":"1034","text":"1035"},[1173,1175],"[addListeners, dispatch, walletType]",[1140,1142],"[init]",[3906,3923],"[init, isUserConnected]",[4535,4552],[5000,5017],"[dispatch, init, isUserConnected, ref]",[4590,4609],"[init, search, tokenList]",[5411,5430],[5536,5595],"[tokenTwo, tokenTwoCurrency, tokenTwoBalance, tokenTwoIcon, tokenOneValue, handleTokenValue]",[523,525],"[init, props.isNiobWithdrawabe, props?.stakeData?.isLocked]",[2707,2724],"[getAnchorDollarValue, init, isUserConnected]",[2107,2124],[14545,14562],[392,418],"[isUserConnected, address, init]",[3964,3995],"[search, tokenList, props.show, init]"]